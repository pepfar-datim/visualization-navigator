{"ast":null,"code":"export let FilterType;\n\n(function (FilterType) {\n  FilterType[\"name\"] = \"name\";\n  FilterType[\"views\"] = \"views\";\n  FilterType[\"lastViewed\"] = \"lastViewed\";\n  FilterType[\"owner\"] = \"owner\";\n  FilterType[\"type\"] = \"type\";\n})(FilterType || (FilterType = {}));\n\nexport let FilterOperatorType;\n\n(function (FilterOperatorType) {\n  FilterOperatorType[\"equalTo\"] = \"equalTo\";\n  FilterOperatorType[\"lessThan\"] = \"lessThan\";\n  FilterOperatorType[\"greaterThan\"] = \"greaterThan\";\n})(FilterOperatorType || (FilterOperatorType = {}));\n\nexport let FilterOperator;\n\n(function (FilterOperator) {\n  FilterOperator[\"contains\"] = \"contains\";\n  FilterOperator[\"less\"] = \"=>\";\n  FilterOperator[\"greater\"] = \"<=\";\n  FilterOperator[\"is\"] = \"is\";\n  FilterOperator[\"after\"] = \"after\";\n  FilterOperator[\"before\"] = \"before\";\n  FilterOperator[\"never\"] = \"never\";\n})(FilterOperator || (FilterOperator = {}));\n\nexport function getFilterOperators(filterType) {\n  switch (filterType) {\n    case FilterType.name:\n      return [FilterOperator.contains];\n\n    case FilterType.views:\n      return [FilterOperator.less, FilterOperator.greater];\n\n    case FilterType.lastViewed:\n      return [FilterOperator.before, FilterOperator.after];\n\n    case FilterType.owner:\n      return [FilterOperator.contains];\n\n    case FilterType.type:\n      return [FilterOperator.is];\n  }\n}\nexport const allFilters = Object.values(FilterType);","map":{"version":3,"names":["FilterType","FilterOperatorType","FilterOperator","getFilterOperators","filterType","name","contains","views","less","greater","lastViewed","before","after","owner","type","is","allFilters","Object","values"],"sources":["/home/jake/SRC/visualization-navigator-ts/src/modules/searchFilters/types/searchFilters.type.ts"],"sourcesContent":["export enum FilterType{\n    name='name',\n    views='views',\n    lastViewed='lastViewed',\n    owner='owner',\n    type='type'\n}\n\nexport enum FilterOperatorType{\n    equalTo='equalTo',\n    lessThan='lessThan',\n    greaterThan='greaterThan'\n}\n\nexport enum FilterOperator {\n    contains='contains',\n    less='=>',\n    greater='<=',\n    is='is',\n    after='after',\n    before='before',\n    never='never'\n}\n\nexport function getFilterOperators(filterType:FilterType){\n    switch (filterType){\n        case FilterType.name:\n            return [FilterOperator.contains]\n        case FilterType.views:\n            return [FilterOperator.less, FilterOperator.greater]\n        case FilterType.lastViewed:\n            return [FilterOperator.before, FilterOperator.after]\n        case FilterType.owner:\n            return [FilterOperator.contains]\n        case FilterType.type:\n            return [FilterOperator.is]\n    }\n}\n\nexport const allFilters:string[] = Object.values(FilterType);\n\nexport type SearchFilter = {\n    filterType:FilterType|null,\n    value:string|null,\n    operator: FilterOperator\n}"],"mappings":"AAAA,WAAYA,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAQZ,WAAYC,kBAAZ;;WAAYA,kB;EAAAA,kB;EAAAA,kB;EAAAA,kB;GAAAA,kB,KAAAA,kB;;AAMZ,WAAYC,cAAZ;;WAAYA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;EAAAA,c;GAAAA,c,KAAAA,c;;AAUZ,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAkD;EACrD,QAAQA,UAAR;IACI,KAAKJ,UAAU,CAACK,IAAhB;MACI,OAAO,CAACH,cAAc,CAACI,QAAhB,CAAP;;IACJ,KAAKN,UAAU,CAACO,KAAhB;MACI,OAAO,CAACL,cAAc,CAACM,IAAhB,EAAsBN,cAAc,CAACO,OAArC,CAAP;;IACJ,KAAKT,UAAU,CAACU,UAAhB;MACI,OAAO,CAACR,cAAc,CAACS,MAAhB,EAAwBT,cAAc,CAACU,KAAvC,CAAP;;IACJ,KAAKZ,UAAU,CAACa,KAAhB;MACI,OAAO,CAACX,cAAc,CAACI,QAAhB,CAAP;;IACJ,KAAKN,UAAU,CAACc,IAAhB;MACI,OAAO,CAACZ,cAAc,CAACa,EAAhB,CAAP;EAVR;AAYH;AAED,OAAO,MAAMC,UAAmB,GAAGC,MAAM,CAACC,MAAP,CAAclB,UAAd,CAA5B"},"metadata":{},"sourceType":"module"}