"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.VirtualElementRef = exports.TopStart = exports.TopEnd = exports.Top = exports.RightStart = exports.RightEnd = exports.Right = exports.LeftStart = exports.LeftEnd = exports.Left = exports.ElementRef = exports.BottomStart = exports.BottomEnd = exports.Bottom = void 0;

var _uiConstants = require("@dhis2/ui-constants");

var _react = _interopRequireWildcard(require("react"));

var _popper = require("./popper.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const description = "\nA tool for adding additional information or content outside of the document flow, used for example in the Tooltip or Popover components.\n\nSince it's built using [Popper.js](https://popper.js.org/docs/v2/) and [react-popper](https://popper.js.org/react-popper/), some of that functionality can be accessed through the props of this component, like modifiers.\n\n```js\nimport { Popper } from '@dhis2/ui'\n```\n\n_**Note**: Some of the stories may not look right on this page. View those examples in the 'Canvas' tab instead._\n";
var _default = {
  title: 'Popper',
  component: _popper.Popper,
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  argTypes: {
    placement: { ..._uiConstants.sharedPropTypes.popperPlacementArgType
    },
    reference: { ..._uiConstants.sharedPropTypes.popperReferenceArgType
    }
  }
};
exports.default = _default;
const boxStyle = {
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  width: 400,
  height: 400,
  backgroundColor: 'aliceblue'
};
const referenceElementStyle = {
  width: 130,
  height: 50,
  backgroundColor: 'cadetblue',
  textAlign: 'center',
  padding: 6
};
const popperStyle = {
  width: 110,
  height: 30,
  backgroundColor: 'lightblue',
  textAlign: 'center',
  padding: 6
};

const Template = args => {
  const ref = (0, _react.useRef)(null);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "box",
    style: boxStyle
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "reference-element",
    style: referenceElementStyle,
    ref: ref
  }, "Reference Element"), /*#__PURE__*/_react.default.createElement(_popper.Popper, _extends({}, args, {
    reference: ref
  }), /*#__PURE__*/_react.default.createElement("div", {
    style: popperStyle
  }, args.placement)));
};

const Top = Template.bind({});
exports.Top = Top;
Top.args = {
  placement: 'top'
};
const TopStart = Template.bind({});
exports.TopStart = TopStart;
TopStart.args = {
  placement: 'top-start'
};
const TopEnd = Template.bind({});
exports.TopEnd = TopEnd;
TopEnd.args = {
  placement: 'top-end'
};
const Bottom = Template.bind({});
exports.Bottom = Bottom;
Bottom.args = {
  placement: 'bottom'
};
const BottomStart = Template.bind({});
exports.BottomStart = BottomStart;
BottomStart.args = {
  placement: 'bottom-start'
};
const BottomEnd = Template.bind({});
exports.BottomEnd = BottomEnd;
BottomEnd.args = {
  placement: 'bottom-end'
};
const Right = Template.bind({});
exports.Right = Right;
Right.args = {
  placement: 'right'
};
const RightStart = Template.bind({});
exports.RightStart = RightStart;
RightStart.args = {
  placement: 'right-start'
};
const RightEnd = Template.bind({});
exports.RightEnd = RightEnd;
RightEnd.args = {
  placement: 'right-end'
};
const Left = Template.bind({});
exports.Left = Left;
Left.args = {
  placement: 'left'
};
const LeftStart = Template.bind({});
exports.LeftStart = LeftStart;
LeftStart.args = {
  placement: 'left-start'
};
const LeftEnd = Template.bind({});
exports.LeftEnd = LeftEnd;
LeftEnd.args = {
  placement: 'left-end'
};

const ElementRef = args => {
  const anchor = document.createElement('div');
  document.body.appendChild(anchor);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "box",
    style: { ...boxStyle,
      marginBottom: '500px'
    }
  }, /*#__PURE__*/_react.default.createElement(_popper.Popper, _extends({}, args, {
    reference: anchor
  }), /*#__PURE__*/_react.default.createElement("div", {
    style: popperStyle
  }, args.placement)));
};

exports.ElementRef = ElementRef;
ElementRef.args = {
  placement: 'left-end'
};
ElementRef.parameters = {
  docs: {
    source: {
      type: 'code'
    }
  }
};

const VirtualElementRef = args => {
  const virtualElement = {
    getBoundingClientRect: () => ({
      width: 0,
      height: 0,
      top: 100,
      right: 0,
      bottom: 0,
      left: 200,
      x: 200,
      y: 100
    })
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "box",
    style: { ...boxStyle,
      marginBottom: '500px'
    }
  }, /*#__PURE__*/_react.default.createElement(_popper.Popper, _extends({}, args, {
    reference: virtualElement
  }), /*#__PURE__*/_react.default.createElement("div", {
    style: popperStyle
  }, args.placement)));
};

exports.VirtualElementRef = VirtualElementRef;
VirtualElementRef.args = {
  placement: 'left-end'
};
VirtualElementRef.parameters = {
  docs: {
    source: {
      type: 'code'
    }
  }
};