import _JSXStyle from "styled-jsx/style";
import { mutuallyExclusive } from '@dhis2/prop-types';
import { spacers, colors } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { NoticeBoxIcon } from './notice-box-icon.js';
import { NoticeBoxMessage } from './notice-box-message.js';
import { NoticeBoxTitle } from './notice-box-title.js';
export const NoticeBox = _ref => {
  let {
    className,
    children,
    dataTest,
    title,
    warning,
    error
  } = _ref;
  const classnames = cx(className, 'root', {
    warning,
    error
  });
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["833500449", [colors.blue050, colors.blue200, spacers.dp12, spacers.dp16, colors.yellow050, colors.yellow200, colors.red050, colors.red500]]]) + " " + (classnames || "")
  }, /*#__PURE__*/React.createElement(NoticeBoxIcon, {
    error: error,
    warning: warning,
    dataTest: "".concat(dataTest, "-icon")
  }), /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["833500449", [colors.blue050, colors.blue200, spacers.dp12, spacers.dp16, colors.yellow050, colors.yellow200, colors.red050, colors.red500]]])
  }, /*#__PURE__*/React.createElement(NoticeBoxTitle, {
    title: title,
    dataTest: "".concat(dataTest, "-title")
  }), /*#__PURE__*/React.createElement(NoticeBoxMessage, {
    dataTest: "".concat(dataTest, "-message")
  }, children)), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "833500449",
    dynamic: [colors.blue050, colors.blue200, spacers.dp12, spacers.dp16, colors.yellow050, colors.yellow200, colors.red050, colors.red500]
  }, [".root.__jsx-style-dynamic-selector{background:".concat(colors.blue050, ";border:1px solid ").concat(colors.blue200, ";border-radius:3px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:").concat(spacers.dp12, " ").concat(spacers.dp16, ";}"), ".root.warning.__jsx-style-dynamic-selector{background:".concat(colors.yellow050, ";border:1px solid ").concat(colors.yellow200, ";}"), ".root.error.__jsx-style-dynamic-selector{background:".concat(colors.red050, ";border:2px solid ").concat(colors.red500, ";}")]));
};
NoticeBox.defaultProps = {
  dataTest: 'dhis2-uicore-noticebox'
};
NoticeBox.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,

  /** Applies 'error' message styles. Mutually exclusive with the `warning` prop */
  error: mutuallyExclusive(['error', 'warning'], PropTypes.bool),
  title: PropTypes.string,

  /** Applies 'warning' message styles. Mutually exclusive with the `error` prop */
  warning: mutuallyExclusive(['error', 'warning'], PropTypes.bool)
};