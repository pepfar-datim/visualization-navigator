import _JSXStyle from "styled-jsx/style";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { spacers } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React, { Component } from 'react';

class Action extends Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "onClick", event => {
      this.props.onClick(event);
      this.props.hide(event);
    });
  }

  render() {
    return /*#__PURE__*/React.createElement("span", {
      onClick: this.onClick,
      "data-test": this.props.dataTest,
      className: _JSXStyle.dynamic([["663141299", [spacers.dp12]]])
    }, this.props.label, /*#__PURE__*/React.createElement(_JSXStyle, {
      id: "663141299",
      dynamic: [spacers.dp12]
    }, ["span.__jsx-style-dynamic-selector{margin-right:".concat(spacers.dp12, ";-webkit-text-decoration:underline;text-decoration:underline;}"), "span.__jsx-style-dynamic-selector:hover{cursor:pointer;}"]));
  }

}

Action.propTypes = {
  dataTest: PropTypes.string.isRequired,
  hide: PropTypes.func.isRequired,
  label: PropTypes.string.isRequired,
  onClick: PropTypes.func.isRequired
};
export { Action };