"use strict";

var _steps = require("cypress-cucumber-preprocessor/steps");

(0, _steps.Given)('there is enough space between the reference element top and the body top to fit the Tooltip', () => {
  cy.visitStory('Tooltip', 'Default');
});
(0, _steps.Given)('there is not enough space above or below the anchor to fit the Tooltip', () => {
  cy.visitStory('Tooltip', 'Shifting Position');
});
(0, _steps.When)('the mouse cursor enters the anchor', () => {
  cy.get('[data-test="dhis2-uicore-tooltip-reference"]').trigger('mouseover', 'top');
});
(0, _steps.Then)('the Tooltip is rendered above the anchor', () => {
  cy.getPositionsBySelectors('[data-test="dhis2-uicore-tooltip-reference"]', '[data-test="dhis2-uicore-tooltip-content"]').should(_ref => {
    let [refPos, contentPos] = _ref;
    expect(refPos.top).to.be.greaterThan(contentPos.bottom);
  });
});
(0, _steps.Then)('the Tooltip stays visible', () => {
  cy.clock();
  cy.tick(800);
  cy.get('[data-test="dhis2-uicore-tooltip-content"]').should('exist');
});
(0, _steps.Then)('the Tooltip is rendered on top of the anchor', () => {
  cy.getPositionsBySelectors('[data-test="dhis2-uicore-tooltip-reference"]', '[data-test="dhis2-uicore-tooltip-content"]').should(_ref2 => {
    let [refPos, contentPos] = _ref2;
    expect(contentPos.bottom).to.be.greaterThan(refPos.top);
    expect(refPos.top).to.be.greaterThan(contentPos.top);
  });
});