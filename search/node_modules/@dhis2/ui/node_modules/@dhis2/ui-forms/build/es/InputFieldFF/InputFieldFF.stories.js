import React from 'react';
import { Field } from 'react-final-form';
import { formDecorator } from '../formDecorator.js';
import { inputArgType, metaArgType } from '../shared/propTypes.js';
import { hasValue } from '../validators/index.js';
import { InputFieldFF } from './InputFieldFF.js';
const description = "\nThe `InputFieldFF` is a wrapper around a `InputField` that enables it to work with Final Form, the preferred library for form validation and utilities in DHIS 2 apps.\n\n#### Final Form\n\nSee how to use Final Form at [Final Form - Getting Started](https://final-form.org/docs/react-final-form/getting-started).\n\nInside a Final Form `<Form>` component, these 'FF' UI components are intended to be used in the `component` prop of the [Final Form `<Field>` components](https://final-form.org/docs/react-final-form/api/Field) where they will receive some props from the Field, e.g. `<Field component={InputFieldFF} />`.  See the code samples below for examples.\n\n#### Props\n\nThe props shown in the table below are generally provided to the `InputFieldFF` wrapper by the Final Form `Field`.\n\nNote that any props beyond the API of the `Field` component will be spread to the `InputFieldFF`, which passes any extra props to the underlying `InputField` using `{...rest}`.\n\nTherefore, to add any props to the `InputFieldFF` or `InputField`, add those props to the parent Final Form `Field` component.\n\nAlso see `InputField` for notes about props and implementation.\n\n```js\nimport { InputFieldFF } from '@dhis2/ui'\n```\n\nPress **Submit** to see the form values logged to the console.\n";
export default {
  title: 'Input Field (Final Form)',
  component: InputFieldFF,
  decorators: [formDecorator],
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  argTypes: {
    input: { ...inputArgType
    },
    meta: { ...metaArgType
    }
  }
};
export const Default = () => /*#__PURE__*/React.createElement(Field, {
  component: InputFieldFF,
  name: "agree",
  label: "Do you agree?"
});
export const Required = () => /*#__PURE__*/React.createElement(Field, {
  name: "agree",
  component: InputFieldFF,
  required: true,
  validate: hasValue,
  label: "Do you agree?"
});
export const Disabled = () => /*#__PURE__*/React.createElement(Field, {
  name: "agree",
  component: InputFieldFF,
  disabled: true,
  label: "Do you agree?"
});
export const HelpText = () => /*#__PURE__*/React.createElement(Field, {
  name: "agree",
  component: InputFieldFF,
  label: "Do you agree?",
  helpText: "Click to agree"
});
HelpText.storyName = 'Help text';
export const Statuses = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Field, {
  name: "valid",
  component: InputFieldFF,
  label: "Valid",
  valid: true,
  validationText: "Validation text"
}), /*#__PURE__*/React.createElement(Field, {
  name: "warning",
  component: InputFieldFF,
  label: "Warning",
  warning: true,
  validationText: "Validation text"
}), /*#__PURE__*/React.createElement(Field, {
  name: "error",
  component: InputFieldFF,
  label: "Error",
  error: true,
  validationText: "Validation text"
}));