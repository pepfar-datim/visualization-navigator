function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import PropTypes from 'prop-types';
import React, { forwardRef } from 'react';
export const TableHead = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    children,
    className,
    dataTest,
    role,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement("thead", _extends({}, props, {
    className: className,
    "data-test": dataTest,
    ref: ref,
    role: role
  }), children);
});
TableHead.displayName = 'TableHead';
TableHead.defaultProps = {
  dataTest: 'dhis2-uicore-tablehead'
};
TableHead.propTypes = {
  /** Should be `<TableRowHead>` components */
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  role: PropTypes.string
};