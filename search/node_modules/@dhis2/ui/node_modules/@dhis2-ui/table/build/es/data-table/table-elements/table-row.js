import _JSXStyle from "styled-jsx/style";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import cx from 'classnames';
import PropTypes from 'prop-types';
import React, { forwardRef } from 'react';
export const TableRow = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    children,
    className,
    dataTest,
    draggable,
    role,
    selected,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement("tr", _extends({}, props, {
    ref: ref,
    "data-test": dataTest,
    role: role,
    className: "jsx-1820444258" + " " + (cx(className, {
      selected,
      draggable
    }) || "")
  }), children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1820444258"
  }, ["tbody>tr.draggable.jsx-1820444258,tfoot>tr.draggable.jsx-1820444258{cursor:move;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}"]));
});
TableRow.displayName = 'TableRow';
TableRow.defaultProps = {
  dataTest: 'dhis2-uicore-tablerow'
};
TableRow.propTypes = {
  /** Should be `<TableDataCell>` or `<TableDataCellHead>` components */
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,

  /** Applies draggable cursor styles */
  draggable: PropTypes.bool,
  role: PropTypes.string,

  /** Sets a selected (teal) background color */
  selected: PropTypes.bool
};