"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataTableColumnHeader = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _propTypes = require("@dhis2/prop-types");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes2 = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _index = require("../table-elements/index.js");

var _dataTableColumnHeaderStyles = require("./data-table-column-header.styles.js");

var _filterHandle = require("./filter-handle.js");

var _sorter = require("./sorter.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const flexboxAlignLookup = {
  left: 'flex-start',
  center: 'center',
  right: 'flex-end'
};
const DataTableColumnHeader = /*#__PURE__*/(0, _react.forwardRef)((_ref, ref) => {
  let {
    align,
    children,
    className,
    colSpan,
    dataTest,
    filter,
    fixed,
    large,
    left,
    name,
    role,
    rowSpan,
    scope,
    showFilter,
    sortDirection,
    sortIconTitle,
    top,
    width,
    onFilterIconClick,
    onSortIconClick
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_index.TableHeaderCell, {
    align: align,
    className: (0, _classnames.default)(className, 'DataTableColumnHeader', _dataTableColumnHeaderStyles.resolvedTableHeaderCss.className),
    colSpan: colSpan,
    dataTest: dataTest,
    fixed: fixed,
    large: large,
    left: left,
    ref: ref,
    rowSpan: rowSpan,
    role: role,
    scope: scope,
    top: top,
    width: width
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "jsx-3463223249 " + "jsx-".concat(_dataTableColumnHeaderStyles.styles.__hash) + " " + "container"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "jsx-3463223249 " + "jsx-".concat(_dataTableColumnHeaderStyles.styles.__hash) + " " + ((0, _classnames.default)('top', {
      large
    }) || "")
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "jsx-3463223249 " + "jsx-".concat(_dataTableColumnHeaderStyles.styles.__hash) + " " + "content"
  }, children), sortDirection && /*#__PURE__*/_react.default.createElement(_sorter.Sorter, {
    name: name,
    sortDirection: sortDirection,
    onClick: onSortIconClick,
    title: sortIconTitle
  }), filter && /*#__PURE__*/_react.default.createElement(_filterHandle.FilterHandle, {
    name: name,
    active: showFilter,
    onClick: onFilterIconClick
  })), showFilter && filter), _dataTableColumnHeaderStyles.resolvedTableHeaderCss.styles, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: _dataTableColumnHeaderStyles.styles.__hash
  }, _dataTableColumnHeaderStyles.styles), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3463223249"
  }, [".label.jsx-3463223249{-webkit-box-pack:".concat(flexboxAlignLookup[align], ";-webkit-justify-content:").concat(flexboxAlignLookup[align], ";-ms-flex-pack:").concat(flexboxAlignLookup[align], ";justify-content:").concat(flexboxAlignLookup[align], ";}")]));
});
exports.DataTableColumnHeader = DataTableColumnHeader;
DataTableColumnHeader.displayName = 'DataTableColumnHeader';
DataTableColumnHeader.defaultProps = {
  dataTest: 'dhis2-uicore-datatablecellhead'
};
DataTableColumnHeader.propTypes = {
  align: _propTypes2.default.oneOf(['left', 'center', 'right']),
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  colSpan: _propTypes2.default.string,
  dataTest: _propTypes2.default.string,

  /** The filter element (JSX), required when onFilterIconClick or showFilter are present */
  filter: (0, _propTypes.requiredIf)(props => props.onFilterIconClick || props.showFilter, _propTypes2.default.node),
  fixed: _propTypes2.default.bool,
  large: _propTypes2.default.bool,

  /** Left or top required when fixed */
  left: (0, _propTypes.requiredIf)(props => props.fixed && !props.top, _propTypes2.default.string),

  /** Can be used to match a column with a property name */
  name: _propTypes2.default.string,
  role: _propTypes2.default.string,
  rowSpan: _propTypes2.default.string,
  scope: _propTypes2.default.string,
  showFilter: (0, _propTypes.requiredIf)(props => props.filter, _propTypes2.default.bool),
  sortDirection: (0, _propTypes.requiredIf)(props => props.onSortIconClick, _propTypes2.default.oneOf(_sorter.SORT_DIRECTIONS)),
  sortIconTitle: _propTypes2.default.string,

  /** Left or top required when fixed */
  top: (0, _propTypes.requiredIf)(props => props.fixed && !props.left, _propTypes2.default.string),
  width: _propTypes2.default.string,
  onFilterIconClick: (0, _propTypes.requiredIf)(props => props.filter, _propTypes2.default.func),

  /** Sort icon click callback with `nextSortDirection` and `name` in payload */
  onSortIconClick: (0, _propTypes.requiredIf)(props => props.sortDirection, _propTypes2.default.func)
};