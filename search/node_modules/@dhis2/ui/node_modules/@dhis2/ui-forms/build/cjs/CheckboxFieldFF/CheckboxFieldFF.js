"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckboxFieldFF = void 0;

var _checkbox = require("@dhis2-ui/checkbox");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _helpers = require("../shared/helpers.js");

var _propTypes2 = require("../shared/propTypes.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const CheckboxFieldFF = _ref => {
  let {
    error,
    input,
    meta,
    showValidStatus,
    valid,
    validationText,
    onBlur,
    onFocus,
    ...rest
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_checkbox.CheckboxField, _extends({}, rest, {
    name: input.name,
    checked: input.checked,
    value: input.value,
    error: (0, _helpers.hasError)(meta, error),
    valid: (0, _helpers.isValid)(meta, valid, showValidStatus),
    validationText: (0, _helpers.getValidationText)(meta, validationText, error),
    onFocus: (0, _helpers.createFocusHandler)(input, onFocus),
    onChange: (0, _helpers.createToggleChangeHandler)(input),
    onBlur: (0, _helpers.createBlurHandler)(input, onBlur)
  }));
};

exports.CheckboxFieldFF = CheckboxFieldFF;
CheckboxFieldFF.propTypes = {
  /** Provided by Final Form `Field` */
  input: _propTypes2.inputPropType.isRequired,

  /** Provided by Final Form `Field` */
  meta: _propTypes2.metaPropType.isRequired,
  error: _propTypes.default.bool,
  showValidStatus: _propTypes.default.bool,
  valid: _propTypes.default.bool,
  validationText: _propTypes.default.string,
  onBlur: _propTypes.default.func,
  onFocus: _propTypes.default.func
};