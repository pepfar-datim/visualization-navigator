"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MissingProps = exports.Controlled = void 0;

var _button = require("@dhis2-ui/button");

var _react = _interopRequireWildcard(require("react"));

var _index = require("../index.js");

var _common = require("./common.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

window.initiallyExpandedPaths = ['/A0000000000/A0000000001'];
window.orgUnitPathToExpand = '/A0000000000/A0000000001';
var _default = {
  title: _common.namespace,
  decorators: [(0, _common.createDecoratorCustomDataProvider)()]
};
exports.default = _default;

const Controlled = () => {
  const initiallyExpanded = (0, _index.getAllExpandedOrgUnitPaths)(window.initiallyExpandedPaths);
  const [expanded, setExpanded] = (0, _react.useState)(initiallyExpanded);

  const handleExpand = _ref => {
    let {
      path
    } = _ref;

    if (!expanded.includes(path)) {
      setExpanded([...expanded, path]);
    }
  };

  const handleCollapse = _ref2 => {
    let {
      path
    } = _ref2;
    const pathIndex = expanded.indexOf(path);

    if (pathIndex !== -1) {
      const updatedExpanded = pathIndex === 0 ? expanded.slice(1) : [...expanded.slice(0, pathIndex), ...expanded.slice(pathIndex + 1)];
      setExpanded(updatedExpanded);
    }
  };

  const imperativeToggle = () => {
    if (!expanded.includes('/A0000000000/A0000000001')) {
      // Make sure that all required sub paths are included as well
      const nextPaths = (0, _index.getAllExpandedOrgUnitPaths)([...expanded, window.orgUnitPathToExpand]);
      return setExpanded(nextPaths);
    }

    setExpanded(expanded.filter(v => v !== '/A0000000000/A0000000001'));
  };

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.OrganisationUnitTree, {
    onChange: () => null,
    name: "Root org unit",
    roots: ['A0000000000'],
    expanded: expanded,
    handleExpand: handleExpand,
    handleCollapse: handleCollapse
  }), /*#__PURE__*/_react.default.createElement("br", null), /*#__PURE__*/_react.default.createElement(_button.Button, {
    dataTest: "org-unit-toggle",
    onClick: imperativeToggle
  }, "Toggle Org Unit 2"));
};

exports.Controlled = Controlled;

const MissingProps = () => {
  const expanded = [];

  const handleExpand = () => null;

  return /*#__PURE__*/_react.default.createElement(_index.OrganisationUnitTree, {
    onChange: () => null,
    name: "Root org unit",
    roots: ['A0000000000'],
    expanded: expanded,
    handleExpand: handleExpand
  });
};

exports.MissingProps = MissingProps;