"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownButton = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _layer = require("@dhis2-ui/layer");

var _popper = require("@dhis2-ui/popper");

var _propTypes = require("@dhis2/prop-types");

var _uiConstants = require("@dhis2/ui-constants");

var _propTypes2 = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _index = require("../index.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ArrowDown(_ref) {
  let {
    className
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 12 12",
    className: "jsx-2347926856" + " " + (className || "")
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z",
    className: "jsx-2347926856"
  }), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "2347926856"
  }, ["svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}"]));
}

ArrowDown.propTypes = {
  className: _propTypes2.default.string
};

function ArrowUp(_ref2) {
  let {
    className
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 12 12",
    className: "jsx-2347926856" + " " + (className || "")
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z",
    transform: "matrix(1 0 0 -1 0 12.999974)",
    className: "jsx-2347926856"
  }), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "2347926856"
  }, ["svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}"]));
}

ArrowUp.propTypes = {
  className: _propTypes2.default.string
};
const arrow = {
  styles: /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "736002830"
  }, [".jsx-736002830{margin-left:".concat(_uiConstants.spacers.dp12, ";}")]),
  className: "jsx-736002830"
};

class DropdownButton extends _react.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      open: false
    });

    _defineProperty(this, "anchorRef", /*#__PURE__*/_react.default.createRef());

    _defineProperty(this, "onClickHandler", (_ref3, event) => {
      let {
        name,
        value
      } = _ref3;

      const handleClick = open => {
        if (this.props.onClick) {
          this.props.onClick({
            name,
            value,
            open
          }, event);
        }
      };

      if (typeof this.props.open === 'boolean') {
        handleClick(!this.props.open);
      } else {
        this.setState({
          open: !this.state.open
        }, () => {
          handleClick(this.state.open);
        });
      }
    });
  }

  render() {
    const {
      component,
      children,
      className,
      destructive,
      disabled,
      icon,
      large,
      primary,
      secondary,
      small,
      name,
      value,
      tabIndex,
      type,
      initialFocus,
      dataTest
    } = this.props;
    const open = typeof this.props.open === 'boolean' ? this.props.open : this.state.open;
    const ArrowIconComponent = open ? ArrowUp : ArrowDown;
    return /*#__PURE__*/_react.default.createElement("div", {
      ref: this.anchorRef,
      "data-test": dataTest,
      className: "jsx-3163060161"
    }, /*#__PURE__*/_react.default.createElement(_index.Button, {
      className: className,
      destructive: destructive,
      disabled: disabled,
      icon: icon,
      large: large,
      primary: primary,
      secondary: secondary,
      small: small,
      onClick: this.onClickHandler,
      name: name,
      value: value,
      tabIndex: tabIndex,
      type: type,
      initialFocus: initialFocus
    }, children, /*#__PURE__*/_react.default.createElement(ArrowIconComponent, {
      className: "jsx-3163060161" + " " + (arrow.className || "")
    })), open && /*#__PURE__*/_react.default.createElement(_layer.Layer, {
      onClick: this.onClickHandler,
      transparent: true
    }, /*#__PURE__*/_react.default.createElement(_popper.Popper, {
      dataTest: "".concat(dataTest, "-popper"),
      placement: "bottom-start",
      reference: this.anchorRef
    }, component)), arrow.styles, /*#__PURE__*/_react.default.createElement(_style.default, {
      id: "3163060161"
    }, ["div.jsx-3163060161{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;position:relative;color:inherit;white-space:nowrap;}"]));
  }

}

exports.DropdownButton = DropdownButton;
DropdownButton.defaultProps = {
  dataTest: 'dhis2-uicore-dropdownbutton'
};
DropdownButton.propTypes = {
  /** Children to render inside the buton */
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,

  /** Component to show/hide when button is clicked */
  component: _propTypes2.default.element,
  dataTest: _propTypes2.default.string,

  /** Button variant. Mutually exclusive with `primary` and `secondary` props */
  destructive: _uiConstants.sharedPropTypes.buttonVariantPropType,

  /** Make the button non-interactive */
  disabled: _propTypes2.default.bool,
  icon: _propTypes2.default.element,

  /** Grants button initial focus on the page */
  initialFocus: _propTypes2.default.bool,

  /** Button size. Mutually exclusive with `small` prop */
  large: _uiConstants.sharedPropTypes.sizePropType,
  name: _propTypes2.default.string,

  /** Controls popper visibility. When implementing this prop the component becomes a controlled component */
  open: _propTypes2.default.bool,

  /** Button variant. Mutually exclusive with `destructive` and `secondary` props */
  primary: _uiConstants.sharedPropTypes.buttonVariantPropType,

  /** Button variant. Mutually exclusive with `primary` and `destructive` props */
  secondary: _uiConstants.sharedPropTypes.buttonVariantPropType,

  /** Button size. Mutually exclusive with `large` prop */
  small: _uiConstants.sharedPropTypes.sizePropType,
  tabIndex: _propTypes2.default.string,

  /** Type of button. Can take advantage of different default behavior */
  type: _propTypes2.default.oneOf(['submit', 'reset', 'button']),
  value: _propTypes2.default.string,

  /**
   * Callback triggered on click.
   * Called with signature `({ name: string, value: string, open: bool }, event)`
   * Is required when using the `open` prop to override the internal
   * state.
   */
  onClick: (0, _propTypes.requiredIf)(props => typeof props.open === 'boolean', _propTypes2.default.func)
};