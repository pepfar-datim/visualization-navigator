"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabbedContent = void 0;

var _tab = require("@dhis2-ui/tab");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _index = require("../access-add/index.js");

var _index2 = require("../access-list/index.js");

var _index3 = require("../cascade-sharing/index.js");

var _constants = require("../constants.js");

var _index4 = _interopRequireDefault(require("../locales/index.js"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const TabbedContent = _ref => {
  let {
    type,
    users,
    groups,
    publicAccess,
    allowPublicAccess,
    id,
    onAdd,
    onChange,
    onRemove
  } = _ref;
  const [activeTabIndex, setActiveTabIndex] = (0, _react.useState)(0);

  if (type === _constants.DASHBOARD) {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_tab.TabBar, null, /*#__PURE__*/_react.default.createElement(_tab.Tab, {
      onClick: () => setActiveTabIndex(0),
      selected: activeTabIndex === 0
    }, _index4.default.t('Dashboard sharing')), /*#__PURE__*/_react.default.createElement(_tab.Tab, {
      onClick: () => setActiveTabIndex(1),
      selected: activeTabIndex === 1
    }, _index4.default.t('Apply sharing to dashboard visualizations'))), /*#__PURE__*/_react.default.createElement("div", null, activeTabIndex === 0 && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.AccessAdd, {
      onAdd: onAdd
    }), /*#__PURE__*/_react.default.createElement(_index2.AccessList, {
      users: users,
      groups: groups,
      publicAccess: publicAccess,
      allowPublicAccess: allowPublicAccess,
      onChange: onChange,
      onRemove: onRemove
    })), activeTabIndex === 1 && /*#__PURE__*/_react.default.createElement(_index3.CascadeSharing, {
      id: id,
      entityAmount: users.length + groups.length
    })));
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.AccessAdd, {
    onAdd: onAdd
  }), /*#__PURE__*/_react.default.createElement(_index2.AccessList, {
    users: users,
    groups: groups,
    publicAccess: publicAccess,
    allowPublicAccess: allowPublicAccess,
    onChange: onChange,
    onRemove: onRemove
  }));
};

exports.TabbedContent = TabbedContent;
TabbedContent.propTypes = {
  allowPublicAccess: _propTypes.default.bool.isRequired,
  groups: _propTypes.default.arrayOf(_propTypes.default.shape({
    access: _propTypes.default.oneOf([_constants.ACCESS_NONE, _constants.ACCESS_VIEW_ONLY, _constants.ACCESS_VIEW_AND_EDIT]).isRequired,
    id: _propTypes.default.string.isRequired,
    name: _propTypes.default.string.isRequired
  })).isRequired,
  id: _propTypes.default.string.isRequired,
  publicAccess: _propTypes.default.oneOf([_constants.ACCESS_NONE, _constants.ACCESS_VIEW_ONLY, _constants.ACCESS_VIEW_AND_EDIT]).isRequired,
  type: _propTypes.default.oneOf([_constants.VISUALIZATION, _constants.DASHBOARD, _constants.EVENT_VISUALIZATION, _constants.INTERPRETATION]).isRequired,
  users: _propTypes.default.arrayOf(_propTypes.default.shape({
    access: _propTypes.default.oneOf([_constants.ACCESS_NONE, _constants.ACCESS_VIEW_ONLY, _constants.ACCESS_VIEW_AND_EDIT]).isRequired,
    id: _propTypes.default.string.isRequired,
    name: _propTypes.default.string.isRequired
  })).isRequired,
  onAdd: _propTypes.default.func.isRequired,
  onChange: _propTypes.default.func.isRequired,
  onRemove: _propTypes.default.func.isRequired
};