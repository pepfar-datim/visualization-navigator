{"ast":null,"code":"import _asyncToGenerator from\"/home/jake/SRC/visualization-navigator-ts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/jake/SRC/visualization-navigator-ts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/jake/SRC/visualization-navigator-ts/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _regeneratorRuntime from\"/home/jake/SRC/visualization-navigator-ts/node_modules/@babel/runtime/regenerator/index.js\";import{ErrorType}from\"../../types/http.types\";function getErrorMessage(errorType,apiResponse){switch(errorType){case ErrorType.cannotParse:return\"Unsupported server response. Cannot retrieve response body.\";case ErrorType.silentRedirect:return\"Wrong request. Response status \".concat(apiResponse.rawResponse.status,\", Redirected to \").concat(apiResponse.rawResponse.url,\"\\n\\tThis likely means either wrong url or invalid authentication\");case ErrorType.httpError:return\"Response status \".concat(apiResponse.rawResponse.status,\" \").concat(apiResponse.rawResponse.statusText,\"\\n\\tUrl: \").concat(apiResponse.rawResponse.url);case ErrorType.alreadyExists:return\"Object already exists. \".concat(apiResponse.responseBody.typeReports[0].objectReports[0].errorReports[0].message);case ErrorType.dhis2ErrorSpecified:return\"Server response: \".concat(apiResponse.responseBody.typeReports[0].objectReports[0].errorReports[0].message);case ErrorType.dhis2ErrorUnspecified:return\"Server responded with status 200 but error in response body. Cannot retrieve error message.\";}}var FailService=/*#__PURE__*/function(){function FailService(apiResponse){_classCallCheck(this,FailService);this.apiResponse=void 0;this.responseBody=void 0;this.apiResponse=apiResponse;}_createClass(FailService,[{key:\"fail\",value:function fail(errorType){this.apiResponse.success=false;this.apiResponse.errorType=errorType;this.apiResponse.errorMessage=getErrorMessage(errorType,this.apiResponse);return this.apiResponse;}},{key:\"success\",value:function success(){this.apiResponse.success=true;return this.apiResponse;}}]);return FailService;}();export function inspectResponse(_x){return _inspectResponse.apply(this,arguments);}function _inspectResponse(){_inspectResponse=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(rawResponse){var apiResponse,failService,responseBody;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:apiResponse={success:false,rawResponse:rawResponse};failService=new FailService(apiResponse);if(rawResponse.ok){_context.next=4;break;}return _context.abrupt(\"return\",failService.fail(ErrorType.httpError));case 4:if(!(rawResponse.redirected&&rawResponse.url.includes('login'))){_context.next=6;break;}return _context.abrupt(\"return\",failService.fail(ErrorType.silentRedirect));case 6:if(!(rawResponse.status===204&&!rawResponse.redirected)){_context.next=8;break;}return _context.abrupt(\"return\",failService.success());case 8:_context.prev=8;_context.t0=JSON;_context.next=12;return rawResponse.text();case 12:_context.t1=_context.sent;responseBody=_context.t0.parse.call(_context.t0,_context.t1);failService.apiResponse.responseBody=responseBody;if(!(responseBody.status==='ERROR')){_context.next=27;break;}_context.prev=16;if(!responseBody.typeReports[0].objectReports[0].errorReports[0].message.includes('matching')){_context.next=21;break;}return _context.abrupt(\"return\",failService.fail(ErrorType.alreadyExists));case 21:return _context.abrupt(\"return\",failService.fail(ErrorType.dhis2ErrorSpecified));case 22:_context.next=27;break;case 24:_context.prev=24;_context.t2=_context[\"catch\"](16);return _context.abrupt(\"return\",failService.fail(ErrorType.dhis2ErrorUnspecified));case 27:_context.next=32;break;case 29:_context.prev=29;_context.t3=_context[\"catch\"](8);return _context.abrupt(\"return\",failService.fail(ErrorType.cannotParse));case 32:return _context.abrupt(\"return\",failService.success());case 33:case\"end\":return _context.stop();}}},_callee,null,[[8,29],[16,24]]);}));return _inspectResponse.apply(this,arguments);}","map":{"version":3,"names":["ErrorType","getErrorMessage","errorType","apiResponse","cannotParse","silentRedirect","rawResponse","status","url","httpError","statusText","alreadyExists","responseBody","typeReports","objectReports","errorReports","message","dhis2ErrorSpecified","dhis2ErrorUnspecified","FailService","success","errorMessage","inspectResponse","failService","ok","fail","redirected","includes","JSON","text","parse"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@pepfar-react-lib/datim-api/services/methods/inspectResponse.service.ts"],"sourcesContent":["import {ApiResponse, ErrorType} from \"../../types/http.types\";\n\nfunction getErrorMessage(errorType:ErrorType, apiResponse:ApiResponse):string{\n    switch (errorType){\n        case ErrorType.cannotParse:\n            return `Unsupported server response. Cannot retrieve response body.`\n        case ErrorType.silentRedirect:\n            return `Wrong request. Response status ${apiResponse.rawResponse.status}, Redirected to ${apiResponse.rawResponse.url}\\n\\tThis likely means either wrong url or invalid authentication`\n        case ErrorType.httpError:\n            return `Response status ${apiResponse.rawResponse.status} ${apiResponse.rawResponse.statusText}\\n\\tUrl: ${apiResponse.rawResponse.url}`\n        case ErrorType.alreadyExists:\n            return `Object already exists. ${apiResponse.responseBody.typeReports[0].objectReports[0].errorReports[0].message}`\n        case ErrorType.dhis2ErrorSpecified:\n            return `Server response: ${apiResponse.responseBody.typeReports[0].objectReports[0].errorReports[0].message}`\n        case ErrorType.dhis2ErrorUnspecified:\n            return `Server responded with status 200 but error in response body. Cannot retrieve error message.`\n    }\n}\n\nclass FailService {\n    apiResponse:ApiResponse;\n    responseBody:any;\n    constructor(apiResponse:ApiResponse) {\n        this.apiResponse = apiResponse;\n    }\n    fail(errorType:ErrorType):ApiResponse{\n        this.apiResponse.success = false;\n        this.apiResponse.errorType = errorType;\n        this.apiResponse.errorMessage = getErrorMessage(errorType, this.apiResponse)\n        return this.apiResponse;\n    }\n    success():ApiResponse{\n        this.apiResponse.success = true;\n        return this.apiResponse;\n    }\n}\n\nexport async function inspectResponse(rawResponse:Response|any):Promise<ApiResponse>{\n    let apiResponse:ApiResponse = {\n        success: false,\n        rawResponse\n    }\n    let failService = new FailService(apiResponse);\n    if (!rawResponse.ok) return failService.fail(ErrorType.httpError);\n    if (rawResponse.redirected&&rawResponse.url.includes('login')) return failService.fail(ErrorType.silentRedirect)\n    if (rawResponse.status===204&&!rawResponse.redirected) return failService.success();\n    try {\n        let responseBody:any = JSON.parse(await rawResponse.text() as any);\n        failService.apiResponse.responseBody = responseBody;\n        if (responseBody.status==='ERROR') try {\n            if (responseBody.typeReports[0].objectReports[0].errorReports[0].message.includes('matching')) return failService.fail(ErrorType.alreadyExists)\n            else return failService.fail(ErrorType.dhis2ErrorSpecified)\n        } catch(e){\n            return failService.fail(ErrorType.dhis2ErrorUnspecified)\n        }\n    } catch (e){\n        return failService.fail(ErrorType.cannotParse);\n    }\n    return failService.success();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}