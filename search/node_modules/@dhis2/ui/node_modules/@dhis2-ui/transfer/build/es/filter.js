import _JSXStyle from "styled-jsx/style";
import { Field } from '@dhis2-ui/field';
import { Input } from '@dhis2-ui/input';
import { spacers } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React from 'react';
export const Filter = _ref => {
  let {
    dataTest,
    filter,
    onChange,
    label,
    placeholder
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["3679907342", [spacers.dp8, spacers.dp8]]])
  }, /*#__PURE__*/React.createElement(Field, {
    label: label,
    name: dataTest,
    dataTest: "".concat(dataTest, "-field")
  }, /*#__PURE__*/React.createElement(Input, {
    dataTest: "".concat(dataTest, "-input"),
    type: "search",
    placeholder: placeholder,
    value: filter,
    onChange: onChange
  })), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3679907342",
    dynamic: [spacers.dp8, spacers.dp8]
  }, ["div.__jsx-style-dynamic-selector{padding-bottom:".concat(spacers.dp8, ";}"), "div.__jsx-style-dynamic-selector:first-child{padding-top:".concat(spacers.dp8, ";}")]));
};
Filter.propTypes = {
  dataTest: PropTypes.string.isRequired,
  filter: PropTypes.string.isRequired,
  onChange: PropTypes.func.isRequired,
  label: PropTypes.string,
  placeholder: PropTypes.string
};