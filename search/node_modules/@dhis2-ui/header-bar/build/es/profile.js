import _JSXStyle from "styled-jsx/style";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { UserAvatar } from '@dhis2-ui/user-avatar';
import PropTypes from 'prop-types';
import React from 'react';
import { ProfileMenu } from './profile/profile-menu.js';
export default class Profile extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      show: false
    });

    _defineProperty(this, "onDocClick", evt => {
      if (this.elContainer && !this.elContainer.contains(evt.target)) {
        this.setState({
          show: false
        });
      }
    });

    _defineProperty(this, "handleToggle", () => this.setState({
      show: !this.state.show
    }));
  }

  componentDidMount() {
    document.addEventListener('click', this.onDocClick);
  }

  componentWillUnmount() {
    document.removeEventListener('click', this.onDocClick);
  }

  render() {
    const {
      name,
      email,
      avatarId,
      helpUrl
    } = this.props;
    return /*#__PURE__*/React.createElement("div", {
      ref: c => this.elContainer = c,
      "data-test": "headerbar-profile",
      className: "jsx-2642719072" + " " + "headerbar-profile"
    }, /*#__PURE__*/React.createElement("button", {
      onClick: this.handleToggle,
      className: "jsx-2642719072" + " " + "headerbar-profile-btn"
    }, /*#__PURE__*/React.createElement(UserAvatar, {
      avatarId: avatarId,
      name: name,
      dataTest: "headerbar-profile-icon",
      medium: true
    })), this.state.show ? /*#__PURE__*/React.createElement(ProfileMenu, {
      avatarId: avatarId,
      name: name,
      email: email,
      helpUrl: helpUrl
    }) : null, /*#__PURE__*/React.createElement(_JSXStyle, {
      id: "2642719072"
    }, [".headerbar-profile.jsx-2642719072{position:relative;width:36px;height:36px;min-width:36px;min-height:36px;margin:2px 12px 0 24px;}", ".headerbar-profile-btn.jsx-2642719072{background:transparent;padding:0;border:0;cursor:pointer;width:100%;height:100%;}", ".headerbar-profile-btn.jsx-2642719072:focus{outline:1px dotted white;}"]));
  }

}
Profile.propTypes = {
  name: PropTypes.string.isRequired,
  avatarId: PropTypes.string,
  email: PropTypes.string,
  helpUrl: PropTypes.string
};