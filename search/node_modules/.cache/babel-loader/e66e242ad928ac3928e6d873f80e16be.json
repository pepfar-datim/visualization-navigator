{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport { useConfig } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { joinPath } from './join-path.js';\nimport { NotificationIcon } from './notification-icon.js';\n/*\n AUTHORITIES:\n - ALL: superuser\n - M_dhis-web-interpretation: access to interpretations app\n - M_dhis-web-messaging: access to messaging app\n */\n\nconst hasAuthority = (userAuthorities, authId) => Array.isArray(userAuthorities) && userAuthorities.some(userAuthId => userAuthId === 'ALL' || userAuthId === authId);\n\nexport const Notifications = _ref => {\n  let {\n    interpretations,\n    messages,\n    userAuthorities\n  } = _ref;\n  const {\n    baseUrl\n  } = useConfig();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"headerbar-notifications\",\n    className: \"jsx-1500177125\"\n  }, hasAuthority(userAuthorities, 'M_dhis-web-interpretation') && /*#__PURE__*/React.createElement(NotificationIcon, {\n    count: interpretations,\n    href: joinPath(baseUrl, 'dhis-web-interpretation'),\n    kind: \"message\",\n    dataTestId: \"headerbar-interpretations\"\n  }), hasAuthority(userAuthorities, 'M_dhis-web-messaging') && /*#__PURE__*/React.createElement(NotificationIcon, {\n    message: \"email\",\n    count: messages,\n    href: joinPath(baseUrl, 'dhis-web-messaging'),\n    kind: \"interpretation\",\n    dataTestId: \"headerbar-messages\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1500177125\"\n  }, [\"div.jsx-1500177125{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\"]));\n};\nNotifications.propTypes = {\n  interpretations: PropTypes.number,\n  messages: PropTypes.number,\n  userAuthorities: PropTypes.arrayOf(PropTypes.string)\n};","map":{"version":3,"names":["_JSXStyle","useConfig","PropTypes","React","joinPath","NotificationIcon","hasAuthority","userAuthorities","authId","Array","isArray","some","userAuthId","Notifications","_ref","interpretations","messages","baseUrl","createElement","className","count","href","kind","dataTestId","message","id","propTypes","number","arrayOf","string"],"sources":["/home/jake/SRC/landing-page/node_modules/@dhis2-ui/header-bar/build/es/notifications.js"],"sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport { useConfig } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { joinPath } from './join-path.js';\nimport { NotificationIcon } from './notification-icon.js';\n/*\n AUTHORITIES:\n - ALL: superuser\n - M_dhis-web-interpretation: access to interpretations app\n - M_dhis-web-messaging: access to messaging app\n */\n\nconst hasAuthority = (userAuthorities, authId) => Array.isArray(userAuthorities) && userAuthorities.some(userAuthId => userAuthId === 'ALL' || userAuthId === authId);\n\nexport const Notifications = _ref => {\n  let {\n    interpretations,\n    messages,\n    userAuthorities\n  } = _ref;\n  const {\n    baseUrl\n  } = useConfig();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"headerbar-notifications\",\n    className: \"jsx-1500177125\"\n  }, hasAuthority(userAuthorities, 'M_dhis-web-interpretation') && /*#__PURE__*/React.createElement(NotificationIcon, {\n    count: interpretations,\n    href: joinPath(baseUrl, 'dhis-web-interpretation'),\n    kind: \"message\",\n    dataTestId: \"headerbar-interpretations\"\n  }), hasAuthority(userAuthorities, 'M_dhis-web-messaging') && /*#__PURE__*/React.createElement(NotificationIcon, {\n    message: \"email\",\n    count: messages,\n    href: joinPath(baseUrl, 'dhis-web-messaging'),\n    kind: \"interpretation\",\n    dataTestId: \"headerbar-messages\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1500177125\"\n  }, [\"div.jsx-1500177125{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\"]));\n};\nNotifications.propTypes = {\n  interpretations: PropTypes.number,\n  messages: PropTypes.number,\n  userAuthorities: PropTypes.arrayOf(PropTypes.string)\n};"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAACC,eAAD,EAAkBC,MAAlB,KAA6BC,KAAK,CAACC,OAAN,CAAcH,eAAd,KAAkCA,eAAe,CAACI,IAAhB,CAAqBC,UAAU,IAAIA,UAAU,KAAK,KAAf,IAAwBA,UAAU,KAAKJ,MAA1E,CAApF;;AAEA,OAAO,MAAMK,aAAa,GAAGC,IAAI,IAAI;EACnC,IAAI;IACFC,eADE;IAEFC,QAFE;IAGFT;EAHE,IAIAO,IAJJ;EAKA,MAAM;IACJG;EADI,IAEFhB,SAAS,EAFb;EAGA,OAAO,aAAaE,KAAK,CAACe,aAAN,CAAoB,KAApB,EAA2B;IAC7C,aAAa,yBADgC;IAE7CC,SAAS,EAAE;EAFkC,CAA3B,EAGjBb,YAAY,CAACC,eAAD,EAAkB,2BAAlB,CAAZ,IAA8D,aAAaJ,KAAK,CAACe,aAAN,CAAoBb,gBAApB,EAAsC;IAClHe,KAAK,EAAEL,eAD2G;IAElHM,IAAI,EAAEjB,QAAQ,CAACa,OAAD,EAAU,yBAAV,CAFoG;IAGlHK,IAAI,EAAE,SAH4G;IAIlHC,UAAU,EAAE;EAJsG,CAAtC,CAH1D,EAQhBjB,YAAY,CAACC,eAAD,EAAkB,sBAAlB,CAAZ,IAAyD,aAAaJ,KAAK,CAACe,aAAN,CAAoBb,gBAApB,EAAsC;IAC9GmB,OAAO,EAAE,OADqG;IAE9GJ,KAAK,EAAEJ,QAFuG;IAG9GK,IAAI,EAAEjB,QAAQ,CAACa,OAAD,EAAU,oBAAV,CAHgG;IAI9GK,IAAI,EAAE,gBAJwG;IAK9GC,UAAU,EAAE;EALkG,CAAtC,CARtD,EAchB,aAAapB,KAAK,CAACe,aAAN,CAAoBlB,SAApB,EAA+B;IAC9CyB,EAAE,EAAE;EAD0C,CAA/B,EAEd,CAAC,uVAAD,CAFc,CAdG,CAApB;AAiBD,CA1BM;AA2BPZ,aAAa,CAACa,SAAd,GAA0B;EACxBX,eAAe,EAAEb,SAAS,CAACyB,MADH;EAExBX,QAAQ,EAAEd,SAAS,CAACyB,MAFI;EAGxBpB,eAAe,EAAEL,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAAC2B,MAA5B;AAHO,CAA1B"},"metadata":{},"sourceType":"module"}