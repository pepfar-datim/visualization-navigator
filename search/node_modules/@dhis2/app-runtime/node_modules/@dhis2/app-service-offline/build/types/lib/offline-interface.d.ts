import PropTypes from 'prop-types';
import React from 'react';
import { OfflineInterface } from '../types';
interface OfflineInterfaceProviderInput {
    offlineInterface: OfflineInterface;
    children: React.ReactNode;
}
/**
 * Receives an OfflineInterface instance as a prop (presumably from the app
 * adapter) and provides it as context for other offline tools.
 *
 * On mount, it initializes the offline interface, which (among other things)
 * checks for service worker updates and, if updates are ready, prompts the
 * user with an alert to skip waiting and reload the page to use new content.
 */
export declare function OfflineInterfaceProvider({ offlineInterface, children, }: OfflineInterfaceProviderInput): JSX.Element;
export declare namespace OfflineInterfaceProvider {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        offlineInterface: PropTypes.Requireable<PropTypes.InferProps<{
            init: PropTypes.Requireable<(...args: any[]) => any>;
        }>>;
    };
}
export declare function useOfflineInterface(): OfflineInterface;
export {};
