"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.DefaultPlaceholder = exports.DefaultButtonLabelAndRemoveText = exports.Default = void 0;

var _uiConstants = require("@dhis2/ui-constants");

var _react = _interopRequireDefault(require("react"));

var _fileInputFieldWithList = require("./file-input-field-with-list.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const description = "\nA FileInputField with logic for creating a dynamic list of removable files from an array of `File` objects.\n\n```js\nimport { FileInputFieldWithList } from '@dhis2/ui'\n```\n";
const files = new Array(10).fill('dummy-file-name').map((name, i) => new File([], "".concat(name, "-").concat(i + 1, ".txt")));

const onChange = _ref => {
  let {
    files
  } = _ref;
  console.log('files: ', files);
};

var _default = {
  title: 'File Input Field With List',
  component: _fileInputFieldWithList.FileInputFieldWithList,
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  args: { // Handle default props bug (see Transfer stories)
    ..._fileInputFieldWithList.FileInputFieldWithList.defaultProps,
    multiple: true,
    onChange: onChange,
    name: 'uploadName'
  },
  argTypes: {
    small: { ..._uiConstants.sharedPropTypes.sizeArgType
    },
    large: { ..._uiConstants.sharedPropTypes.sizeArgType
    },
    valid: { ..._uiConstants.sharedPropTypes.statusArgType
    },
    warning: { ..._uiConstants.sharedPropTypes.statusArgType
    },
    error: { ..._uiConstants.sharedPropTypes.statusArgType
    }
  }
};
exports.default = _default;

const Template = args => /*#__PURE__*/_react.default.createElement(_fileInputFieldWithList.FileInputFieldWithList, args);

const Default = Template.bind({});
exports.Default = Default;
Default.args = {
  buttonLabel: 'Upload file (custom label)',
  files: files,
  removeText: 'Custom remove text'
};
const DefaultButtonLabelAndRemoveText = Template.bind({});
exports.DefaultButtonLabelAndRemoveText = DefaultButtonLabelAndRemoveText;
DefaultButtonLabelAndRemoveText.args = {
  files: files
};
DefaultButtonLabelAndRemoveText.storyName = 'Default: buttonLabel and removeText';
const DefaultPlaceholder = Template.bind({});
exports.DefaultPlaceholder = DefaultPlaceholder;
DefaultPlaceholder.storyName = 'Default: placeholder';