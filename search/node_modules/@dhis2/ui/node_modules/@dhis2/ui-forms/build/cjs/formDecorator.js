"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formDecorator = void 0;

var _button = require("@dhis2-ui/button");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactFinalForm = require("react-final-form");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const formProps = {
  onSubmit: values => {
    console.log('++++++++++++++++\n', 'Form was submitted with values:\n', values, '\n----------------');
  },
  mutators: {}
};

class FormWithSpyAndSubmit extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      cypressProps: {}
    });

    _defineProperty(this, "updateCypressProps", updateObj => {
      const cypressProps = { ...this.state.cypressProps,
        ...updateObj
      };
      this.setState({
        cypressProps
      });
    });

    _defineProperty(this, "clearCypressProps", () => {
      this.setState({
        cypressProps: {}
      });
    });
  }

  componentDidMount() {
    window.updateCypressProps = this.updateCypressProps;
    window.clearCypressProps = this.clearCypressProps;
    this.forceUpdate();
  }

  componentWillUnmount() {
    delete window.updateCypressProps;
    delete window.clearCypressProps;
  }

  render() {
    return /*#__PURE__*/_react.default.createElement(_reactFinalForm.Form, formProps, formRenderProps => /*#__PURE__*/_react.default.createElement("form", {
      onSubmit: formRenderProps.handleSubmit
    }, this.props.renderChildren({
      formRenderProps,
      cypressProps: this.state.cypressProps
    }), /*#__PURE__*/_react.default.createElement(_button.Button, {
      primary: true,
      type: "submit"
    }, "Submit"), /*#__PURE__*/_react.default.createElement(_reactFinalForm.FormSpy, null, _ref => {
      let {
        values
      } = _ref;
      window.formValues = values;
      return /*#__PURE__*/_react.default.createElement("span", {
        className: "form-spy-internal"
      });
    })));
  }

}

FormWithSpyAndSubmit.propTypes = {
  renderChildren: _propTypes.default.func.isRequired
};

const formDecorator = fn => /*#__PURE__*/_react.default.createElement(FormWithSpyAndSubmit, {
  renderChildren: fn
});

exports.formDecorator = formDecorator;