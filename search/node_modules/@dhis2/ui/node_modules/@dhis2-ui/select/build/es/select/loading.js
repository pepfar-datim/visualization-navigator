import _JSXStyle from "styled-jsx/style";
import { CircularLoader } from '@dhis2-ui/loader';
import { colors, spacers, theme } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
export const Loading = _ref => {
  let {
    message,
    className,
    dataTest
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["1068210086", [spacers.dp16, colors.grey700, theme.fonts, spacers.dp8, spacers.dp24]]]) + " " + (cx(className, 'container') || "")
  }, /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["1068210086", [spacers.dp16, colors.grey700, theme.fonts, spacers.dp8, spacers.dp24]]])
  }, /*#__PURE__*/React.createElement(CircularLoader, {
    small: true
  })), message, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1068210086",
    dynamic: [spacers.dp16, colors.grey700, theme.fonts, spacers.dp8, spacers.dp24]
  }, [".container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:".concat(spacers.dp16, ";-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;color:").concat(colors.grey700, ";font-family:").concat(theme.fonts, ";font-size:13px;padding:").concat(spacers.dp8, " ").concat(spacers.dp24, ";}")]));
};
Loading.propTypes = {
  dataTest: PropTypes.string.isRequired,
  className: PropTypes.string,
  message: PropTypes.string
};