"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableRow = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _tableContext = require("./table-context.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const tableRowStyles = [".zebraStriping.jsx-3124144591:nth-child(even){background:#fbfcfd;}"];
tableRowStyles.__hash = "3124144591";

const TableRow = _ref => {
  let {
    role,
    children,
    className,
    dataTest,
    suppressZebraStriping
  } = _ref;
  const {
    suppressZebraStriping: suppressZebraStripingFromContext
  } = (0, _react.useContext)(_tableContext.TableContext);
  const zebraStriping = typeof suppressZebraStriping !== 'undefined' ? !suppressZebraStriping : !suppressZebraStripingFromContext;
  return /*#__PURE__*/_react.default.createElement("tr", {
    "data-test": dataTest,
    role: role,
    className: "jsx-".concat(tableRowStyles.__hash) + " " + ((0, _classnames.default)(className, {
      zebraStriping
    }) || "")
  }, children, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: tableRowStyles.__hash
  }, tableRowStyles));
};

exports.TableRow = TableRow;
TableRow.defaultProps = {
  dataTest: 'dhis2-uicore-tablerow'
};
TableRow.propTypes = {
  /** Should be `<TableCell>` or `<TableCellHead>` components */
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  role: _propTypes.default.string,

  /** Disables the default row striping for this row */
  suppressZebraStriping: _propTypes.default.bool
};