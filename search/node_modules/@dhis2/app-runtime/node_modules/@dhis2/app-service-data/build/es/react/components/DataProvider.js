import { useConfig } from '@dhis2/app-service-config';
import React from 'react';
import { QueryClient, QueryClientProvider } from 'react-query';
import { DataEngine } from '../../engine';
import { RestAPILink } from '../../links';
import { DataContext } from '../context/DataContext';
export const queryClientOptions = {
  defaultOptions: {
    queries: {
      // Disable automatic error retries
      retry: false,
      // Retry on mount if query has errored
      retryOnMount: true,
      // Refetch on mount if data is stale
      refetchOnMount: true,
      // Don't refetch when the window regains focus
      refetchOnWindowFocus: false,
      // Don't refetch after connection issues
      refetchOnReconnect: false
    }
  }
};
const queryClient = new QueryClient(queryClientOptions);
export const DataProvider = props => {
  const config = { ...useConfig(),
    ...props
  };
  const link = new RestAPILink(config);
  const engine = new DataEngine(link);
  const context = {
    engine
  };
  return /*#__PURE__*/React.createElement(QueryClientProvider, {
    client: queryClient
  }, /*#__PURE__*/React.createElement(DataContext.Provider, {
    value: context
  }, props.children));
};