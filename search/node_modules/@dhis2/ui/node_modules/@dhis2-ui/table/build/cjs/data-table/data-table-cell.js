"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataTableCell = void 0;

var _propTypes = require("@dhis2/prop-types");

var _propTypes2 = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _index = require("./table-elements/index.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DataTableCell = /*#__PURE__*/(0, _react.forwardRef)((_ref, ref) => {
  let {
    active,
    align,
    bordered,
    children,
    className,
    colSpan,
    dataTest,
    error,
    fixed,
    large,
    left,
    muted,
    rowSpan,
    role,
    scope,
    staticStyle,
    tag,
    valid,
    width,
    onClick
  } = _ref;
  const TableCell = !tag && fixed || tag && tag === 'th' ? _index.TableHeaderCell : _index.TableDataCell;
  return /*#__PURE__*/_react.default.createElement(TableCell, {
    active: active,
    align: align,
    bordered: bordered,
    className: className,
    colSpan: colSpan,
    dataTest: dataTest,
    error: error,
    fixed: fixed,
    large: large,
    left: left,
    muted: muted,
    rowSpan: rowSpan,
    ref: ref,
    role: role,
    staticStyle: staticStyle,
    scope: scope,
    valid: valid,
    width: width,
    onClick: onClick
  }, children);
});
exports.DataTableCell = DataTableCell;
DataTableCell.displayName = 'DataTableCell';
DataTableCell.defaultProps = {
  align: 'left',
  dataTest: 'dhis2-uicore-datatablecell',
  left: 'auto',
  width: 'auto'
};
const stylePropType = (0, _propTypes.mutuallyExclusive)(['valid', 'error', 'muted'], _propTypes2.default.bool);
const requiredIfFixedPropType = (0, _propTypes.requiredIf)(props => props.fixed, _propTypes2.default.string);
DataTableCell.propTypes = {
  /** To toggle background color, for example for editing */
  active: _propTypes2.default.bool,
  align: _propTypes2.default.oneOf(['left', 'center', 'right']),
  bordered: _propTypes2.default.bool,
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  colSpan: _propTypes2.default.string,
  dataTest: _propTypes2.default.string,

  /** Mutually exclusive with muted and valid */
  error: stylePropType,

  /** When true a TableHeaderCell with sticky positioning will be rendered */
  fixed: _propTypes2.default.bool,
  large: _propTypes2.default.bool,

  /** Required when fixed */
  left: requiredIfFixedPropType,

  /** Mutually exclusive with error and valid */
  muted: stylePropType,
  role: _propTypes2.default.string,
  rowSpan: _propTypes2.default.string,
  scope: _propTypes2.default.string,

  /** Surpress hover and active event styles */
  staticStyle: _propTypes2.default.bool,

  /** Render a TableDataCell or TableHeaderCell respectively */
  tag: _propTypes2.default.oneOf(['td', 'th']),

  /** Mutually exclusive with error and muted */
  valid: stylePropType,

  /** Required when fixed */
  width: requiredIfFixedPropType,
  onClick: _propTypes2.default.func
};