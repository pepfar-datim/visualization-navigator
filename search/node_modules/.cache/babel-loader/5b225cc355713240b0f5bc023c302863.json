{"ast":null,"code":"import propTypes from 'prop-types';\n\nconst arrayWithLengthFactory = _ref => {\n  let {\n    min = 0,\n    max = Infinity,\n    propType,\n    isRequired\n  } = _ref;\n  return (props, propSelector, // normally a propName, but when wrapped in arrayOf an index\n  componentName, location, propFullName // normally null but a string like \"propName[index]\" when wrapped in arrayOf\n  ) => {\n    const arr = props[propSelector];\n    const propName = propFullName || propSelector;\n    const baseMsg = `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`,`;\n    const insideArrayOf = !!propFullName;\n\n    if (isRequired && typeof arr === 'undefined') {\n      return new Error(`${baseMsg} this prop is required but no value was found.`);\n    }\n\n    if (arr && !Array.isArray(arr)) {\n      return new Error(`${baseMsg} prop value is not an array.`);\n    }\n\n    if (arr && arr.length > max) {\n      return new Error(`${baseMsg} array has a length of ${arr.length}, but the maximum is ${max}`);\n    }\n\n    if (arr && arr.length < min) {\n      return new Error(`${baseMsg} array has a length of ${arr.length}, but the minimum is ${min}`);\n    }\n\n    if (arr && propType) {\n      const checkPropName = insideArrayOf ? location : propName;\n      const checkPropType = insideArrayOf ? // array should be array containing only the given type\n      propTypes.arrayOf(propTypes.arrayOf(propType)) : // array should contain only the given type\n      propTypes.arrayOf(propType);\n      const checkPropTypes = {\n        [checkPropName]: checkPropType\n      };\n      const checkProps = insideArrayOf ? {\n        [location]: props\n      } : props; // When not inside an array, the error message only reads correctly\n      // when using \"prop\"\n\n      const checkProp = insideArrayOf ? propName : 'prop';\n      propTypes.checkPropTypes(checkPropTypes, checkProps, checkProp, componentName);\n    }\n\n    return null;\n  };\n};\n/**\n * Ensure the prop value is an array with a length between a minimum and maximum.\n * If a third `propType` argument is passed each item in the array needs to be of that prop-type\n * @param {number} [min=0] - The minimal array length\n * @param {number} [max=Infinity] - The maximal array length\n * @param {function} [propType] - The prop-type that each array item needs to conform to\n * @return {Error|null} Returns null if all conditions are met, or an error\n * @example\n * import React from 'react'\n * import { arrayWithLength } from '@dhis2/prop-types'\n *\n * const LotsOfLists = props => <div {...props}>Does nothing</div>\n *\n * LotsOfLists.propTypes = {\n *     arrayWithMaxThreeNumbers: arrayWithLength(0, 3, propTypes.number),\n *     arrayWithAtLeastSixStrings: arrayWithLength(6, undefined, propTypes.string),\n *     arrayWithAtLeastTenItems: arrayWithLength(10),\n *     mandatoryArrayBetweenOneAndTen: arrayWithLength(1,10).isRequired,\n * }\n */\n\n\nexport function arrayWithLength(min, max, propType) {\n  const fn = arrayWithLengthFactory({\n    min,\n    max,\n    propType,\n    isRequired: false\n  });\n  fn.isRequired = arrayWithLengthFactory({\n    min,\n    max,\n    propType,\n    isRequired: true\n  });\n  return fn;\n}","map":{"version":3,"names":["propTypes","arrayWithLengthFactory","min","max","Infinity","propType","isRequired","props","propSelector","componentName","location","propFullName","arr","propName","baseMsg","insideArrayOf","Error","Array","isArray","length","checkPropName","checkPropType","arrayOf","checkPropTypes","checkProps","checkProp","arrayWithLength","fn"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@dhis2/prop-types/build/es/arrayWithLength.js"],"sourcesContent":["import propTypes from 'prop-types';\n\nconst arrayWithLengthFactory = ({\n  min = 0,\n  max = Infinity,\n  propType,\n  isRequired\n}) => (props, propSelector, // normally a propName, but when wrapped in arrayOf an index\ncomponentName, location, propFullName // normally null but a string like \"propName[index]\" when wrapped in arrayOf\n) => {\n  const arr = props[propSelector];\n  const propName = propFullName || propSelector;\n  const baseMsg = `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`,`;\n  const insideArrayOf = !!propFullName;\n\n  if (isRequired && typeof arr === 'undefined') {\n    return new Error(`${baseMsg} this prop is required but no value was found.`);\n  }\n\n  if (arr && !Array.isArray(arr)) {\n    return new Error(`${baseMsg} prop value is not an array.`);\n  }\n\n  if (arr && arr.length > max) {\n    return new Error(`${baseMsg} array has a length of ${arr.length}, but the maximum is ${max}`);\n  }\n\n  if (arr && arr.length < min) {\n    return new Error(`${baseMsg} array has a length of ${arr.length}, but the minimum is ${min}`);\n  }\n\n  if (arr && propType) {\n    const checkPropName = insideArrayOf ? location : propName;\n    const checkPropType = insideArrayOf ? // array should be array containing only the given type\n    propTypes.arrayOf(propTypes.arrayOf(propType)) : // array should contain only the given type\n    propTypes.arrayOf(propType);\n    const checkPropTypes = {\n      [checkPropName]: checkPropType\n    };\n    const checkProps = insideArrayOf ? {\n      [location]: props\n    } : props; // When not inside an array, the error message only reads correctly\n    // when using \"prop\"\n\n    const checkProp = insideArrayOf ? propName : 'prop';\n    propTypes.checkPropTypes(checkPropTypes, checkProps, checkProp, componentName);\n  }\n\n  return null;\n};\n/**\n * Ensure the prop value is an array with a length between a minimum and maximum.\n * If a third `propType` argument is passed each item in the array needs to be of that prop-type\n * @param {number} [min=0] - The minimal array length\n * @param {number} [max=Infinity] - The maximal array length\n * @param {function} [propType] - The prop-type that each array item needs to conform to\n * @return {Error|null} Returns null if all conditions are met, or an error\n * @example\n * import React from 'react'\n * import { arrayWithLength } from '@dhis2/prop-types'\n *\n * const LotsOfLists = props => <div {...props}>Does nothing</div>\n *\n * LotsOfLists.propTypes = {\n *     arrayWithMaxThreeNumbers: arrayWithLength(0, 3, propTypes.number),\n *     arrayWithAtLeastSixStrings: arrayWithLength(6, undefined, propTypes.string),\n *     arrayWithAtLeastTenItems: arrayWithLength(10),\n *     mandatoryArrayBetweenOneAndTen: arrayWithLength(1,10).isRequired,\n * }\n */\n\n\nexport function arrayWithLength(min, max, propType) {\n  const fn = arrayWithLengthFactory({\n    min,\n    max,\n    propType,\n    isRequired: false\n  });\n  fn.isRequired = arrayWithLengthFactory({\n    min,\n    max,\n    propType,\n    isRequired: true\n  });\n  return fn;\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,sBAAsB,GAAG;EAAA,IAAC;IAC9BC,GAAG,GAAG,CADwB;IAE9BC,GAAG,GAAGC,QAFwB;IAG9BC,QAH8B;IAI9BC;EAJ8B,CAAD;EAAA,OAKzB,CAACC,KAAD,EAAQC,YAAR,EAAsB;EAC5BC,aADM,EACSC,QADT,EACmBC,YADnB,CACgC;EADhC,KAED;IACH,MAAMC,GAAG,GAAGL,KAAK,CAACC,YAAD,CAAjB;IACA,MAAMK,QAAQ,GAAGF,YAAY,IAAIH,YAAjC;IACA,MAAMM,OAAO,GAAI,kBAAiBD,QAAS,oBAAmBJ,aAAc,KAA5E;IACA,MAAMM,aAAa,GAAG,CAAC,CAACJ,YAAxB;;IAEA,IAAIL,UAAU,IAAI,OAAOM,GAAP,KAAe,WAAjC,EAA8C;MAC5C,OAAO,IAAII,KAAJ,CAAW,GAAEF,OAAQ,gDAArB,CAAP;IACD;;IAED,IAAIF,GAAG,IAAI,CAACK,KAAK,CAACC,OAAN,CAAcN,GAAd,CAAZ,EAAgC;MAC9B,OAAO,IAAII,KAAJ,CAAW,GAAEF,OAAQ,8BAArB,CAAP;IACD;;IAED,IAAIF,GAAG,IAAIA,GAAG,CAACO,MAAJ,GAAahB,GAAxB,EAA6B;MAC3B,OAAO,IAAIa,KAAJ,CAAW,GAAEF,OAAQ,0BAAyBF,GAAG,CAACO,MAAO,wBAAuBhB,GAAI,EAApF,CAAP;IACD;;IAED,IAAIS,GAAG,IAAIA,GAAG,CAACO,MAAJ,GAAajB,GAAxB,EAA6B;MAC3B,OAAO,IAAIc,KAAJ,CAAW,GAAEF,OAAQ,0BAAyBF,GAAG,CAACO,MAAO,wBAAuBjB,GAAI,EAApF,CAAP;IACD;;IAED,IAAIU,GAAG,IAAIP,QAAX,EAAqB;MACnB,MAAMe,aAAa,GAAGL,aAAa,GAAGL,QAAH,GAAcG,QAAjD;MACA,MAAMQ,aAAa,GAAGN,aAAa,GAAG;MACtCf,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACsB,OAAV,CAAkBjB,QAAlB,CAAlB,CADmC,GACc;MACjDL,SAAS,CAACsB,OAAV,CAAkBjB,QAAlB,CAFA;MAGA,MAAMkB,cAAc,GAAG;QACrB,CAACH,aAAD,GAAiBC;MADI,CAAvB;MAGA,MAAMG,UAAU,GAAGT,aAAa,GAAG;QACjC,CAACL,QAAD,GAAYH;MADqB,CAAH,GAE5BA,KAFJ,CARmB,CAUR;MACX;;MAEA,MAAMkB,SAAS,GAAGV,aAAa,GAAGF,QAAH,GAAc,MAA7C;MACAb,SAAS,CAACuB,cAAV,CAAyBA,cAAzB,EAAyCC,UAAzC,EAAqDC,SAArD,EAAgEhB,aAAhE;IACD;;IAED,OAAO,IAAP;EACD,CA/C8B;AAAA,CAA/B;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASiB,eAAT,CAAyBxB,GAAzB,EAA8BC,GAA9B,EAAmCE,QAAnC,EAA6C;EAClD,MAAMsB,EAAE,GAAG1B,sBAAsB,CAAC;IAChCC,GADgC;IAEhCC,GAFgC;IAGhCE,QAHgC;IAIhCC,UAAU,EAAE;EAJoB,CAAD,CAAjC;EAMAqB,EAAE,CAACrB,UAAH,GAAgBL,sBAAsB,CAAC;IACrCC,GADqC;IAErCC,GAFqC;IAGrCE,QAHqC;IAIrCC,UAAU,EAAE;EAJyB,CAAD,CAAtC;EAMA,OAAOqB,EAAP;AACD"},"metadata":{},"sourceType":"module"}