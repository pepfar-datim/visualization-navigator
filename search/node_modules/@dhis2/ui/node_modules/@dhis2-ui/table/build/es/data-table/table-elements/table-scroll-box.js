import _JSXStyle from "styled-jsx/style";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { colors } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React, { forwardRef } from 'react';
export const TableScrollBox = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    children,
    className,
    dataTest,
    maxHeight,
    maxWidth,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement("div", _extends({}, props, {
    "data-test": dataTest,
    ref: ref,
    className: _JSXStyle.dynamic([["2859562182", [colors.grey300, maxHeight, maxWidth]]]) + " " + (className || "")
  }), children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2859562182",
    dynamic: [colors.grey300, maxHeight, maxWidth]
  }, ["div.__jsx-style-dynamic-selector{border:1px solid ".concat(colors.grey300, ";border-top:none;box-sizing:border-box;max-height:").concat(maxHeight, ";max-width:").concat(maxWidth, ";overflow:auto;}")]));
});
TableScrollBox.displayName = 'TableScrollBox';
TableScrollBox.defaultProps = {
  dataTest: 'dhis2-uicore-tablescrollbox',
  maxHeight: 'auto',
  maxWidth: 'auto'
};
TableScrollBox.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  maxHeight: PropTypes.string,
  maxWidth: PropTypes.string
};