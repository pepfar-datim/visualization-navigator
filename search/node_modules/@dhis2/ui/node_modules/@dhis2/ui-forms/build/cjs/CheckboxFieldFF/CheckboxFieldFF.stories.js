"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ValueWhenChecked = exports.Statuses = exports.RequiredWithValidate = exports.HelpText = exports.Disabled = exports.Default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactFinalForm = require("react-final-form");

var _formDecorator = require("../formDecorator.js");

var _propTypes = require("../shared/propTypes.js");

var _index = require("../validators/index.js");

var _CheckboxFieldFF = require("./CheckboxFieldFF.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const description = "\nThe `CheckboxFieldFF` is a wrapper around a `CheckboxField` that enables it to work with Final Form, the preferred library for form validation and utilities in DHIS 2 apps.\n\n#### Final Form\n\nSee how to use Final Form at [Final Form - Getting Started](https://final-form.org/docs/react-final-form/getting-started).\n\nInside a Final Form `<Form>` component, these 'FF' UI components are intended to be used in the `component` prop of the [Final Form `<Field>` components](https://final-form.org/docs/react-final-form/api/Field) where they will receive some props from the Field, e.g. `<Field component={CheckboxFieldFF} />`.  See the code samples below for examples.\n\n#### Props\n\nThe props shown in the table below are generally provided to the `CheckboxFieldFF` wrapper by the Final Form `Field`.\n\nNote that any props beyond the API of the `Field` component will be spread to the `CheckboxFieldFF`, which passes any extra props to the underlying `CheckboxField` using `{...rest}`.\n\nTherefore, to add any props to the `CheckboxFieldFF` or `CheckboxField`, add those props to the parent Final Form `Field` component.\n\nAlso see `Checkbox` and `CheckboxField` for notes about props and implementation.\n\n```js\nimport { CheckboxFieldFF } from '@dhis2/ui'\n```\n\nPress **Submit** to see the form values logged to the console.\n";
var _default = {
  title: 'Checkbox Field (Final Form)',
  component: _CheckboxFieldFF.CheckboxFieldFF,
  decorators: [_formDecorator.formDecorator],
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  argTypes: {
    input: { ..._propTypes.inputArgType
    },
    meta: { ..._propTypes.metaArgType
    }
  }
};
exports.default = _default;

const Default = () => /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  name: "agree",
  label: "Do you agree?"
});

exports.Default = Default;

const RequiredWithValidate = () => /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "agree",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  required: true,
  validate: _index.hasValue,
  label: "Do you agree?",
  value: "yes"
});

exports.RequiredWithValidate = RequiredWithValidate;

const Disabled = () => /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "agree",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  disabled: true,
  label: "Do you agree?"
});

exports.Disabled = Disabled;

const HelpText = () => /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "agree",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  label: "Do you agree?",
  helpText: "Click to agree"
});

exports.HelpText = HelpText;
HelpText.storyName = 'Help text';

const Statuses = () => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "valid",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  label: "Valid",
  valid: true,
  validationText: "Validation text"
}), /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "warning",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  label: "Warning",
  warning: true,
  validationText: "Validation text"
}), /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "error",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  label: "Error",
  error: true,
  validationText: "Validation text"
}));

exports.Statuses = Statuses;

const ValueWhenChecked = () => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "bool",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  label: "I produce boolean form values",
  helpText: "Click submit and check the console"
}), /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "string",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  label: "I produce string form values",
  value: "checked-value",
  helpText: "Click submit and check the console"
}), /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  type: "checkbox",
  name: "string",
  component: _CheckboxFieldFF.CheckboxFieldFF,
  label: "I also produce string form values",
  value: "another-checked-value",
  helpText: "Click submit and check the console"
}));

exports.ValueWhenChecked = ValueWhenChecked;