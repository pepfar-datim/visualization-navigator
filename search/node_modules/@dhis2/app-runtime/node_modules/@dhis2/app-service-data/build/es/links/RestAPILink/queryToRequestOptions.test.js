import { queryToRequestOptions } from './queryToRequestOptions';
describe('queryToRequestOptions', () => {
  it('should return a valid Fetch option object for read request', () => {
    const options = queryToRequestOptions('read', {
      resource: 'test'
    });
    expect(options).toMatchInlineSnapshot("\n            Object {\n              \"body\": undefined,\n              \"headers\": undefined,\n              \"method\": \"GET\",\n              \"signal\": undefined,\n            }\n        ");
  });
  it('should return a valid Fetch option object for create request', () => {
    const options = queryToRequestOptions('create', {
      resource: 'test',
      data: {
        answer: 42,
        foo: 'bar'
      }
    });
    expect(options).toMatchInlineSnapshot("\n            Object {\n              \"body\": \"{\\\"answer\\\":42,\\\"foo\\\":\\\"bar\\\"}\",\n              \"headers\": Object {\n                \"Content-Type\": \"application/json\",\n              },\n              \"method\": \"POST\",\n              \"signal\": undefined,\n            }\n        ");
  });
  it('should return a valid Fetch option object for update request', () => {
    const options = queryToRequestOptions('update', {
      resource: 'test',
      data: {
        answer: 42,
        foo: 'bar'
      }
    });
    expect(options).toMatchInlineSnapshot("\n            Object {\n              \"body\": \"{\\\"answer\\\":42,\\\"foo\\\":\\\"bar\\\"}\",\n              \"headers\": Object {\n                \"Content-Type\": \"application/json\",\n              },\n              \"method\": \"PATCH\",\n              \"signal\": undefined,\n            }\n        ");
  });
  it('should return a valid Fetch option object for json-patch request', () => {
    const options = queryToRequestOptions('json-patch', {
      resource: 'test',
      data: {
        answer: 42,
        foo: 'bar'
      }
    });
    expect(options).toMatchInlineSnapshot("\n            Object {\n              \"body\": \"{\\\"answer\\\":42,\\\"foo\\\":\\\"bar\\\"}\",\n              \"headers\": Object {\n                \"Content-Type\": \"application/json-patch+json\",\n              },\n              \"method\": \"PATCH\",\n              \"signal\": undefined,\n            }\n        ");
  });
  it('should return a valid Fetch option object for replace request', () => {
    const options = queryToRequestOptions('replace', {
      resource: 'test',
      data: {
        answer: 42,
        foo: 'bar'
      }
    });
    expect(options).toMatchInlineSnapshot("\n            Object {\n              \"body\": \"{\\\"answer\\\":42,\\\"foo\\\":\\\"bar\\\"}\",\n              \"headers\": Object {\n                \"Content-Type\": \"application/json\",\n              },\n              \"method\": \"PUT\",\n              \"signal\": undefined,\n            }\n        ");
  });
  it('should return a valid Fetch option object for delete request', () => {
    const options = queryToRequestOptions('delete', {
      resource: 'test'
    });
    expect(options).toMatchInlineSnapshot("\n            Object {\n              \"body\": undefined,\n              \"headers\": undefined,\n              \"method\": \"DELETE\",\n              \"signal\": undefined,\n            }\n        ");
  });
});