{"ast":null,"code":"import { useState, useCallback, useRef, useEffect } from 'react';\nimport { FetchError } from '../../engine';\nimport { useStaticInput } from './useStaticInput';\nexport const useQueryExecutor = _ref => {\n  let {\n    execute,\n    variables: initialVariables,\n    singular,\n    immediate,\n    onComplete,\n    onError\n  } = _ref;\n  const [theExecute] = useStaticInput(execute);\n  const [state, setState] = useState({\n    called: !!immediate,\n    loading: !!immediate\n  });\n  const variables = useRef(initialVariables);\n  const abortControllersRef = useRef([]);\n  const abort = useCallback(() => {\n    abortControllersRef.current.forEach(controller => controller.abort());\n    abortControllersRef.current = [];\n  }, []);\n  const manualAbort = useCallback(() => {\n    abort();\n    setState(state => ({\n      called: state.called,\n      loading: false,\n      error: new FetchError({\n        type: 'aborted',\n        message: 'Aborted'\n      })\n    }));\n  }, [abort]);\n  const refetch = useCallback(function () {\n    let newVariables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    setState(state => !state.called || !state.loading ? {\n      called: true,\n      loading: true\n    } : state);\n\n    if (singular) {\n      abort(); // Cleanup any in-progress fetches\n    }\n\n    const controller = new AbortController();\n    abortControllersRef.current.push(controller);\n    variables.current = { ...variables.current,\n      ...newVariables\n    };\n    const options = {\n      variables: variables.current,\n      signal: controller.signal,\n      onComplete,\n      onError\n    };\n    return theExecute(options).then(data => {\n      if (!controller.signal.aborted) {\n        setState({\n          called: true,\n          loading: false,\n          data\n        });\n        return data;\n      }\n\n      return new Promise(() => undefined); // Wait forever\n    }).catch(error => {\n      if (!controller.signal.aborted) {\n        setState({\n          called: true,\n          loading: false,\n          error\n        });\n      }\n\n      return new Promise(() => undefined); // Don't throw errors in refetch promises, wait forever\n    });\n  }, [abort, onComplete, onError, singular, theExecute]); // Don't include immediate or refetch as deps, otherwise unintentional refetches\n  // may be triggered by changes to input, i.e. recreating the onComplete callback\n\n  useEffect(() => {\n    if (immediate) {\n      refetch();\n    }\n\n    return abort;\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    refetch,\n    abort: manualAbort,\n    ...state\n  };\n};","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","FetchError","useStaticInput","useQueryExecutor","execute","variables","initialVariables","singular","immediate","onComplete","onError","theExecute","state","setState","called","loading","abortControllersRef","abort","current","forEach","controller","manualAbort","error","type","message","refetch","newVariables","AbortController","push","options","signal","then","data","aborted","Promise","undefined","catch"],"sources":["/home/jake/SRC/landing-page/node_modules/@dhis2/app-runtime/node_modules/@dhis2/app-service-data/build/es/react/hooks/useQueryExecutor.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\nimport { FetchError } from '../../engine';\nimport { useStaticInput } from './useStaticInput';\nexport const useQueryExecutor = ({\n  execute,\n  variables: initialVariables,\n  singular,\n  immediate,\n  onComplete,\n  onError\n}) => {\n  const [theExecute] = useStaticInput(execute);\n  const [state, setState] = useState({\n    called: !!immediate,\n    loading: !!immediate\n  });\n  const variables = useRef(initialVariables);\n  const abortControllersRef = useRef([]);\n  const abort = useCallback(() => {\n    abortControllersRef.current.forEach(controller => controller.abort());\n    abortControllersRef.current = [];\n  }, []);\n  const manualAbort = useCallback(() => {\n    abort();\n    setState(state => ({\n      called: state.called,\n      loading: false,\n      error: new FetchError({\n        type: 'aborted',\n        message: 'Aborted'\n      })\n    }));\n  }, [abort]);\n  const refetch = useCallback((newVariables = {}) => {\n    setState(state => !state.called || !state.loading ? {\n      called: true,\n      loading: true\n    } : state);\n\n    if (singular) {\n      abort(); // Cleanup any in-progress fetches\n    }\n\n    const controller = new AbortController();\n    abortControllersRef.current.push(controller);\n    variables.current = { ...variables.current,\n      ...newVariables\n    };\n    const options = {\n      variables: variables.current,\n      signal: controller.signal,\n      onComplete,\n      onError\n    };\n    return theExecute(options).then(data => {\n      if (!controller.signal.aborted) {\n        setState({\n          called: true,\n          loading: false,\n          data\n        });\n        return data;\n      }\n\n      return new Promise(() => undefined); // Wait forever\n    }).catch(error => {\n      if (!controller.signal.aborted) {\n        setState({\n          called: true,\n          loading: false,\n          error\n        });\n      }\n\n      return new Promise(() => undefined); // Don't throw errors in refetch promises, wait forever\n    });\n  }, [abort, onComplete, onError, singular, theExecute]); // Don't include immediate or refetch as deps, otherwise unintentional refetches\n  // may be triggered by changes to input, i.e. recreating the onComplete callback\n\n  useEffect(() => {\n    if (immediate) {\n      refetch();\n    }\n\n    return abort;\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    refetch,\n    abort: manualAbort,\n    ...state\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}