{"ast":null,"code":"import { MockService } from \"./mock.service\";\nlet sendMockService = new MockService();\nexport function registerSendMock(url, response) {\n  return new Promise(resolve => {\n    sendMockService.registerMockedResponse(url, {\n      response,\n      resolve\n    });\n  });\n}\nexport function mockSendingData(url, payload) {\n  if (!isSendMocked(url)) throw new Error(`POST/PUT mock not in place`);\n  let {\n    resolve,\n    response\n  } = sendMockService.getMockedResponse(url);\n  resolve(payload);\n  return Promise.resolve({\n    responseBody: response,\n    success: true,\n    rawResponse: null\n  });\n}\nexport function isSendMocked(url) {\n  return sendMockService.isMocked(url);\n}","map":{"version":3,"names":["MockService","sendMockService","registerSendMock","url","response","Promise","resolve","registerMockedResponse","mockSendingData","payload","isSendMocked","Error","getMockedResponse","responseBody","success","rawResponse","isMocked"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@pepfar-react-lib/datim-api/services/mock/sendMock.service.ts"],"sourcesContent":["import {MockService} from \"./mock.service\";\nimport {ApiResponse} from \"../../types/http.types\";\n\nlet sendMockService = new MockService();\ntype SendMockRecord = {\n    response:any,\n    resolve:(payload:any)=>void\n}\n\nexport function registerSendMock(url:string, response:any):Promise<any>{\n    return new Promise((resolve)=>{\n        sendMockService.registerMockedResponse(url,{response,resolve});\n    });\n}\n\nexport function mockSendingData(url:string,payload:any):Promise<ApiResponse>{\n    if (!isSendMocked(url)) throw new Error(`POST/PUT mock not in place`);\n    let {resolve, response}:SendMockRecord = sendMockService.getMockedResponse(url);\n    resolve(payload);\n    return Promise.resolve({responseBody:response,success:true,rawResponse:null});\n}\n\nexport function isSendMocked(url:string):boolean{\n    return sendMockService.isMocked(url);\n}"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,gBAA1B;AAGA,IAAIC,eAAe,GAAG,IAAID,WAAJ,EAAtB;AAMA,OAAO,SAASE,gBAAT,CAA0BC,GAA1B,EAAsCC,QAAtC,EAAgE;EACnE,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAW;IAC1BL,eAAe,CAACM,sBAAhB,CAAuCJ,GAAvC,EAA2C;MAACC,QAAD;MAAUE;IAAV,CAA3C;EACH,CAFM,CAAP;AAGH;AAED,OAAO,SAASE,eAAT,CAAyBL,GAAzB,EAAoCM,OAApC,EAAqE;EACxE,IAAI,CAACC,YAAY,CAACP,GAAD,CAAjB,EAAwB,MAAM,IAAIQ,KAAJ,CAAW,4BAAX,CAAN;EACxB,IAAI;IAACL,OAAD;IAAUF;EAAV,IAAqCH,eAAe,CAACW,iBAAhB,CAAkCT,GAAlC,CAAzC;EACAG,OAAO,CAACG,OAAD,CAAP;EACA,OAAOJ,OAAO,CAACC,OAAR,CAAgB;IAACO,YAAY,EAACT,QAAd;IAAuBU,OAAO,EAAC,IAA/B;IAAoCC,WAAW,EAAC;EAAhD,CAAhB,CAAP;AACH;AAED,OAAO,SAASL,YAAT,CAAsBP,GAAtB,EAAyC;EAC5C,OAAOF,eAAe,CAACe,QAAhB,CAAyBb,GAAzB,CAAP;AACH"},"metadata":{},"sourceType":"module"}