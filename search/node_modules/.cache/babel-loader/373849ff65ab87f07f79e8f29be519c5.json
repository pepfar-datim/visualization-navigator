{"ast":null,"code":"import { sharedPropTypes } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Field, FieldSet } from '../index.js';\n\nconst FieldGroup = _ref => {\n  let {\n    children,\n    className,\n    disabled,\n    helpText,\n    validationText,\n    label,\n    name,\n    required,\n    dataTest,\n    valid,\n    error,\n    warning\n  } = _ref;\n  return /*#__PURE__*/React.createElement(FieldSet, {\n    classname: className,\n    dataTest: dataTest\n  }, /*#__PURE__*/React.createElement(Field, {\n    label: label,\n    disabled: disabled,\n    required: required,\n    helpText: helpText,\n    validationText: validationText,\n    error: error,\n    warning: warning,\n    valid: valid,\n    name: name\n  }, children));\n};\n\nFieldGroup.defaultProps = {\n  dataTest: 'dhis2-uiwidgets-fieldsetfield'\n};\nFieldGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Disables the form controls within */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' styling to validation text for feedback. Mutually exclusive with `warning` and `valid` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Useful instructions for the user */\n  helpText: PropTypes.string,\n\n  /** Labels the Field Group */\n  label: PropTypes.string,\n\n  /** Name associate with the Field Group. Passed in object as argument to event handlers */\n  name: PropTypes.string,\n\n  /** Adds an asterisk to indicate this field is required */\n  required: PropTypes.bool,\n\n  /** Applies 'valid' styling to validation text for feedback. Mutually exclusive with `warning` and `error` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Adds text at the bottom of the field to provide validation feedback. Acquires styles from `valid`, `warning` and `error` statuses */\n  validationText: PropTypes.string,\n\n  /** Applies 'warning' styling to validation text for feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType\n};\nexport { FieldGroup };","map":{"version":3,"names":["sharedPropTypes","PropTypes","React","Field","FieldSet","FieldGroup","_ref","children","className","disabled","helpText","validationText","label","name","required","dataTest","valid","error","warning","createElement","classname","defaultProps","propTypes","node","string","bool","statusPropType"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@dhis2-ui/header-bar/node_modules/@dhis2-ui/input/node_modules/@dhis2-ui/field/build/es/field-group/field-group.js"],"sourcesContent":["import { sharedPropTypes } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Field, FieldSet } from '../index.js';\n\nconst FieldGroup = _ref => {\n  let {\n    children,\n    className,\n    disabled,\n    helpText,\n    validationText,\n    label,\n    name,\n    required,\n    dataTest,\n    valid,\n    error,\n    warning\n  } = _ref;\n  return /*#__PURE__*/React.createElement(FieldSet, {\n    classname: className,\n    dataTest: dataTest\n  }, /*#__PURE__*/React.createElement(Field, {\n    label: label,\n    disabled: disabled,\n    required: required,\n    helpText: helpText,\n    validationText: validationText,\n    error: error,\n    warning: warning,\n    valid: valid,\n    name: name\n  }, children));\n};\n\nFieldGroup.defaultProps = {\n  dataTest: 'dhis2-uiwidgets-fieldsetfield'\n};\nFieldGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Disables the form controls within */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' styling to validation text for feedback. Mutually exclusive with `warning` and `valid` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Useful instructions for the user */\n  helpText: PropTypes.string,\n\n  /** Labels the Field Group */\n  label: PropTypes.string,\n\n  /** Name associate with the Field Group. Passed in object as argument to event handlers */\n  name: PropTypes.string,\n\n  /** Adds an asterisk to indicate this field is required */\n  required: PropTypes.bool,\n\n  /** Applies 'valid' styling to validation text for feedback. Mutually exclusive with `warning` and `error` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Adds text at the bottom of the field to provide validation feedback. Acquires styles from `valid`, `warning` and `error` statuses */\n  validationText: PropTypes.string,\n\n  /** Applies 'warning' styling to validation text for feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType\n};\nexport { FieldGroup };"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,aAAhC;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IAAI;EACzB,IAAI;IACFC,QADE;IAEFC,SAFE;IAGFC,QAHE;IAIFC,QAJE;IAKFC,cALE;IAMFC,KANE;IAOFC,IAPE;IAQFC,QARE;IASFC,QATE;IAUFC,KAVE;IAWFC,KAXE;IAYFC;EAZE,IAaAZ,IAbJ;EAcA,OAAO,aAAaJ,KAAK,CAACiB,aAAN,CAAoBf,QAApB,EAA8B;IAChDgB,SAAS,EAAEZ,SADqC;IAEhDO,QAAQ,EAAEA;EAFsC,CAA9B,EAGjB,aAAab,KAAK,CAACiB,aAAN,CAAoBhB,KAApB,EAA2B;IACzCS,KAAK,EAAEA,KADkC;IAEzCH,QAAQ,EAAEA,QAF+B;IAGzCK,QAAQ,EAAEA,QAH+B;IAIzCJ,QAAQ,EAAEA,QAJ+B;IAKzCC,cAAc,EAAEA,cALyB;IAMzCM,KAAK,EAAEA,KANkC;IAOzCC,OAAO,EAAEA,OAPgC;IAQzCF,KAAK,EAAEA,KARkC;IASzCH,IAAI,EAAEA;EATmC,CAA3B,EAUbN,QAVa,CAHI,CAApB;AAcD,CA7BD;;AA+BAF,UAAU,CAACgB,YAAX,GAA0B;EACxBN,QAAQ,EAAE;AADc,CAA1B;AAGAV,UAAU,CAACiB,SAAX,GAAuB;EACrBf,QAAQ,EAAEN,SAAS,CAACsB,IADC;EAErBf,SAAS,EAAEP,SAAS,CAACuB,MAFA;EAGrBT,QAAQ,EAAEd,SAAS,CAACuB,MAHC;;EAKrB;EACAf,QAAQ,EAAER,SAAS,CAACwB,IANC;;EAQrB;EACAR,KAAK,EAAEjB,eAAe,CAAC0B,cATF;;EAWrB;EACAhB,QAAQ,EAAET,SAAS,CAACuB,MAZC;;EAcrB;EACAZ,KAAK,EAAEX,SAAS,CAACuB,MAfI;;EAiBrB;EACAX,IAAI,EAAEZ,SAAS,CAACuB,MAlBK;;EAoBrB;EACAV,QAAQ,EAAEb,SAAS,CAACwB,IArBC;;EAuBrB;EACAT,KAAK,EAAEhB,eAAe,CAAC0B,cAxBF;;EA0BrB;EACAf,cAAc,EAAEV,SAAS,CAACuB,MA3BL;;EA6BrB;EACAN,OAAO,EAAElB,eAAe,CAAC0B;AA9BJ,CAAvB;AAgCA,SAASrB,UAAT"},"metadata":{},"sourceType":"module"}