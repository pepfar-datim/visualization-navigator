import _JSXStyle from "styled-jsx/style";
import { colors, theme, spacers } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';

const Progress = _ref => {
  let {
    amount,
    invert,
    className
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["686723300", [amount]], ["3392977398", [theme.primary600, colors.white]]]) + " " + (cx(className, {
      invert
    }) || "")
  }, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "686723300",
    dynamic: [amount]
  }, ["div.__jsx-style-dynamic-selector{width:".concat(amount, "%;}")]), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3392977398",
    dynamic: [theme.primary600, colors.white]
  }, ["div.__jsx-style-dynamic-selector{background-color:".concat(theme.primary600, ";-webkit-transition:width 0.3s linear;transition:width 0.3s linear;height:4px;}"), ".invert.__jsx-style-dynamic-selector{background-color:".concat(colors.white, ";}")]));
};

Progress.propTypes = {
  amount: PropTypes.number.isRequired,
  className: PropTypes.string,
  invert: PropTypes.bool
};

const LinearLoader = _ref2 => {
  let {
    amount,
    width,
    margin,
    invert,
    className,
    dataTest
  } = _ref2;
  return /*#__PURE__*/React.createElement("div", {
    role: "progressbar",
    "data-test": dataTest,
    className: "jsx-3127531794 " + _JSXStyle.dynamic([["3224415970", [width, margin]]]) + " " + (cx(className, {
      invert
    }) || "")
  }, /*#__PURE__*/React.createElement(Progress, {
    amount: amount,
    invert: invert
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3127531794"
  }, ["div.jsx-3127531794{display:block;overflow:hidden;overflow-x:hidden;overflow-y:hidden;background-color:rgba(110,122,138,0.15);}", ".invert.jsx-3127531794{background-color:rgba(33,41,52,0.5);}"]), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3224415970",
    dynamic: [width, margin]
  }, ["div.__jsx-style-dynamic-selector{width:".concat(width, ";margin:").concat(margin, ";}")]));
};

LinearLoader.defaultProps = {
  margin: spacers.dp12,
  width: '300px',
  dataTest: 'dhis2-uicore-linearloader'
};
LinearLoader.propTypes = {
  /** The progression in percent without the '%' sign */
  amount: PropTypes.number.isRequired,
  className: PropTypes.string,
  dataTest: PropTypes.string,

  /** Use inverted color scheme */
  invert: PropTypes.bool,

  /** The margin around the loader, can be a full shorthand */
  margin: PropTypes.string,

  /** The width of the entire indicator */
  width: PropTypes.string
};
export { LinearLoader };