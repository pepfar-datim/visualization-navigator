"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Autocomplete = void 0;

var _input = require("@dhis2-ui/input");

var _menu = require("@dhis2-ui/menu");

var _appRuntime = require("@dhis2/app-runtime");

var _size = _interopRequireDefault(require("@react-hook/size"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _index = _interopRequireDefault(require("../locales/index.js"));

var _menuPopup = require("./menu-popup.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Autocomplete = _ref => {
  let {
    dataTest,
    inputWidth,
    label,
    loading,
    onClose,
    onSearch,
    onSelect,
    placeholder,
    search,
    searchResults
  } = _ref;
  const wrapper = (0, _react.useRef)(null);
  const [menuWidth] = (0, _size.default)(wrapper);
  const {
    offline
  } = (0, _appRuntime.useOnlineStatus)();
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    ref: wrapper
  }, /*#__PURE__*/_react.default.createElement(_input.InputField, {
    label: label,
    loading: loading,
    placeholder: placeholder,
    onChange: _ref2 => {
      let {
        value
      } = _ref2;
      return onSearch(value);
    },
    value: search,
    inputWidth: inputWidth,
    disabled: offline,
    helpText: offline ? _index.default.t('Not available offline') : ''
  })), searchResults.length > 0 && /*#__PURE__*/_react.default.createElement(_menuPopup.MenuPopup, {
    onClick: onClose,
    menuWidth: "".concat(menuWidth, "px"),
    menuRef: wrapper,
    dataTest: "".concat(dataTest, "-menu")
  }, /*#__PURE__*/_react.default.createElement(_menu.Menu, null, searchResults.map(result => /*#__PURE__*/_react.default.createElement(_menu.MenuItem, {
    key: result.id,
    label: result.displayName,
    value: result.id,
    onClick: _ref3 => {
      let {
        value
      } = _ref3;
      return onSelect(value);
    }
  })))));
};

exports.Autocomplete = Autocomplete;
Autocomplete.defaultProps = {
  dataTest: 'dhis2-sharingdialog-autocomplete'
};
Autocomplete.propTypes = {
  searchResults: _propTypes.default.arrayOf(_propTypes.default.shape({
    displayName: _propTypes.default.string,
    id: _propTypes.default.string
  })).isRequired,
  dataTest: _propTypes.default.string,
  inputWidth: _propTypes.default.string,
  label: _propTypes.default.string,
  loading: _propTypes.default.bool,
  placeholder: _propTypes.default.string,
  search: _propTypes.default.string,
  onClose: _propTypes.default.func,
  onSearch: _propTypes.default.func,
  onSelect: _propTypes.default.func
};