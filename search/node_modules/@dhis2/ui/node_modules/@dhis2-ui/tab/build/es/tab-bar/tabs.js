import _JSXStyle from "styled-jsx/style";
import { colors } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';

const Tabs = _ref => {
  let {
    children,
    fixed,
    dataTest
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["2678989862", [colors.grey400, colors.white]]]) + " " + (cx({
      fixed
    }) || "")
  }, children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2678989862",
    dynamic: [colors.grey400, colors.white]
  }, ["div.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;position:relative;overflow:hidden;box-shadow:inset 0 -1px 0 0 ".concat(colors.grey400, ";-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;background:").concat(colors.white, ";}")]));
};

Tabs.propTypes = {
  dataTest: PropTypes.string.isRequired,
  children: PropTypes.node,
  fixed: PropTypes.bool
};
export { Tabs };