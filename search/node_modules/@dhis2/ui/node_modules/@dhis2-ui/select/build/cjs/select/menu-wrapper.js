"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuWrapper = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _layer = require("@dhis2-ui/layer");

var _popper = require("@dhis2-ui/popper");

var _uiConstants = require("@dhis2/ui-constants");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const MenuWrapper = _ref => {
  let {
    children,
    dataTest,
    maxHeight,
    menuWidth,
    onClick,
    selectRef
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_layer.Layer, {
    onClick: onClick,
    transparent: true
  }, /*#__PURE__*/_react.default.createElement(_popper.Popper, {
    reference: selectRef,
    placement: "bottom-start",
    observeReferenceResize: true
  }, /*#__PURE__*/_react.default.createElement("div", {
    "data-test": "".concat(dataTest, "-menuwrapper"),
    className: _style.default.dynamic([["1363246346", [menuWidth, maxHeight, _uiConstants.colors.white, _uiConstants.colors.grey200, _uiConstants.elevations.e300]]])
  }, children, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "1363246346",
    dynamic: [menuWidth, maxHeight, _uiConstants.colors.white, _uiConstants.colors.grey200, _uiConstants.elevations.e300]
  }, ["div.__jsx-style-dynamic-selector{width:".concat(menuWidth, ";height:auto;max-height:").concat(maxHeight, ";overflow:auto;background:").concat(_uiConstants.colors.white, ";border:1px solid ").concat(_uiConstants.colors.grey200, ";border-radius:3px;box-shadow:").concat(_uiConstants.elevations.e300, ";}")]))));
};

exports.MenuWrapper = MenuWrapper;
MenuWrapper.defaultProps = {
  maxHeight: '280px'
};
MenuWrapper.propTypes = {
  dataTest: _propTypes.default.string.isRequired,
  menuWidth: _propTypes.default.string.isRequired,
  selectRef: _propTypes.default.object.isRequired,
  children: _propTypes.default.node,
  maxHeight: _propTypes.default.string,
  onClick: _propTypes.default.func
};