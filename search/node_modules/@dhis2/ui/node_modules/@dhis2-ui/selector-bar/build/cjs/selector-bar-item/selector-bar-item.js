"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SelectorBarItem = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _card = require("@dhis2-ui/card");

var _layer = require("@dhis2-ui/layer");

var _popper = require("@dhis2-ui/popper");

var _uiConstants = require("@dhis2/ui-constants");

var _uiIcons = require("@dhis2/ui-icons");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const offsetModifier = {
  name: 'offset',
  options: {
    offset: [0, 2]
  }
};
/**
 * The reason this component expects the "open" state and "setOpen" function is
 * because certain actions inside the props.children might have to set "open"
 * to false as well.
 * A good example is selecting a value (which is not a click outside) and this
 * component neither has any control over that component nor does it have a way
 * to "observe" that behavior. Especially for selection bar items that allow
 * "multiple" selections, this would be more or less impossible to predict
 * inside this component
 */

const SelectorBarItem = _ref => {
  let {
    children,
    className,
    dataTest,
    disabled,
    label,
    noValueMessage,
    open,
    setOpen,
    value
  } = _ref;
  const buttonRef = (0, _react.useRef)();
  const Icon = open ? _uiIcons.IconChevronUp24 : _uiIcons.IconChevronDown24;
  return /*#__PURE__*/_react.default.createElement("button", {
    ref: buttonRef,
    disabled: disabled,
    onClick: () => setOpen(true),
    "data-test": dataTest,
    className: _style.default.dynamic([["3065814091", [
    /*
     * The arrow icon has ~4px empty space on the sides,
     * that's why the padding on the right is only 8px.
     */
    '', _uiConstants.spacers.dp8, _uiConstants.spacers.dp12, _uiConstants.colors.grey400, _uiConstants.colors.grey600, _uiConstants.spacers.dp8, _uiConstants.spacers.dp4]]]) + " " + ((0, _classnames.default)('selector-bar-item', className) || "")
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: _style.default.dynamic([["3065814091", ['', _uiConstants.spacers.dp8, _uiConstants.spacers.dp12, _uiConstants.colors.grey400, _uiConstants.colors.grey600, _uiConstants.spacers.dp8, _uiConstants.spacers.dp4]]]) + " " + "label"
  }, label), !disabled && /*#__PURE__*/_react.default.createElement("span", {
    className: _style.default.dynamic([["3065814091", ['', _uiConstants.spacers.dp8, _uiConstants.spacers.dp12, _uiConstants.colors.grey400, _uiConstants.colors.grey600, _uiConstants.spacers.dp8, _uiConstants.spacers.dp4]]]) + " " + "value"
  }, value || noValueMessage), /*#__PURE__*/_react.default.createElement("span", {
    className: _style.default.dynamic([["3065814091", ['', _uiConstants.spacers.dp8, _uiConstants.spacers.dp12, _uiConstants.colors.grey400, _uiConstants.colors.grey600, _uiConstants.spacers.dp8, _uiConstants.spacers.dp4]]]) + " " + "toggle-icon"
  }, /*#__PURE__*/_react.default.createElement(Icon, {
    className: _style.default.dynamic([["3065814091", ['', _uiConstants.spacers.dp8, _uiConstants.spacers.dp12, _uiConstants.colors.grey400, _uiConstants.colors.grey600, _uiConstants.spacers.dp8, _uiConstants.spacers.dp4]]])
  })), open && /*#__PURE__*/_react.default.createElement(_layer.Layer, {
    onClick: (_, evt) => {
      evt.stopPropagation();
      setOpen(false);
    }
  }, /*#__PURE__*/_react.default.createElement(_popper.Popper, {
    reference: buttonRef,
    placement: "bottom-end",
    modifiers: [offsetModifier]
  }, /*#__PURE__*/_react.default.createElement(_card.Card, null, children))), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3065814091",
    dynamic: ['', _uiConstants.spacers.dp8, _uiConstants.spacers.dp12, _uiConstants.colors.grey400, _uiConstants.colors.grey600, _uiConstants.spacers.dp8, _uiConstants.spacers.dp4]
  }, [".selector-bar-item.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;background:none;height:40px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;".concat(" padding:0 ", _uiConstants.spacers.dp8, " 0 ").concat(_uiConstants.spacers.dp12, ";font-size:14px;line-height:16px;border:none;box-shadow:0px 0px 0px 1px ").concat(_uiConstants.colors.grey400, ";}"), ".selector-bar-item.__jsx-style-dynamic-selector:disabled{cursor:not-allowed;}", ".label.__jsx-style-dynamic-selector{color:".concat(_uiConstants.colors.grey600, ";}"), ".value.__jsx-style-dynamic-selector{padding-left:".concat(_uiConstants.spacers.dp8, ";}"), ".toggle-icon.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin-left:".concat(_uiConstants.spacers.dp4, ";height:100%;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}")]));
};

exports.SelectorBarItem = SelectorBarItem;
SelectorBarItem.defaultProps = {
  dataTest: 'dhis2-ui-selectorbaritem'
};
SelectorBarItem.propTypes = {
  children: _propTypes.default.any.isRequired,
  label: _propTypes.default.string.isRequired,
  noValueMessage: _propTypes.default.string.isRequired,
  open: _propTypes.default.bool.isRequired,
  setOpen: _propTypes.default.func.isRequired,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  value: _propTypes.default.string
};