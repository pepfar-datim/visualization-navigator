{"ast":null,"code":"var _jsxFileName = \"/home/jake/SRC/visualization-navigator-ts/src/modules/searchFilters/components/searchFilters.component.tsx\";\nimport React from \"react\";\nimport { allFilters } from \"../types/searchFilters.type\";\nimport { SearchFilterComponent } from \"./searchFilter.component\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst changeFilter = (i, searchFilter, searchFilters, updateFilters) => {\n  const {\n    filterType,\n    operator,\n    value\n  } = searchFilter;\n  if (!filterType || !allFilters.includes(filterType)) throw new Error(`Cannot change filter type`);\n  searchFilters[i] = {\n    filterType: filterType,\n    value,\n    operator\n  };\n  updateFilters(searchFilters);\n};\n\nconst addFilter = (searchFilters, updateFilters) => {\n  searchFilters.push({\n    filterType: null,\n    operator: null,\n    value: null\n  });\n  updateFilters(searchFilters);\n};\n\nconst deleteFilter = (index, searchFilters, updateFilters) => {\n  updateFilters(searchFilters.filter((f, i) => i !== index));\n};\n\nexport function SearchFilters(_ref) {\n  let {\n    searchFilters,\n    updateFilters\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [searchFilters.map((f, i) => /*#__PURE__*/_jsxDEV(SearchFilterComponent, {\n      searchFilter: f,\n      changeFilter: searchFilter => {\n        changeFilter(i, searchFilter, searchFilters, updateFilters);\n      },\n      deleteFilter: () => deleteFilter(i, searchFilters, updateFilters)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 56\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addFilter(searchFilters, updateFilters),\n      children: \"Add filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"info\",\n      children: searchFilters.length === 0 ? 'Show all' : 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = SearchFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchFilters\");","map":{"version":3,"names":["React","allFilters","SearchFilterComponent","Button","changeFilter","i","searchFilter","searchFilters","updateFilters","filterType","operator","value","includes","Error","addFilter","push","deleteFilter","index","filter","f","SearchFilters","map","length"],"sources":["/home/jake/SRC/visualization-navigator-ts/src/modules/searchFilters/components/searchFilters.component.tsx"],"sourcesContent":["import React from \"react\";\nimport {allFilters, FilterProperty, SearchFilter} from \"../types/searchFilters.type\";\nimport {UpdateFilters} from \"../../searchPage/types/methods.type\";\nimport { SearchFilterComponent } from \"./searchFilter.component\";\nimport {Button} from \"@mui/material\";\n\nconst changeFilter = (i:number, searchFilter:SearchFilter, searchFilters:SearchFilter[], updateFilters:UpdateFilters)=>{\n    const {filterType,operator,value}:SearchFilter = searchFilter;\n    if (!filterType||!allFilters.includes(filterType)) throw new Error(`Cannot change filter type`);\n    searchFilters[i] = {filterType:filterType as FilterProperty,value, operator}\n    updateFilters(searchFilters);\n}\n\nconst addFilter = (searchFilters:SearchFilter[], updateFilters:UpdateFilters)=>{\n    searchFilters.push({filterType:null, operator: null, value:null});\n    updateFilters(searchFilters);\n}\n\nconst deleteFilter = (index:number, searchFilters:SearchFilter[], updateFilters:UpdateFilters)=>{\n    updateFilters(searchFilters.filter((f,i)=>i!==index))\n}\n\nexport function SearchFilters({searchFilters, updateFilters}:{\n    searchFilters:SearchFilter[],\n    updateFilters:UpdateFilters\n}) {\n    return <>\n        {searchFilters.map((f:SearchFilter, i:number)=><SearchFilterComponent\n            searchFilter={f}\n            changeFilter={(searchFilter:SearchFilter)=>{\n                changeFilter(i,searchFilter,searchFilters,updateFilters)\n            }}\n            deleteFilter={()=>deleteFilter(i, searchFilters, updateFilters)}\n        />)}\n        <br/>\n        <Button onClick={()=>addFilter(searchFilters,updateFilters)}>Add filter</Button>\n        <Button color='info'>{searchFilters.length===0?'Show all':'Search'}</Button>\n    </>;\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAuD,6BAAvD;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAAQC,MAAR,QAAqB,eAArB;;;;AAEA,MAAMC,YAAY,GAAG,CAACC,CAAD,EAAWC,YAAX,EAAsCC,aAAtC,EAAoEC,aAApE,KAAkG;EACnH,MAAM;IAACC,UAAD;IAAYC,QAAZ;IAAqBC;EAArB,IAA2CL,YAAjD;EACA,IAAI,CAACG,UAAD,IAAa,CAACR,UAAU,CAACW,QAAX,CAAoBH,UAApB,CAAlB,EAAmD,MAAM,IAAII,KAAJ,CAAW,2BAAX,CAAN;EACnDN,aAAa,CAACF,CAAD,CAAb,GAAmB;IAACI,UAAU,EAACA,UAAZ;IAAyCE,KAAzC;IAAgDD;EAAhD,CAAnB;EACAF,aAAa,CAACD,aAAD,CAAb;AACH,CALD;;AAOA,MAAMO,SAAS,GAAG,CAACP,aAAD,EAA+BC,aAA/B,KAA6D;EAC3ED,aAAa,CAACQ,IAAd,CAAmB;IAACN,UAAU,EAAC,IAAZ;IAAkBC,QAAQ,EAAE,IAA5B;IAAkCC,KAAK,EAAC;EAAxC,CAAnB;EACAH,aAAa,CAACD,aAAD,CAAb;AACH,CAHD;;AAKA,MAAMS,YAAY,GAAG,CAACC,KAAD,EAAeV,aAAf,EAA6CC,aAA7C,KAA2E;EAC5FA,aAAa,CAACD,aAAa,CAACW,MAAd,CAAqB,CAACC,CAAD,EAAGd,CAAH,KAAOA,CAAC,KAAGY,KAAhC,CAAD,CAAb;AACH,CAFD;;AAIA,OAAO,SAASG,aAAT,OAGJ;EAAA,IAH2B;IAACb,aAAD;IAAgBC;EAAhB,CAG3B;EACC,oBAAO;IAAA,WACFD,aAAa,CAACc,GAAd,CAAkB,CAACF,CAAD,EAAiBd,CAAjB,kBAA4B,QAAC,qBAAD;MAC3C,YAAY,EAAEc,CAD6B;MAE3C,YAAY,EAAGb,YAAD,IAA6B;QACvCF,YAAY,CAACC,CAAD,EAAGC,YAAH,EAAgBC,aAAhB,EAA8BC,aAA9B,CAAZ;MACH,CAJ0C;MAK3C,YAAY,EAAE,MAAIQ,YAAY,CAACX,CAAD,EAAIE,aAAJ,EAAmBC,aAAnB;IALa;MAAA;MAAA;MAAA;IAAA,QAA9C,CADE,eAQH;MAAA;MAAA;MAAA;IAAA,QARG,eASH,QAAC,MAAD;MAAQ,OAAO,EAAE,MAAIM,SAAS,CAACP,aAAD,EAAeC,aAAf,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATG,eAUH,QAAC,MAAD;MAAQ,KAAK,EAAC,MAAd;MAAA,UAAsBD,aAAa,CAACe,MAAd,KAAuB,CAAvB,GAAyB,UAAzB,GAAoC;IAA1D;MAAA;MAAA;MAAA;IAAA,QAVG;EAAA,gBAAP;AAYH;KAhBeF,a"},"metadata":{},"sourceType":"module"}