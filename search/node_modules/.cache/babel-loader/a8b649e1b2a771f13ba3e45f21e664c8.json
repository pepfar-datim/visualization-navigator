{"ast":null,"code":"export let HttpMethod;\n\n(function (HttpMethod) {\n  HttpMethod[\"post\"] = \"POST\";\n  HttpMethod[\"get\"] = \"GET\";\n  HttpMethod[\"put\"] = \"PUT\";\n  HttpMethod[\"patch\"] = \"PATCH\";\n})(HttpMethod || (HttpMethod = {}));\n\nexport let ContentType;\n\n(function (ContentType) {\n  ContentType[\"json\"] = \"application/json\";\n  ContentType[\"text\"] = \"text/plain\";\n})(ContentType || (ContentType = {}));\n\nexport let ErrorType;\n\n(function (ErrorType) {\n  ErrorType[ErrorType[\"cannotParse\"] = 0] = \"cannotParse\";\n  ErrorType[ErrorType[\"silentRedirect\"] = 1] = \"silentRedirect\";\n  ErrorType[ErrorType[\"httpError\"] = 2] = \"httpError\";\n  ErrorType[ErrorType[\"alreadyExists\"] = 3] = \"alreadyExists\";\n  ErrorType[ErrorType[\"dhis2ErrorSpecified\"] = 4] = \"dhis2ErrorSpecified\";\n  ErrorType[ErrorType[\"dhis2ErrorUnspecified\"] = 5] = \"dhis2ErrorUnspecified\";\n})(ErrorType || (ErrorType = {}));","map":{"version":3,"names":["HttpMethod","ContentType","ErrorType"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@pepfar-react-lib/datim-api/types/http.types.ts"],"sourcesContent":["export enum HttpMethod {\n    post='POST',\n    get='GET',\n    put='PUT',\n    patch='PATCH'\n}\n\nexport enum ContentType {\n    json = 'application/json',\n    text = 'text/plain'\n}\n\nexport enum ErrorType {\n    cannotParse,\n    silentRedirect,\n    httpError,\n    alreadyExists,\n    dhis2ErrorSpecified,\n    dhis2ErrorUnspecified\n}\n\nexport type ApiResponse = {\n    success:boolean,\n    errorType?:ErrorType,\n    errorMessage?:string,\n    rawResponse:Response,\n    responseBody?: any\n}"],"mappings":"AAAA,WAAYA,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAOZ,WAAYC,WAAZ;;WAAYA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W;;AAKZ,WAAYC,SAAZ;;WAAYA,S;EAAAA,S,CAAAA,S;EAAAA,S,CAAAA,S;EAAAA,S,CAAAA,S;EAAAA,S,CAAAA,S;EAAAA,S,CAAAA,S;EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S"},"metadata":{},"sourceType":"module"}