{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport { sharedPropTypes } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ImageAvatar } from './image-avatar.js';\nimport { TextAvatar } from './text-avatar.js';\n/**\nAn avatar is a visual icon that represents a user.\n\nUse an avatar to give extra information when a user is mentioned or displayed in DHIS2. The avatar shows a user uploaded photograph or initials. The avatar is intended to give context and help to identify different users. An avatar is usually shown alongside the user name, but can be used alone to show a visual hint of a user.\n\nSee specification: [Design System](https://github.com/dhis2/design-system/blob/master/atoms/avatar.md)\n\n```js\nimport { UserAvatar } from '@dhis2/ui'\n```\n*/\n\nvar UserAvatar = function UserAvatar(_ref) {\n  var name = _ref.name,\n      avatarId = _ref.avatarId,\n      className = _ref.className,\n      dataTest = _ref.dataTest,\n      extralarge = _ref.extralarge,\n      extrasmall = _ref.extrasmall,\n      large = _ref.large,\n      medium = _ref.medium,\n      small = _ref.small;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest,\n    className: \"jsx-3366500546\" + \" \" + (cx(className, {\n      extrasmall: extrasmall,\n      small: small,\n      medium: medium,\n      large: large,\n      extralarge: extralarge\n    }) || \"\")\n  }, avatarId ? /*#__PURE__*/React.createElement(ImageAvatar, {\n    avatarId: avatarId,\n    dataTest: \"\".concat(dataTest, \"-image\")\n  }) : /*#__PURE__*/React.createElement(TextAvatar, {\n    name: name,\n    dataTest: \"\".concat(dataTest, \"-text\"),\n    extrasmall: extrasmall,\n    small: small,\n    medium: medium,\n    large: large,\n    extralarge: extralarge\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3366500546\"\n  }, [\"div.jsx-3366500546{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}\", \"div.extrasmall.jsx-3366500546{height:16px;width:16px;}\", \"div.small.jsx-3366500546{height:24px;width:24px;}\", \"div.jsx-3366500546,div.medium.jsx-3366500546{height:36px;width:36px;}\", \"div.large.jsx-3366500546{height:48px;width:48px;}\", \"div.extralarge.jsx-3366500546{height:72px;width:72px;}\"]));\n};\n\nUserAvatar.defaultProps = {\n  dataTest: 'dhis2-uicore-useravatar'\n};\nUserAvatar.propTypes = {\n  // Name could stop being required if we implement an\n  // SVG fallback with a `IconUser24`.\n  // This has been discussed and deferred\n  name: PropTypes.string.isRequired,\n  avatarId: PropTypes.string,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n  extralarge: sharedPropTypes.sizePropType,\n  extrasmall: sharedPropTypes.sizePropType,\n  large: sharedPropTypes.sizePropType,\n  medium: sharedPropTypes.sizePropType,\n  small: sharedPropTypes.sizePropType\n};\nexport { UserAvatar };","map":{"version":3,"names":["_JSXStyle","sharedPropTypes","cx","PropTypes","React","ImageAvatar","TextAvatar","UserAvatar","_ref","name","avatarId","className","dataTest","extralarge","extrasmall","large","medium","small","createElement","concat","id","defaultProps","propTypes","string","isRequired","sizePropType"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@dhis2-ui/header-bar/node_modules/@dhis2-ui/user-avatar/build/es/user-avatar.js"],"sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport { sharedPropTypes } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ImageAvatar } from './image-avatar.js';\nimport { TextAvatar } from './text-avatar.js';\n/**\nAn avatar is a visual icon that represents a user.\n\nUse an avatar to give extra information when a user is mentioned or displayed in DHIS2. The avatar shows a user uploaded photograph or initials. The avatar is intended to give context and help to identify different users. An avatar is usually shown alongside the user name, but can be used alone to show a visual hint of a user.\n\nSee specification: [Design System](https://github.com/dhis2/design-system/blob/master/atoms/avatar.md)\n\n```js\nimport { UserAvatar } from '@dhis2/ui'\n```\n*/\n\nconst UserAvatar = _ref => {\n  let {\n    name,\n    avatarId,\n    className,\n    dataTest,\n    extralarge,\n    extrasmall,\n    large,\n    medium,\n    small\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest,\n    className: \"jsx-3366500546\" + \" \" + (cx(className, {\n      extrasmall,\n      small,\n      medium,\n      large,\n      extralarge\n    }) || \"\")\n  }, avatarId ? /*#__PURE__*/React.createElement(ImageAvatar, {\n    avatarId: avatarId,\n    dataTest: \"\".concat(dataTest, \"-image\")\n  }) : /*#__PURE__*/React.createElement(TextAvatar, {\n    name: name,\n    dataTest: \"\".concat(dataTest, \"-text\"),\n    extrasmall: extrasmall,\n    small: small,\n    medium: medium,\n    large: large,\n    extralarge: extralarge\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3366500546\"\n  }, [\"div.jsx-3366500546{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}\", \"div.extrasmall.jsx-3366500546{height:16px;width:16px;}\", \"div.small.jsx-3366500546{height:24px;width:24px;}\", \"div.jsx-3366500546,div.medium.jsx-3366500546{height:36px;width:36px;}\", \"div.large.jsx-3366500546{height:48px;width:48px;}\", \"div.extralarge.jsx-3366500546{height:72px;width:72px;}\"]));\n};\n\nUserAvatar.defaultProps = {\n  dataTest: 'dhis2-uicore-useravatar'\n};\nUserAvatar.propTypes = {\n  // Name could stop being required if we implement an\n  // SVG fallback with a `IconUser24`.\n  // This has been discussed and deferred\n  name: PropTypes.string.isRequired,\n  avatarId: PropTypes.string,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n  extralarge: sharedPropTypes.sizePropType,\n  extrasmall: sharedPropTypes.sizePropType,\n  large: sharedPropTypes.sizePropType,\n  medium: sharedPropTypes.sizePropType,\n  small: sharedPropTypes.sizePropType\n};\nexport { UserAvatar };"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;EACzB,IACEC,IADF,GAUID,IAVJ,CACEC,IADF;EAAA,IAEEC,QAFF,GAUIF,IAVJ,CAEEE,QAFF;EAAA,IAGEC,SAHF,GAUIH,IAVJ,CAGEG,SAHF;EAAA,IAIEC,QAJF,GAUIJ,IAVJ,CAIEI,QAJF;EAAA,IAKEC,UALF,GAUIL,IAVJ,CAKEK,UALF;EAAA,IAMEC,UANF,GAUIN,IAVJ,CAMEM,UANF;EAAA,IAOEC,KAPF,GAUIP,IAVJ,CAOEO,KAPF;EAAA,IAQEC,MARF,GAUIR,IAVJ,CAQEQ,MARF;EAAA,IASEC,KATF,GAUIT,IAVJ,CASES,KATF;EAWA,OAAO,aAAab,KAAK,CAACc,aAAN,CAAoB,KAApB,EAA2B;IAC7C,aAAaN,QADgC;IAE7CD,SAAS,EAAE,mBAAmB,GAAnB,IAA0BT,EAAE,CAACS,SAAD,EAAY;MACjDG,UAAU,EAAVA,UADiD;MAEjDG,KAAK,EAALA,KAFiD;MAGjDD,MAAM,EAANA,MAHiD;MAIjDD,KAAK,EAALA,KAJiD;MAKjDF,UAAU,EAAVA;IALiD,CAAZ,CAAF,IAM/B,EANK;EAFkC,CAA3B,EASjBH,QAAQ,GAAG,aAAaN,KAAK,CAACc,aAAN,CAAoBb,WAApB,EAAiC;IAC1DK,QAAQ,EAAEA,QADgD;IAE1DE,QAAQ,EAAE,GAAGO,MAAH,CAAUP,QAAV,EAAoB,QAApB;EAFgD,CAAjC,CAAhB,GAGN,aAAaR,KAAK,CAACc,aAAN,CAAoBZ,UAApB,EAAgC;IAChDG,IAAI,EAAEA,IAD0C;IAEhDG,QAAQ,EAAE,GAAGO,MAAH,CAAUP,QAAV,EAAoB,OAApB,CAFsC;IAGhDE,UAAU,EAAEA,UAHoC;IAIhDG,KAAK,EAAEA,KAJyC;IAKhDD,MAAM,EAAEA,MALwC;IAMhDD,KAAK,EAAEA,KANyC;IAOhDF,UAAU,EAAEA;EAPoC,CAAhC,CAZE,EAoBhB,aAAaT,KAAK,CAACc,aAAN,CAAoBlB,SAApB,EAA+B;IAC9CoB,EAAE,EAAE;EAD0C,CAA/B,EAEd,CAAC,4HAAD,EAA+H,wDAA/H,EAAyL,mDAAzL,EAA8O,uEAA9O,EAAuT,mDAAvT,EAA4W,wDAA5W,CAFc,CApBG,CAApB;AAuBD,CAnCD;;AAqCAb,UAAU,CAACc,YAAX,GAA0B;EACxBT,QAAQ,EAAE;AADc,CAA1B;AAGAL,UAAU,CAACe,SAAX,GAAuB;EACrB;EACA;EACA;EACAb,IAAI,EAAEN,SAAS,CAACoB,MAAV,CAAiBC,UAJF;EAKrBd,QAAQ,EAAEP,SAAS,CAACoB,MALC;EAMrBZ,SAAS,EAAER,SAAS,CAACoB,MANA;EAOrBX,QAAQ,EAAET,SAAS,CAACoB,MAPC;EAQrBV,UAAU,EAAEZ,eAAe,CAACwB,YARP;EASrBX,UAAU,EAAEb,eAAe,CAACwB,YATP;EAUrBV,KAAK,EAAEd,eAAe,CAACwB,YAVF;EAWrBT,MAAM,EAAEf,eAAe,CAACwB,YAXH;EAYrBR,KAAK,EAAEhB,eAAe,CAACwB;AAZF,CAAvB;AAcA,SAASlB,UAAT"},"metadata":{},"sourceType":"module"}