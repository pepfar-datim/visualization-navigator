"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function SvgLink24(_ref) {
  let {
    color
  } = _ref;
  return /*#__PURE__*/React.createElement("svg", {
    height: 24,
    viewBox: "0 0 24 24",
    width: 24,
    xmlns: "http://www.w3.org/2000/svg",
    color: color
  }, /*#__PURE__*/React.createElement("path", {
    d: "M14.207 6.793a4.536 4.536 0 01.161 6.245l-.16.17-.5.5-1.415-1.415.5-.5a2.536 2.536 0 00-3.453-3.71l-.133.124-5 5a2.536 2.536 0 003.453 3.71l.133-.124.5-.5 1.414 1.414-.5.5a4.536 4.536 0 01-6.575-6.245l.16-.17 5-5a4.536 4.536 0 016.415 0zm7-2a4.536 4.536 0 01.161 6.245l-.16.17-5 5a4.536 4.536 0 01-6.576-6.246l.16-.17.5-.5 1.415 1.415-.5.5a2.536 2.536 0 003.453 3.71l.133-.124 5-5a2.536 2.536 0 00-3.453-3.71l-.133.124-.5.5-1.414-1.414.5-.5a4.536 4.536 0 016.414 0z",
    fill: "currentColor"
  }));
}

SvgLink24.propTypes = {
  color: _propTypes.default.string
};
var _default = SvgLink24;
exports.default = _default;