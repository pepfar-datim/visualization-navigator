import PropTypes from 'prop-types';
import React from 'react';
import { GlobalStateStore, GlobalStateStoreMutateMethod, GlobalStateMutation, GlobalStateStoreMutationCreator } from '../types';
export declare const createStore: (initialState?: {}) => GlobalStateStore;
export declare const GlobalStateProvider: {
    ({ store, children, }: {
        store: GlobalStateStore;
        children: React.ReactNode;
    }): JSX.Element;
    propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        store: PropTypes.Requireable<PropTypes.InferProps<{}>>;
    };
};
export declare const useGlobalState: (selector?: (state: any) => any) => [any, GlobalStateStoreMutateMethod];
export declare function useGlobalStateMutation<Type>(mutationCreator: GlobalStateStoreMutationCreator<Type>): GlobalStateMutation<Type>;
