"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithOnClickOutside = exports.ShiftedArrow = exports.PlacementTop = exports.PlacementRight = exports.PlacementLeft = exports.PlacementBottom = exports.NoArrow = exports.HiddenArrow = exports.Flipped = exports.Default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _popover = require("./popover.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const boxStyle = {
  display: 'flex',
  justifyContent: 'center',
  width: 400,
  backgroundColor: 'aliceblue'
};
const referenceElementStyle = {
  width: 100,
  height: 50,
  backgroundColor: 'cadetblue',
  textAlign: 'center',
  padding: 6
};

class PopperInBoxWithCenteredReferenceElement extends _react.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "ref", /*#__PURE__*/(0, _react.createRef)());
  }

  render() {
    const {
      paddingTop,
      popoverHeight,
      popoverWidth,
      ...popoverProps
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      style: { ...boxStyle,
        paddingTop,
        height: paddingTop + 100
      }
    }, /*#__PURE__*/_react.default.createElement("div", {
      style: referenceElementStyle,
      ref: this.ref,
      "data-test": "reference-element"
    }, "Reference element"), /*#__PURE__*/_react.default.createElement(_popover.Popover, _extends({
      reference: this.ref
    }, popoverProps), /*#__PURE__*/_react.default.createElement("div", {
      "data-test": "popover-content",
      style: {
        width: popoverWidth,
        height: popoverHeight
      }
    }, "I am in a box with width: ", popoverWidth, "px and height:", ' ', popoverHeight, "px")));
  }

}

PopperInBoxWithCenteredReferenceElement.defaultProps = {
  paddingTop: 220,
  popoverHeight: 200,
  popoverWidth: 336
};
PopperInBoxWithCenteredReferenceElement.propTypes = {
  paddingTop: _propTypes.default.number,
  popoverHeight: _propTypes.default.number,
  popoverWidth: _propTypes.default.number
};
window.onClickOutside = window.Cypress && window.Cypress.cy.stub();
var _default = {
  title: 'Popover',
  component: _popover.Popover
};
exports.default = _default;

const Default = () => /*#__PURE__*/_react.default.createElement(PopperInBoxWithCenteredReferenceElement, null);

exports.Default = Default;

const Flipped = () =>
/*#__PURE__*/
// default viewport-height for flipped popover
// viePort height 400px for diplaced with arrow
_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  paddingTop: 160
});

exports.Flipped = Flipped;

const HiddenArrow = () =>
/*#__PURE__*/
// viewPort height 325px
_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  paddingTop: 110
});

exports.HiddenArrow = HiddenArrow;

const NoArrow = () => /*#__PURE__*/_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  arrow: false
});

exports.NoArrow = NoArrow;

const WithOnClickOutside = () => /*#__PURE__*/_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  onClickOutside: window.onClickOutside
});

exports.WithOnClickOutside = WithOnClickOutside;

const PlacementTop = () => /*#__PURE__*/_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  popoverHeight: 40,
  popoverWidth: 180,
  paddingTop: 50,
  placement: "top"
});

exports.PlacementTop = PlacementTop;

const PlacementRight = () => /*#__PURE__*/_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  popoverHeight: 60,
  popoverWidth: 130,
  paddingTop: 50,
  placement: "right"
});

exports.PlacementRight = PlacementRight;

const PlacementBottom = () => /*#__PURE__*/_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  popoverHeight: 40,
  popoverWidth: 180,
  paddingTop: 50,
  placement: "bottom"
});

exports.PlacementBottom = PlacementBottom;

const PlacementLeft = () => /*#__PURE__*/_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  popoverHeight: 60,
  popoverWidth: 130,
  paddingTop: 50,
  placement: "left"
});

exports.PlacementLeft = PlacementLeft;

const ShiftedArrow = () => /*#__PURE__*/_react.default.createElement(PopperInBoxWithCenteredReferenceElement, {
  popoverHeight: 160,
  popoverWidth: 130,
  paddingTop: 1,
  placement: "left"
});

exports.ShiftedArrow = ShiftedArrow;