"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createAvailablePages = exports.PageSelect = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _select = require("@dhis2-ui/select");

var _uiConstants = require("@dhis2/ui-constants");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: i18n translate
const translate = (prop, interpolationObject) => {
  if (typeof prop === 'function') {
    return prop(interpolationObject);
  }

  return prop;
};

const createAvailablePages = length => Array.from({
  length
}, (_x, i) => (i + 1).toString());

exports.createAvailablePages = createAvailablePages;

const PageSelect = _ref => {
  let {
    dataTest,
    disabled,
    pageSelectText,
    onChange,
    page,
    pageCount
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-test": "".concat(dataTest, "-gotopage"),
    className: _style.default.dynamic([["485717002", [_uiConstants.spacers.dp12]]])
  }, /*#__PURE__*/_react.default.createElement(_select.SingleSelect, {
    dense: true,
    disabled: disabled,
    selected: page.toString(),
    onChange: _ref2 => {
      let {
        selected
      } = _ref2;
      return onChange(parseInt(selected, 10));
    },
    className: "select",
    dataTest: "".concat(dataTest, "-page-select"),
    prefix: translate(pageSelectText)
  }, createAvailablePages(pageCount).map(availablePage => /*#__PURE__*/_react.default.createElement(_select.SingleSelectOption, {
    key: availablePage,
    value: availablePage,
    label: availablePage
  }))), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "485717002",
    dynamic: [_uiConstants.spacers.dp12]
  }, ["div.__jsx-style-dynamic-selector{margin-right:".concat(_uiConstants.spacers.dp12, ";}")]));
};

exports.PageSelect = PageSelect;
PageSelect.propTypes = {
  dataTest: _propTypes.default.string.isRequired,
  page: _propTypes.default.number.isRequired,
  pageCount: _propTypes.default.number.isRequired,
  pageSelectText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]).isRequired,
  onChange: _propTypes.default.func.isRequired,
  disabled: _propTypes.default.bool
};