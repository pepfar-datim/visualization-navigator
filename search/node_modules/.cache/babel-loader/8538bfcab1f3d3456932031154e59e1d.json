{"ast":null,"code":"import { ContentType, HttpMethod } from \"../../types/http.types\";\nimport { inspectResponse } from \"./inspectResponse.service\";\nimport { mockSendingData } from \"../mock/sendMock.service\";\nimport { getFullUrl, isTestEnv } from \"../config.service\";\nexport function postJson(url, body) {\n  return sendData(HttpMethod.post, url, ContentType.json, body);\n}\nexport function putJson(url, body) {\n  return sendData(HttpMethod.put, url, ContentType.json, body);\n}\nexport function patchJson(url, body) {\n  return sendData(HttpMethod.patch, url, ContentType.json, body);\n}\nexport function postText(url, body) {\n  return sendData(HttpMethod.post, url, ContentType.text, body);\n}\nexport function postEmpty(url) {\n  return sendData(HttpMethod.post, url, ContentType.text, null);\n}\n\nfunction sendData(method, endpoint, contentType, payload) {\n  if (isTestEnv()) return mockSendingData(endpoint, payload);\n  return fetch(getFullUrl(endpoint), {\n    method,\n    credentials: 'include',\n    headers: {\n      'Content-Type': contentType\n    },\n    body: contentType === ContentType.json ? JSON.stringify(payload) : payload\n  }).then(inspectResponse).then(apiResponse => {\n    if (!apiResponse.success) throw new Error(apiResponse.errorMessage);else return apiResponse;\n  });\n}","map":{"version":3,"names":["ContentType","HttpMethod","inspectResponse","mockSendingData","getFullUrl","isTestEnv","postJson","url","body","sendData","post","json","putJson","put","patchJson","patch","postText","text","postEmpty","method","endpoint","contentType","payload","fetch","credentials","headers","JSON","stringify","then","apiResponse","success","Error","errorMessage"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@pepfar-react-lib/datim-api/services/methods/sendData.service.ts"],"sourcesContent":["import {ApiResponse, ContentType, HttpMethod} from \"../../types/http.types\";\nimport {inspectResponse} from \"./inspectResponse.service\";\nimport {mockSendingData} from \"../mock/sendMock.service\";\nimport {getFullUrl, isTestEnv} from \"../config.service\";\n\nexport function postJson(url:string,body:any){\n    return sendData(HttpMethod.post, url,ContentType.json, body);\n}\n\nexport function putJson(url:string,body:any){\n    return sendData(HttpMethod.put, url,ContentType.json, body);\n}\n\nexport function patchJson(url:string,body:any){\n    return sendData(HttpMethod.patch, url,ContentType.json, body);\n}\n\nexport function postText(url:string,body:any){\n    return sendData(HttpMethod.post, url,ContentType.text, body);\n}\n\nexport function postEmpty(url:string){\n    return sendData(HttpMethod.post, url,ContentType.text,null);\n}\n\nfunction sendData(method:HttpMethod,endpoint:string,contentType:ContentType,payload:any):Promise<ApiResponse>{\n    if (isTestEnv()) return mockSendingData(endpoint,payload);\n    return fetch(getFullUrl(endpoint),{\n        method,\n        credentials:'include',\n        headers:{\n            'Content-Type':contentType\n        },\n        body: contentType===ContentType.json?JSON.stringify(payload):payload\n    }).then(inspectResponse).then((apiResponse:ApiResponse)=>{\n        if (!apiResponse.success) throw new Error(apiResponse.errorMessage);\n        else return apiResponse;\n    })\n}\n"],"mappings":"AAAA,SAAqBA,WAArB,EAAkCC,UAAlC,QAAmD,wBAAnD;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AACA,SAAQC,eAAR,QAA8B,0BAA9B;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,mBAApC;AAEA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAA6BC,IAA7B,EAAsC;EACzC,OAAOC,QAAQ,CAACR,UAAU,CAACS,IAAZ,EAAkBH,GAAlB,EAAsBP,WAAW,CAACW,IAAlC,EAAwCH,IAAxC,CAAf;AACH;AAED,OAAO,SAASI,OAAT,CAAiBL,GAAjB,EAA4BC,IAA5B,EAAqC;EACxC,OAAOC,QAAQ,CAACR,UAAU,CAACY,GAAZ,EAAiBN,GAAjB,EAAqBP,WAAW,CAACW,IAAjC,EAAuCH,IAAvC,CAAf;AACH;AAED,OAAO,SAASM,SAAT,CAAmBP,GAAnB,EAA8BC,IAA9B,EAAuC;EAC1C,OAAOC,QAAQ,CAACR,UAAU,CAACc,KAAZ,EAAmBR,GAAnB,EAAuBP,WAAW,CAACW,IAAnC,EAAyCH,IAAzC,CAAf;AACH;AAED,OAAO,SAASQ,QAAT,CAAkBT,GAAlB,EAA6BC,IAA7B,EAAsC;EACzC,OAAOC,QAAQ,CAACR,UAAU,CAACS,IAAZ,EAAkBH,GAAlB,EAAsBP,WAAW,CAACiB,IAAlC,EAAwCT,IAAxC,CAAf;AACH;AAED,OAAO,SAASU,SAAT,CAAmBX,GAAnB,EAA8B;EACjC,OAAOE,QAAQ,CAACR,UAAU,CAACS,IAAZ,EAAkBH,GAAlB,EAAsBP,WAAW,CAACiB,IAAlC,EAAuC,IAAvC,CAAf;AACH;;AAED,SAASR,QAAT,CAAkBU,MAAlB,EAAoCC,QAApC,EAAoDC,WAApD,EAA4EC,OAA5E,EAA6G;EACzG,IAAIjB,SAAS,EAAb,EAAiB,OAAOF,eAAe,CAACiB,QAAD,EAAUE,OAAV,CAAtB;EACjB,OAAOC,KAAK,CAACnB,UAAU,CAACgB,QAAD,CAAX,EAAsB;IAC9BD,MAD8B;IAE9BK,WAAW,EAAC,SAFkB;IAG9BC,OAAO,EAAC;MACJ,gBAAeJ;IADX,CAHsB;IAM9Bb,IAAI,EAAEa,WAAW,KAAGrB,WAAW,CAACW,IAA1B,GAA+Be,IAAI,CAACC,SAAL,CAAeL,OAAf,CAA/B,GAAuDA;EAN/B,CAAtB,CAAL,CAOJM,IAPI,CAOC1B,eAPD,EAOkB0B,IAPlB,CAOwBC,WAAD,IAA2B;IACrD,IAAI,CAACA,WAAW,CAACC,OAAjB,EAA0B,MAAM,IAAIC,KAAJ,CAAUF,WAAW,CAACG,YAAtB,CAAN,CAA1B,KACK,OAAOH,WAAP;EACR,CAVM,CAAP;AAWH"},"metadata":{},"sourceType":"module"}