import { mount } from 'enzyme';
import React from 'react';
import { Button } from '../button.js';
describe('<Button>', () => {
  it('renders a default data-test attribute', () => {
    const dataTest = 'dhis2-uicore-button';
    const wrapper = mount( /*#__PURE__*/React.createElement(Button, {
      dataTest: dataTest
    }));
    const actual = wrapper.find({
      'data-test': dataTest
    });
    expect(actual.length).toBe(1);
  });
  it('renders a custom data-test attribute', () => {
    const dataTest = 'button-data-test';
    const wrapper = mount( /*#__PURE__*/React.createElement(Button, {
      dataTest: dataTest
    }));
    const actual = wrapper.find({
      'data-test': dataTest
    });
    expect(actual.length).toBe(1);
  });
  describe('toggle', () => {
    it('should have class "toggled" if toggled-prop is true', () => {
      const wrapper = mount( /*#__PURE__*/React.createElement(Button, {
        toggled: true
      }));
      const actual = wrapper.find('button');
      expect(actual.hasClass('toggled')).toBe(true);
    });
    it('should not have class "toggled" if toggled-prop is not passed', () => {
      const wrapper = mount( /*#__PURE__*/React.createElement(Button, null));
      const actual = wrapper.find('button');
      expect(actual.hasClass('toggled')).toBe(false);
    });
  });
});