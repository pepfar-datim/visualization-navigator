import _JSXStyle from "styled-jsx/style";
import { Portal } from '@dhis2-ui/portal';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';

const createClickHandler = onClick => event => {
  // don't respond to clicks that originated in the children
  if (onClick && event.target === event.currentTarget) {
    onClick({}, event);
  }
};

const Layer = _ref => {
  let {
    children,
    className,
    dataTest,
    disablePortal,
    level,
    onClick,
    position,
    translucent
  } = _ref;
  return /*#__PURE__*/React.createElement(Portal, {
    disable: disablePortal
  }, /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    onClick: createClickHandler(onClick),
    className: "jsx-2944291715 " + _JSXStyle.dynamic([["2635812695", [level]]]) + " " + (cx('layer', className, position, {
      translucent
    }) || "")
  }, children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2635812695",
    dynamic: [level]
  }, ["div.__jsx-style-dynamic-selector{z-index:".concat(level, ";}")]), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2944291715"
  }, ["div.jsx-2944291715{top:0;left:0;min-height:100vh;min-width:100vw;}", "div.fixed.jsx-2944291715{position:fixed;height:100vh;width:100vw;}", "div.absolute.jsx-2944291715{position:absolute;height:100%;width:100%;}", "div.translucent.jsx-2944291715{background-color:rgba(33,43,54,0.4);}"])));
};

Layer.defaultProps = {
  position: 'fixed',
  dataTest: 'dhis2-uicore-layer',
  level: 'auto'
};
Layer.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,

  /** Disable the Portal, useful for nesting layers */
  disablePortal: PropTypes.bool,

  /** Z-index level */
  level: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  position: PropTypes.oneOf(['absolute', 'fixed']),

  /** Adds a semi-transparent background */
  translucent: PropTypes.bool,

  /** Click handler */
  onClick: PropTypes.func
};
export { Layer };