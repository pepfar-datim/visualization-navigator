import _JSXStyle from "styled-jsx/style";
import { colors, theme, spacers } from '@dhis2/ui-constants';
import { IconMessages24, IconMail24 } from '@dhis2/ui-icons';
import PropTypes from 'prop-types';
import React from 'react';

function icon(kind) {
  if (kind === 'message') {
    return /*#__PURE__*/React.createElement(IconMessages24, {
      color: colors.white
    });
  } else {
    return /*#__PURE__*/React.createElement(IconMail24, {
      color: colors.white
    });
  }
}

export const NotificationIcon = _ref => {
  let {
    count,
    href,
    kind,
    dataTestId
  } = _ref;
  return /*#__PURE__*/React.createElement("a", {
    href: href,
    "data-test": dataTestId,
    className: _JSXStyle.dynamic([["2450998793", [spacers.dp12, theme.secondary500, colors.white, spacers.dp4]]]) + " " + (kind || "")
  }, icon(kind), count > 0 && /*#__PURE__*/React.createElement("span", {
    "data-test": "".concat(dataTestId, "-count"),
    className: _JSXStyle.dynamic([["2450998793", [spacers.dp12, theme.secondary500, colors.white, spacers.dp4]]])
  }, count), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2450998793",
    dynamic: [spacers.dp12, theme.secondary500, colors.white, spacers.dp4]
  }, ["a.__jsx-style-dynamic-selector{position:relative;margin:4px 24px 0 0;cursor:pointer;}", "a.__jsx-style-dynamic-selector:focus{outline:1px dotted white;}", "span.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;z-index:1;position:absolute;top:-9px;right:-6px;min-width:18px;min-height:18px;border-radius:".concat(spacers.dp12, ";box-shadow:0 1px 3px 0 rgba(0,0,0,0.1), 0 1px 2px 0 rgba(0,0,0,0.06);background-color:").concat(theme.secondary500, ";color:").concat(colors.white, ";font-size:13px;font-weight:600;line-height:15px;text-align:center;cursor:inherit;padding:0 ").concat(spacers.dp4, ";}")]));
};
NotificationIcon.defaultProps = {
  count: 0
};
NotificationIcon.propTypes = {
  href: PropTypes.string.isRequired,
  count: PropTypes.number,
  dataTestId: PropTypes.string,
  kind: PropTypes.oneOf(['interpretation', 'message'])
};