import _JSXStyle from "styled-jsx/style";
import { mutuallyExclusive } from '@dhis2/prop-types';
import { colors, spacers } from '@dhis2/ui-constants';
import { IconErrorFilled24, IconWarningFilled24, IconInfoFilled24 } from '@dhis2/ui-icons';
import PropTypes from 'prop-types';
import React from 'react';
export const NoticeBoxIcon = _ref => {
  let {
    warning,
    error,
    dataTest
  } = _ref;
  // Info is the default icon
  let color = colors.blue900;
  let Icon = IconInfoFilled24;

  if (warning) {
    color = colors.yellow700;
    Icon = IconWarningFilled24;
  }

  if (error) {
    color = colors.red700;
    Icon = IconErrorFilled24;
  }

  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["190287437", [spacers.dp12]]])
  }, /*#__PURE__*/React.createElement(Icon, {
    color: color,
    className: _JSXStyle.dynamic([["190287437", [spacers.dp12]]])
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "190287437",
    dynamic: [spacers.dp12]
  }, [".__jsx-style-dynamic-selector{margin-right:".concat(spacers.dp12, ";}")]));
};
NoticeBoxIcon.propTypes = {
  dataTest: PropTypes.string.isRequired,
  error: mutuallyExclusive(['error', 'warning'], PropTypes.bool),
  warning: mutuallyExclusive(['error', 'warning'], PropTypes.bool)
};