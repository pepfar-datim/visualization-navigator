{"ast":null,"code":"var _jsxFileName = \"/home/jake/SRC/visualization-navigator-ts/src/modules/searchFilters/components/searchFilters.component.tsx\";\nimport React from \"react\";\nimport { allFilters } from \"../types/searchFilters.type\";\nimport { SearchFilter } from \"./searchFilter.component\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst changeFilter = (i, type, value, searchFilters, updateFilters) => {\n  if (!type || !allFilters.includes(type)) throw new Error(`Cannot change filter type`);\n  searchFilters[i] = {\n    filterType: type,\n    filterValue: value\n  };\n  updateFilters(searchFilters);\n};\n\nconst addFilter = (searchFilters, updateFilters) => {\n  searchFilters.push({\n    filterType: null,\n    filterValue: null\n  });\n  updateFilters(searchFilters);\n};\n\nconst deleteFilter = (index, searchFilters, updateFilters) => {\n  updateFilters(searchFilters.filter((f, i) => i !== index));\n};\n\nexport function SearchFilters(_ref) {\n  let {\n    searchFilters,\n    updateFilters\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [searchFilters.map((f, i) => /*#__PURE__*/_jsxDEV(SearchFilter, {\n      searchFilter: f,\n      changeFilter: (type, value) => {\n        changeFilter(i, type, value, searchFilters, updateFilters);\n      },\n      deleteFilter: () => deleteFilter(i, searchFilters, updateFilters)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 60\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => addFilter(searchFilters, updateFilters),\n      children: \"Add filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"info\",\n      children: searchFilters.length === 0 ? 'Show all' : 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = SearchFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchFilters\");","map":{"version":3,"names":["React","allFilters","SearchFilter","Button","changeFilter","i","type","value","searchFilters","updateFilters","includes","Error","filterType","filterValue","addFilter","push","deleteFilter","index","filter","f","SearchFilters","map","length"],"sources":["/home/jake/SRC/visualization-navigator-ts/src/modules/searchFilters/components/searchFilters.component.tsx"],"sourcesContent":["import React from \"react\";\nimport {allFilters, FilterType, SearchFilter as SearchFilterType} from \"../types/searchFilters.type\";\nimport {UpdateFilters} from \"../../searchPage/types/methods.type\";\nimport { SearchFilter } from \"./searchFilter.component\";\nimport {Button} from \"@mui/material\";\n\nconst changeFilter = (i:number, type:string|null, value:string|null, searchFilters:SearchFilterType[], updateFilters:UpdateFilters)=>{\n    if (!type||!allFilters.includes(type)) throw new Error(`Cannot change filter type`);\n    searchFilters[i] = {filterType:type as FilterType,filterValue: value}\n    updateFilters(searchFilters);\n}\n\nconst addFilter = (searchFilters:SearchFilterType[], updateFilters:UpdateFilters)=>{\n    searchFilters.push({filterType:null, filterValue:null});\n    updateFilters(searchFilters);\n}\n\nconst deleteFilter = (index:number, searchFilters:SearchFilterType[], updateFilters:UpdateFilters)=>{\n    updateFilters(searchFilters.filter((f,i)=>i!==index))\n}\n\nexport function SearchFilters({searchFilters, updateFilters}:{\n    searchFilters:SearchFilterType[],\n    updateFilters:UpdateFilters\n}) {\n    return <>\n        {searchFilters.map((f:SearchFilterType, i:number)=><SearchFilter\n            searchFilter={f}\n            changeFilter={(type:string|null,value:string|null)=>{\n                changeFilter(i,type,value,searchFilters,updateFilters)\n            }}\n            deleteFilter={()=>deleteFilter(i, searchFilters, updateFilters)}\n        />)}\n        <br/>\n        <Button onClick={()=>addFilter(searchFilters,updateFilters)}>Add filter</Button>\n        <Button color='info'>{searchFilters.length===0?'Show all':'Search'}</Button>\n    </>;\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAuE,6BAAvE;AAEA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAAQC,MAAR,QAAqB,eAArB;;;;AAEA,MAAMC,YAAY,GAAG,CAACC,CAAD,EAAWC,IAAX,EAA6BC,KAA7B,EAAgDC,aAAhD,EAAkFC,aAAlF,KAAgH;EACjI,IAAI,CAACH,IAAD,IAAO,CAACL,UAAU,CAACS,QAAX,CAAoBJ,IAApB,CAAZ,EAAuC,MAAM,IAAIK,KAAJ,CAAW,2BAAX,CAAN;EACvCH,aAAa,CAACH,CAAD,CAAb,GAAmB;IAACO,UAAU,EAACN,IAAZ;IAA+BO,WAAW,EAAEN;EAA5C,CAAnB;EACAE,aAAa,CAACD,aAAD,CAAb;AACH,CAJD;;AAMA,MAAMM,SAAS,GAAG,CAACN,aAAD,EAAmCC,aAAnC,KAAiE;EAC/ED,aAAa,CAACO,IAAd,CAAmB;IAACH,UAAU,EAAC,IAAZ;IAAkBC,WAAW,EAAC;EAA9B,CAAnB;EACAJ,aAAa,CAACD,aAAD,CAAb;AACH,CAHD;;AAKA,MAAMQ,YAAY,GAAG,CAACC,KAAD,EAAeT,aAAf,EAAiDC,aAAjD,KAA+E;EAChGA,aAAa,CAACD,aAAa,CAACU,MAAd,CAAqB,CAACC,CAAD,EAAGd,CAAH,KAAOA,CAAC,KAAGY,KAAhC,CAAD,CAAb;AACH,CAFD;;AAIA,OAAO,SAASG,aAAT,OAGJ;EAAA,IAH2B;IAACZ,aAAD;IAAgBC;EAAhB,CAG3B;EACC,oBAAO;IAAA,WACFD,aAAa,CAACa,GAAd,CAAkB,CAACF,CAAD,EAAqBd,CAArB,kBAAgC,QAAC,YAAD;MAC/C,YAAY,EAAEc,CADiC;MAE/C,YAAY,EAAE,CAACb,IAAD,EAAkBC,KAAlB,KAAsC;QAChDH,YAAY,CAACC,CAAD,EAAGC,IAAH,EAAQC,KAAR,EAAcC,aAAd,EAA4BC,aAA5B,CAAZ;MACH,CAJ8C;MAK/C,YAAY,EAAE,MAAIO,YAAY,CAACX,CAAD,EAAIG,aAAJ,EAAmBC,aAAnB;IALiB;MAAA;MAAA;MAAA;IAAA,QAAlD,CADE,eAQH;MAAA;MAAA;MAAA;IAAA,QARG,eASH,QAAC,MAAD;MAAQ,OAAO,EAAE,MAAIK,SAAS,CAACN,aAAD,EAAeC,aAAf,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATG,eAUH,QAAC,MAAD;MAAQ,KAAK,EAAC,MAAd;MAAA,UAAsBD,aAAa,CAACc,MAAd,KAAuB,CAAvB,GAAyB,UAAzB,GAAoC;IAA1D;MAAA;MAAA;MAAA;IAAA,QAVG;EAAA,gBAAP;AAYH;KAhBeF,a"},"metadata":{},"sourceType":"module"}