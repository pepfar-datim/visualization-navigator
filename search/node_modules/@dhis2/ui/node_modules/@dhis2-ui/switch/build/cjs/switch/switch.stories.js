"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WarningDense = exports.Warning = exports.ValidDense = exports.Valid = exports.ImageLabelDense = exports.ImageLabel = exports.FocusedUncheckedDense = exports.FocusedUnchecked = exports.FocusedCheckedDense = exports.FocusedChecked = exports.ErrorDense = exports.Error = exports.DisabledDense = exports.Disabled = exports.DefaultDense = exports.Default = exports.CheckedDense = exports.Checked = void 0;

var _uiConstants = require("@dhis2/ui-constants");

var _react = _interopRequireDefault(require("react"));

var _index = require("./index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const subtitle = 'An input control that allows an on and an off state';
const description = "\n**Switches are used sparingly in DHIS2, as they are not yet an accepted input control on the web. Users are not always used to the concept of a switch, but understanding is growing with wide adoption on mobile platforms.**\n\nUse switches only when the user can toggle between on/off. Never use a switch for yes/no or any other states, use a checkbox instead. It is often safer to use a checkbox for things like turning options on/off, as users understand this pattern. Switches can be useful for ongoing or active processes, where turning them on/off makes more sense conceptually. An example of this may be toggling on/off 'Logging' or 'Update automatically', both processes that are ongoing.\n\n```js\nimport { Switch } from '@dhis2/ui'\n```\n";

window.onChange = (payload, event) => {
  console.log('onClick payload', payload);
  console.log('onClick event', event);
};

window.onFocus = (payload, event) => {
  console.log('onFocus payload', payload);
  console.log('onFocus event', event);
};

window.onBlur = (payload, event) => {
  console.log('onBlur payload', payload);
  console.log('onBlur event', event);
};

const onChange = function () {
  return window.onChange(...arguments);
};

const onFocus = function () {
  return window.onFocus(...arguments);
};

const onBlur = function () {
  return window.onBlur(...arguments);
};

var _default = {
  title: 'Switch',
  component: _index.Switch,
  parameters: {
    componentSubtitle: subtitle,
    docs: {
      description: {
        component: description
      }
    }
  },
  // Default args for all stories
  args: {
    name: 'exampleName',
    label: 'Switch',
    value: 'defaultValue',
    onChange,
    onFocus,
    onBlur
  },
  argTypes: {
    valid: { ..._uiConstants.sharedPropTypes.statusArgType
    },
    error: { ..._uiConstants.sharedPropTypes.statusArgType
    },
    warning: { ..._uiConstants.sharedPropTypes.statusArgType
    }
  }
};
exports.default = _default;

const Template = args => /*#__PURE__*/_react.default.createElement(_index.Switch, args);

const CheckedUncheckedTemplate = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.Switch, args), /*#__PURE__*/_react.default.createElement(_index.Switch, _extends({}, args, {
  checked: true
})));

const Default = Template.bind({});
exports.Default = Default;

const FocusedUnchecked = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.Switch, _extends({}, args, {
  initialFocus: true,
  className: "initially-focused"
})), /*#__PURE__*/_react.default.createElement(_index.Switch, _extends({}, args, {
  className: "initially-unfocused"
}))); // Stories with initial focus are distracting on docs page


exports.FocusedUnchecked = FocusedUnchecked;
FocusedUnchecked.parameters = {
  docs: {
    disable: true
  }
};
const FocusedChecked = FocusedUnchecked.bind({});
exports.FocusedChecked = FocusedChecked;
FocusedChecked.args = {
  checked: true
};
FocusedChecked.parameters = {
  docs: {
    disable: true
  }
};
const Checked = Template.bind({});
exports.Checked = Checked;
Checked.args = {
  checked: true,
  value: 'checked'
};
const Disabled = CheckedUncheckedTemplate.bind({});
exports.Disabled = Disabled;
Disabled.args = {
  disabled: true,
  value: 'disabled'
};
const Valid = CheckedUncheckedTemplate.bind({});
exports.Valid = Valid;
Valid.args = {
  valid: true,
  value: 'valid'
};
const Warning = CheckedUncheckedTemplate.bind({});
exports.Warning = Warning;
Warning.args = {
  warning: true,
  value: 'warning'
};
const Error = CheckedUncheckedTemplate.bind({});
exports.Error = Error;
Error.args = {
  error: true,
  value: 'error'
};
const ImageLabel = Template.bind({});
exports.ImageLabel = ImageLabel;
ImageLabel.args = {
  label: /*#__PURE__*/_react.default.createElement("img", {
    src: "https://picsum.photos/id/82/200/100"
  }),
  value: 'with-help'
};
const DefaultDense = Template.bind({});
exports.DefaultDense = DefaultDense;
DefaultDense.args = {
  dense: true
};
DefaultDense.storyName = 'Default - Dense';
const FocusedUncheckedDense = FocusedUnchecked.bind({});
exports.FocusedUncheckedDense = FocusedUncheckedDense;
FocusedUncheckedDense.args = { ...DefaultDense.args
};
FocusedUncheckedDense.storyName = 'Focused unchecked - Dense';
FocusedUncheckedDense.parameters = {
  docs: {
    disable: true
  }
};
const FocusedCheckedDense = FocusedUnchecked.bind({});
exports.FocusedCheckedDense = FocusedCheckedDense;
FocusedCheckedDense.args = { ...DefaultDense.args,
  checked: true
};
FocusedCheckedDense.storyName = 'Focused checked - Dense';
FocusedCheckedDense.parameters = {
  docs: {
    disable: true
  }
};
const CheckedDense = Template.bind({});
exports.CheckedDense = CheckedDense;
CheckedDense.args = { ...Checked.args,
  ...DefaultDense.args
};
CheckedDense.storyName = 'Checked - Dense';
const DisabledDense = CheckedUncheckedTemplate.bind({});
exports.DisabledDense = DisabledDense;
DisabledDense.args = { ...Disabled.args,
  ...DefaultDense.args
};
DisabledDense.storyName = 'Disabled - Dense';
const ValidDense = CheckedUncheckedTemplate.bind({});
exports.ValidDense = ValidDense;
ValidDense.args = { ...Valid.args,
  ...DefaultDense.args
};
ValidDense.storyName = 'Valid - Dense';
const WarningDense = CheckedUncheckedTemplate.bind({});
exports.WarningDense = WarningDense;
WarningDense.args = { ...Warning.args,
  ...DefaultDense.args
};
WarningDense.storyName = 'Warning - Dense';
const ErrorDense = CheckedUncheckedTemplate.bind({});
exports.ErrorDense = ErrorDense;
ErrorDense.args = { ...Error.args,
  ...DefaultDense.args
};
ErrorDense.storyName = 'Error - Dense';
const ImageLabelDense = Template.bind({});
exports.ImageLabelDense = ImageLabelDense;
ImageLabelDense.args = { ...ImageLabel.args,
  ...DefaultDense.args
};
ImageLabelDense.storyName = 'Image label - Dense';