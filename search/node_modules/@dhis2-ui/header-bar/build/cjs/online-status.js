"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OnlineStatus = OnlineStatus;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _appRuntime = require("@dhis2/app-runtime");

var _classnames = _interopRequireDefault(require("classnames"));

var _moment = _interopRequireDefault(require("moment"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _index = _interopRequireDefault(require("./locales/index.js"));

var _onlineStatusStyles = _interopRequireDefault(require("./online-status.styles.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const useOnlineStatusInfo = _ref => {
  let {
    online,
    lastOnline
  } = _ref;
  const {
    headerbar
  } = (0, _appRuntime.useConfig)();

  if ((headerbar === null || headerbar === void 0 ? void 0 : headerbar.onlineStatusInfo) === 'LAST_ONLINE' && !online && lastOnline) {
    return _index.default.t('Last online {{relativeTime}}', {
      relativeTime: (0, _moment.default)(lastOnline).fromNow()
    });
  } // todo: in the future, support 'CUSTOM' option


  return null;
};
/** A badge to display online/offline status in the header bar */


function OnlineStatus(_ref2) {
  let {
    dense
  } = _ref2;
  const {
    online,
    lastOnline
  } = (0, _appRuntime.useOnlineStatus)();
  const info = useOnlineStatusInfo({
    online,
    lastOnline
  });
  const displayStatus = online ? _index.default.t('Online') : _index.default.t('Offline');
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-test": "headerbar-online-status",
    className: "jsx-".concat(_onlineStatusStyles.default.__hash) + " " + ((0, _classnames.default)('container', dense ? 'bar' : 'badge') || "")
  }, info && !dense && /*#__PURE__*/_react.default.createElement("span", {
    className: "jsx-".concat(_onlineStatusStyles.default.__hash) + " " + "info unselectable"
  }, info), /*#__PURE__*/_react.default.createElement("div", {
    className: "jsx-".concat(_onlineStatusStyles.default.__hash) + " " + ((0, _classnames.default)('icon', online ? 'online' : 'offline') || "")
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "jsx-".concat(_onlineStatusStyles.default.__hash) + " " + "label unselectable"
  }, displayStatus), info && dense && /*#__PURE__*/_react.default.createElement("span", {
    className: "jsx-".concat(_onlineStatusStyles.default.__hash) + " " + "info-dense unselectable"
  }, info), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: _onlineStatusStyles.default.__hash
  }, _onlineStatusStyles.default));
}

OnlineStatus.propTypes = {
  /** If true, displays as a sub-bar instead of a badge */
  dense: _propTypes.default.bool
};