{"ast":null,"code":"export class MockService {\n  constructor() {\n    this.registeredMocks = [];\n  }\n\n  registerMockedResponse(url, response) {\n    this.registeredMocks = this.registeredMocks.filter(mock => mock.url !== url);\n    this.registeredMocks.push({\n      url,\n      response\n    });\n  }\n\n  getMockedResponse(url) {\n    let foundMocks = this.registeredMocks.filter(m => m.url === url);\n    if (foundMocks.length === 0) return null;\n    if (foundMocks.length > 1) throw new Error(`Found multiple get mocks matching ${url}`);\n    if (typeof foundMocks[0].response !== 'string') return foundMocks[0].response;\n  }\n\n  isMocked(url) {\n    return this.registeredMocks.some(m => m.url === url);\n  }\n\n}","map":{"version":3,"names":["MockService","registeredMocks","registerMockedResponse","url","response","filter","mock","push","getMockedResponse","foundMocks","m","length","Error","isMocked","some"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@pepfar-react-lib/datim-api/services/mock/mock.service.ts"],"sourcesContent":["type MockRecord = {\n    url: string,\n    response: any,\n}\n\nexport class MockService{\n    registeredMocks:MockRecord[] = [];\n    registerMockedResponse(url:string, response:any):void{\n        this.registeredMocks = this.registeredMocks.filter(mock=>mock.url!==url);\n        this.registeredMocks.push({url,response});\n    }\n    getMockedResponse(url:string){\n        let foundMocks = this.registeredMocks.filter(m=>m.url===url);\n        if (foundMocks.length===0) return null;\n        if (foundMocks.length>1) throw new Error(`Found multiple get mocks matching ${url}`);\n        if (typeof foundMocks[0].response!=='string') return foundMocks[0].response;\n    }\n    isMocked(url:string):boolean{\n        return this.registeredMocks.some(m=>m.url===url);\n    }\n}"],"mappings":"AAKA,OAAO,MAAMA,WAAN,CAAiB;EAAA;IAAA,KACpBC,eADoB,GACW,EADX;EAAA;;EAEpBC,sBAAsB,CAACC,GAAD,EAAaC,QAAb,EAA+B;IACjD,KAAKH,eAAL,GAAuB,KAAKA,eAAL,CAAqBI,MAArB,CAA4BC,IAAI,IAAEA,IAAI,CAACH,GAAL,KAAWA,GAA7C,CAAvB;IACA,KAAKF,eAAL,CAAqBM,IAArB,CAA0B;MAACJ,GAAD;MAAKC;IAAL,CAA1B;EACH;;EACDI,iBAAiB,CAACL,GAAD,EAAY;IACzB,IAAIM,UAAU,GAAG,KAAKR,eAAL,CAAqBI,MAArB,CAA4BK,CAAC,IAAEA,CAAC,CAACP,GAAF,KAAQA,GAAvC,CAAjB;IACA,IAAIM,UAAU,CAACE,MAAX,KAAoB,CAAxB,EAA2B,OAAO,IAAP;IAC3B,IAAIF,UAAU,CAACE,MAAX,GAAkB,CAAtB,EAAyB,MAAM,IAAIC,KAAJ,CAAW,qCAAoCT,GAAI,EAAnD,CAAN;IACzB,IAAI,OAAOM,UAAU,CAAC,CAAD,CAAV,CAAcL,QAArB,KAAgC,QAApC,EAA8C,OAAOK,UAAU,CAAC,CAAD,CAAV,CAAcL,QAArB;EACjD;;EACDS,QAAQ,CAACV,GAAD,EAAoB;IACxB,OAAO,KAAKF,eAAL,CAAqBa,IAArB,CAA0BJ,CAAC,IAAEA,CAAC,CAACP,GAAF,KAAQA,GAArC,CAAP;EACH;;AAdmB"},"metadata":{},"sourceType":"module"}