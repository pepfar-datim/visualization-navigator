"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toNumber = exports.requiredArgumentErrorMessage = exports.requireArgument = exports.isString = exports.isNumeric = exports.isNumber = exports.isInteger = exports.isInRange = exports.isEmpty = void 0;

const isEmpty = value => typeof value === 'undefined' || value === null || value === '';

exports.isEmpty = isEmpty;

const isString = value => typeof value === 'string';

exports.isString = isString;

const isInteger = value => Number.isSafeInteger(value);

exports.isInteger = isInteger;

const isNumber = value => typeof value === 'number';

exports.isNumber = isNumber;

const isNumeric = value => (isString(value) || isNumber(value)) && !isNaN(value);

exports.isNumeric = isNumeric;

const isInRange = (lowerBound, upperBound, value) => value >= lowerBound && value <= upperBound;

exports.isInRange = isInRange;

const toNumber = value => Number(value);

exports.toNumber = toNumber;
const requiredArgumentErrorMessage = 'Incorrect arguments provided when creating validator';
exports.requiredArgumentErrorMessage = requiredArgumentErrorMessage;

const requireArgument = (value, type) => {
  if (isEmpty(value) || typeof value !== type) {
    throw new Error(requiredArgumentErrorMessage);
  }
};

exports.requireArgument = requireArgument;