{"ast":null,"code":"import { urlToFilename } from \"./urlToFilename.service\";\nimport { isTestEnv } from \"../config.service\";\nlet cachedResponseList = [];\nlet fs;\nlet cacheDir;\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') {\n  import('fs').then(i => fs = i);\n  cacheDir = process.cwd() + '/cachedApiCalls';\n}\n\nfunction initTestCache() {\n  if (!isTestEnv() || cachedResponseList.length > 0) return;\n  if (!fs) throw new Error(`fs not imported`);\n  if (!fs.existsSync(cacheDir)) fs.mkdirSync(cacheDir);\n  cachedResponseList = fs.readdirSync(`${cacheDir}/`).map(fileName => fileName.replace('.json', ''));\n}\n\nfunction saveToFile(fileName, data) {\n  fs.writeFileSync(`${cacheDir}/${fileName}.json`, JSON.stringify(data));\n}\n\nfunction saveResponseToCache(username, url, response) {\n  let fileName = urlToFilename(username, url);\n  cachedResponseList.push(fileName);\n  saveToFile(fileName, response);\n}\n\nfunction isResponseCached(username, url) {\n  return cachedResponseList.includes(urlToFilename(username, url));\n}\n\nfunction getCachedResponse(username, url) {\n  let fileName = urlToFilename(username, url);\n  let path = `${cacheDir}/${fileName}.json`;\n  let data = JSON.parse(fs.readFileSync(path).toString());\n  return {\n    json: () => data\n  };\n}\n\nexport { initTestCache, saveResponseToCache, isResponseCached, getCachedResponse };","map":{"version":3,"names":["urlToFilename","isTestEnv","cachedResponseList","fs","cacheDir","process","env","NODE_ENV","then","i","cwd","initTestCache","length","Error","existsSync","mkdirSync","readdirSync","map","fileName","replace","saveToFile","data","writeFileSync","JSON","stringify","saveResponseToCache","username","url","response","push","isResponseCached","includes","getCachedResponse","path","parse","readFileSync","toString","json"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@pepfar-react-lib/datim-api/services/cache/getCache.service.ts"],"sourcesContent":["import {urlToFilename} from \"./urlToFilename.service\";\nimport {isTestEnv} from \"../config.service\";\n\nlet cachedResponseList:string[] = [];\nlet fs;\nlet cacheDir;\n\nif (typeof process!=='undefined'&&process.env.NODE_ENV==='test') {\n    import('fs').then(i=>fs=i);\n    cacheDir = process.cwd() + '/cachedApiCalls'\n}\n\nfunction initTestCache(){\n    if (!isTestEnv()||cachedResponseList.length>0) return;\n    if (!fs) throw new Error(`fs not imported`);\n    if (!fs.existsSync(cacheDir)) fs.mkdirSync(cacheDir);\n    cachedResponseList = fs.readdirSync(`${cacheDir}/`).map(fileName => fileName.replace('.json', ''));\n}\n\n\nfunction saveToFile(fileName:string, data:object){\n    fs.writeFileSync(`${cacheDir}/${fileName}.json`, JSON.stringify(data));\n}\n\nfunction saveResponseToCache(username:string, url:string, response:object):void{\n    let fileName = urlToFilename(username, url);\n    cachedResponseList.push(fileName);\n    saveToFile(fileName, response);\n}\n\nfunction isResponseCached(username: string, url:string):boolean{\n    return cachedResponseList.includes(urlToFilename(username, url))\n}\n\nfunction getCachedResponse(username:string, url:string):object{\n    let fileName = urlToFilename(username, url);\n    let path = `${cacheDir}/${fileName}.json`;\n    let data = JSON.parse(fs.readFileSync(path).toString());\n    return {json:()=>data};\n}\n\nexport {\n    initTestCache,\n    saveResponseToCache,\n    isResponseCached,\n    getCachedResponse\n}"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,yBAA5B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AAEA,IAAIC,kBAA2B,GAAG,EAAlC;AACA,IAAIC,EAAJ;AACA,IAAIC,QAAJ;;AAEA,IAAI,OAAOC,OAAP,KAAiB,WAAjB,IAA8BA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,MAAzD,EAAiE;EAC7D,OAAO,IAAP,EAAaC,IAAb,CAAkBC,CAAC,IAAEN,EAAE,GAACM,CAAxB;EACAL,QAAQ,GAAGC,OAAO,CAACK,GAAR,KAAgB,iBAA3B;AACH;;AAED,SAASC,aAAT,GAAwB;EACpB,IAAI,CAACV,SAAS,EAAV,IAAcC,kBAAkB,CAACU,MAAnB,GAA0B,CAA5C,EAA+C;EAC/C,IAAI,CAACT,EAAL,EAAS,MAAM,IAAIU,KAAJ,CAAW,iBAAX,CAAN;EACT,IAAI,CAACV,EAAE,CAACW,UAAH,CAAcV,QAAd,CAAL,EAA8BD,EAAE,CAACY,SAAH,CAAaX,QAAb;EAC9BF,kBAAkB,GAAGC,EAAE,CAACa,WAAH,CAAgB,GAAEZ,QAAS,GAA3B,EAA+Ba,GAA/B,CAAmCC,QAAQ,IAAIA,QAAQ,CAACC,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAA/C,CAArB;AACH;;AAGD,SAASC,UAAT,CAAoBF,QAApB,EAAqCG,IAArC,EAAiD;EAC7ClB,EAAE,CAACmB,aAAH,CAAkB,GAAElB,QAAS,IAAGc,QAAS,OAAzC,EAAiDK,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAjD;AACH;;AAED,SAASI,mBAAT,CAA6BC,QAA7B,EAA8CC,GAA9C,EAA0DC,QAA1D,EAA+E;EAC3E,IAAIV,QAAQ,GAAGlB,aAAa,CAAC0B,QAAD,EAAWC,GAAX,CAA5B;EACAzB,kBAAkB,CAAC2B,IAAnB,CAAwBX,QAAxB;EACAE,UAAU,CAACF,QAAD,EAAWU,QAAX,CAAV;AACH;;AAED,SAASE,gBAAT,CAA0BJ,QAA1B,EAA4CC,GAA5C,EAA+D;EAC3D,OAAOzB,kBAAkB,CAAC6B,QAAnB,CAA4B/B,aAAa,CAAC0B,QAAD,EAAWC,GAAX,CAAzC,CAAP;AACH;;AAED,SAASK,iBAAT,CAA2BN,QAA3B,EAA4CC,GAA5C,EAA8D;EAC1D,IAAIT,QAAQ,GAAGlB,aAAa,CAAC0B,QAAD,EAAWC,GAAX,CAA5B;EACA,IAAIM,IAAI,GAAI,GAAE7B,QAAS,IAAGc,QAAS,OAAnC;EACA,IAAIG,IAAI,GAAGE,IAAI,CAACW,KAAL,CAAW/B,EAAE,CAACgC,YAAH,CAAgBF,IAAhB,EAAsBG,QAAtB,EAAX,CAAX;EACA,OAAO;IAACC,IAAI,EAAC,MAAIhB;EAAV,CAAP;AACH;;AAED,SACIV,aADJ,EAEIc,mBAFJ,EAGIK,gBAHJ,EAIIE,iBAJJ"},"metadata":{},"sourceType":"module"}