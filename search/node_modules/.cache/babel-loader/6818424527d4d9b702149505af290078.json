{"ast":null,"code":"import _defineProperty from \"/home/jake/SRC/landing-page/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport propTypes from 'prop-types';\n\nvar arrayWithLengthFactory = function arrayWithLengthFactory(_ref) {\n  var _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? Infinity : _ref$max,\n      propType = _ref.propType,\n      isRequired = _ref.isRequired;\n  return function (props, propSelector, // normally a propName, but when wrapped in arrayOf an index\n  componentName, location, propFullName // normally null but a string like \"propName[index]\" when wrapped in arrayOf\n  ) {\n    var arr = props[propSelector];\n    var propName = propFullName || propSelector;\n    var baseMsg = \"Invalid prop `\".concat(propName, \"` supplied to `\").concat(componentName, \"`,\");\n    var insideArrayOf = !!propFullName;\n\n    if (isRequired && typeof arr === 'undefined') {\n      return new Error(\"\".concat(baseMsg, \" this prop is required but no value was found.\"));\n    }\n\n    if (arr && !Array.isArray(arr)) {\n      return new Error(\"\".concat(baseMsg, \" prop value is not an array.\"));\n    }\n\n    if (arr && arr.length > max) {\n      return new Error(\"\".concat(baseMsg, \" array has a length of \").concat(arr.length, \", but the maximum is \").concat(max));\n    }\n\n    if (arr && arr.length < min) {\n      return new Error(\"\".concat(baseMsg, \" array has a length of \").concat(arr.length, \", but the minimum is \").concat(min));\n    }\n\n    if (arr && propType) {\n      var checkPropName = insideArrayOf ? location : propName;\n      var checkPropType = insideArrayOf ? // array should be array containing only the given type\n      propTypes.arrayOf(propTypes.arrayOf(propType)) : // array should contain only the given type\n      propTypes.arrayOf(propType);\n\n      var checkPropTypes = _defineProperty({}, checkPropName, checkPropType);\n\n      var checkProps = insideArrayOf ? _defineProperty({}, location, props) : props; // When not inside an array, the error message only reads correctly\n      // when using \"prop\"\n\n      var checkProp = insideArrayOf ? propName : 'prop';\n      propTypes.checkPropTypes(checkPropTypes, checkProps, checkProp, componentName);\n    }\n\n    return null;\n  };\n};\n/**\n * Ensure the prop value is an array with a length between a minimum and maximum.\n * If a third `propType` argument is passed each item in the array needs to be of that prop-type\n * @param {number} [min=0] - The minimal array length\n * @param {number} [max=Infinity] - The maximal array length\n * @param {function} [propType] - The prop-type that each array item needs to conform to\n * @return {Error|null} Returns null if all conditions are met, or an error\n * @example\n * import React from 'react'\n * import { arrayWithLength } from '@dhis2/prop-types'\n *\n * const LotsOfLists = props => <div {...props}>Does nothing</div>\n *\n * LotsOfLists.propTypes = {\n *     arrayWithMaxThreeNumbers: arrayWithLength(0, 3, propTypes.number),\n *     arrayWithAtLeastSixStrings: arrayWithLength(6, undefined, propTypes.string),\n *     arrayWithAtLeastTenItems: arrayWithLength(10),\n *     mandatoryArrayBetweenOneAndTen: arrayWithLength(1,10).isRequired,\n * }\n */\n\n\nexport function arrayWithLength(min, max, propType) {\n  var fn = arrayWithLengthFactory({\n    min: min,\n    max: max,\n    propType: propType,\n    isRequired: false\n  });\n  fn.isRequired = arrayWithLengthFactory({\n    min: min,\n    max: max,\n    propType: propType,\n    isRequired: true\n  });\n  return fn;\n}","map":{"version":3,"names":["propTypes","arrayWithLengthFactory","min","max","Infinity","propType","isRequired","props","propSelector","componentName","location","propFullName","arr","propName","baseMsg","insideArrayOf","Error","Array","isArray","length","checkPropName","checkPropType","arrayOf","checkPropTypes","checkProps","checkProp","arrayWithLength","fn"],"sources":["/home/jake/SRC/landing-page/node_modules/@dhis2/prop-types/build/es/arrayWithLength.js"],"sourcesContent":["import propTypes from 'prop-types';\n\nconst arrayWithLengthFactory = ({\n  min = 0,\n  max = Infinity,\n  propType,\n  isRequired\n}) => (props, propSelector, // normally a propName, but when wrapped in arrayOf an index\ncomponentName, location, propFullName // normally null but a string like \"propName[index]\" when wrapped in arrayOf\n) => {\n  const arr = props[propSelector];\n  const propName = propFullName || propSelector;\n  const baseMsg = `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`,`;\n  const insideArrayOf = !!propFullName;\n\n  if (isRequired && typeof arr === 'undefined') {\n    return new Error(`${baseMsg} this prop is required but no value was found.`);\n  }\n\n  if (arr && !Array.isArray(arr)) {\n    return new Error(`${baseMsg} prop value is not an array.`);\n  }\n\n  if (arr && arr.length > max) {\n    return new Error(`${baseMsg} array has a length of ${arr.length}, but the maximum is ${max}`);\n  }\n\n  if (arr && arr.length < min) {\n    return new Error(`${baseMsg} array has a length of ${arr.length}, but the minimum is ${min}`);\n  }\n\n  if (arr && propType) {\n    const checkPropName = insideArrayOf ? location : propName;\n    const checkPropType = insideArrayOf ? // array should be array containing only the given type\n    propTypes.arrayOf(propTypes.arrayOf(propType)) : // array should contain only the given type\n    propTypes.arrayOf(propType);\n    const checkPropTypes = {\n      [checkPropName]: checkPropType\n    };\n    const checkProps = insideArrayOf ? {\n      [location]: props\n    } : props; // When not inside an array, the error message only reads correctly\n    // when using \"prop\"\n\n    const checkProp = insideArrayOf ? propName : 'prop';\n    propTypes.checkPropTypes(checkPropTypes, checkProps, checkProp, componentName);\n  }\n\n  return null;\n};\n/**\n * Ensure the prop value is an array with a length between a minimum and maximum.\n * If a third `propType` argument is passed each item in the array needs to be of that prop-type\n * @param {number} [min=0] - The minimal array length\n * @param {number} [max=Infinity] - The maximal array length\n * @param {function} [propType] - The prop-type that each array item needs to conform to\n * @return {Error|null} Returns null if all conditions are met, or an error\n * @example\n * import React from 'react'\n * import { arrayWithLength } from '@dhis2/prop-types'\n *\n * const LotsOfLists = props => <div {...props}>Does nothing</div>\n *\n * LotsOfLists.propTypes = {\n *     arrayWithMaxThreeNumbers: arrayWithLength(0, 3, propTypes.number),\n *     arrayWithAtLeastSixStrings: arrayWithLength(6, undefined, propTypes.string),\n *     arrayWithAtLeastTenItems: arrayWithLength(10),\n *     mandatoryArrayBetweenOneAndTen: arrayWithLength(1,10).isRequired,\n * }\n */\n\n\nexport function arrayWithLength(min, max, propType) {\n  const fn = arrayWithLengthFactory({\n    min,\n    max,\n    propType,\n    isRequired: false\n  });\n  fn.isRequired = arrayWithLengthFactory({\n    min,\n    max,\n    propType,\n    isRequired: true\n  });\n  return fn;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}