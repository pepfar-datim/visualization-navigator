import _JSXStyle from "styled-jsx/style";
import { Button } from '@dhis2-ui/button';
import { spacers } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React from 'react';
import { IconMoveDown, IconMoveUp } from './icons.js';
export const ReorderingActions = _ref => {
  let {
    dataTest,
    disabledDown,
    disabledUp,
    onChangeUp,
    onChangeDown
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["1295471940", [spacers.dp8, spacers.dp8, spacers.dp8]]])
  }, /*#__PURE__*/React.createElement(Button, {
    small: true,
    disabled: disabledDown,
    onClick: () => !disabledDown && onChangeDown(event),
    dataTest: "".concat(dataTest, "-buttonmovedown"),
    icon: /*#__PURE__*/React.createElement(IconMoveDown, {
      dataTest: "".concat(dataTest, "-iconmovedown"),
      disabled: disabledDown
    })
  }), /*#__PURE__*/React.createElement(Button, {
    small: true,
    disabled: disabledUp,
    onClick: () => !disabledUp && onChangeUp(event),
    dataTest: "".concat(dataTest, "-buttonmoveup"),
    icon: /*#__PURE__*/React.createElement(IconMoveUp, {
      dataTest: "".concat(dataTest, "-iconmoveup"),
      disabled: disabledUp
    })
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1295471940",
    dynamic: [spacers.dp8, spacers.dp8, spacers.dp8]
  }, ["div.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row-reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse;padding-top:".concat(spacers.dp8, ";}"), "div.__jsx-style-dynamic-selector:last-child{padding-bottom:".concat(spacers.dp8, ";}"), "div.__jsx-style-dynamic-selector>button:first-child{margin-left:".concat(spacers.dp8, ";}")]));
};
ReorderingActions.propTypes = {
  dataTest: PropTypes.string.isRequired,
  onChangeDown: PropTypes.func.isRequired,
  onChangeUp: PropTypes.func.isRequired,
  disabledDown: PropTypes.bool,
  disabledUp: PropTypes.bool
};