"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithLabel = exports.Statuses = exports.Sizes = exports.Required = exports.PlaceholderText = exports.Multiple = exports.HelpText = exports.FileList = exports.Disabled = exports.DesignSystemStackingOrderEmptyFileList = exports.DesignSystemStackingOrder = exports.DefaultButtonLabelAndPlaceholder = exports.Default = void 0;

var _uiConstants = require("@dhis2/ui-constants");

var _react = _interopRequireDefault(require("react"));

var _index = require("../index.js");

var _fileInputField = require("./file-input-field.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const description = "\nThe `FileInputField` component wraps the `FileInput` component in a `Field` wrapper to add labels, help text, and validation text.\n\n```js\nimport { FileInputField, FileListItem } from '@dhis2/ui'\n```\n";

const onChange = obj => console.log('onChange', obj);

const onRemove = () => console.log('onRemove');

const onCancel = () => console.log('onCancel');

var _default = {
  title: 'File Input Field',
  component: _fileInputField.FileInputField,
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  // Default args:
  args: { // Handle default values (see comment in Transfer.js)
    ..._fileInputField.FileInputField.defaultProps,
    onChange: onChange,
    name: 'uploadName',
    label: 'Upload something'
  },
  argTypes: {
    small: { ..._uiConstants.sharedPropTypes.sizeArgType
    },
    large: { ..._uiConstants.sharedPropTypes.sizeArgType
    },
    valid: { ..._uiConstants.sharedPropTypes.statusArgType
    },
    warning: { ..._uiConstants.sharedPropTypes.statusArgType
    },
    error: { ..._uiConstants.sharedPropTypes.statusArgType
    }
  }
};
exports.default = _default;

const Template = args => /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, args);

const Default = Template.bind({});
exports.Default = Default;
Default.args = {
  label: null
};
const WithLabel = Template.bind({});
exports.WithLabel = WithLabel;
const Required = Template.bind({});
exports.Required = Required;
Required.args = {
  required: true
};
const Multiple = Template.bind({});
exports.Multiple = Multiple;
Multiple.args = {
  multiple: true,
  label: 'Upload multiple things',
  buttonLabel: 'Upload files'
};
const Disabled = Template.bind({});
exports.Disabled = Disabled;
Disabled.args = {
  disabled: true
};

const Sizes = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Default size",
  name: "defaultName"
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Small",
  small: true,
  name: "smallName"
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Large",
  large: true,
  name: "largeName"
})));

exports.Sizes = Sizes;

const Statuses = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Default",
  name: "defaultName"
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Valid",
  name: "validName",
  valid: true
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Warning",
  name: "warningName",
  warning: true
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Error",
  name: "errorName",
  error: true,
  validationText: "Something went wrong"
})));

exports.Statuses = Statuses;

const FileList = args => /*#__PURE__*/_react.default.createElement("div", {
  style: {
    width: 250
  }
}, /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, args, /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "picture1.jpg",
  onRemove: onRemove,
  onCancel: onCancel,
  cancelText: "Cancel",
  removeText: "Remove"
}), /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "image_that_is_uploading.jpg",
  onRemove: onRemove,
  onCancel: onCancel,
  cancelText: "Cancel",
  removeText: "Remove",
  loading: true
}), /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "image_file_name_is_to_long_to_display_on_one_line.jpg",
  onRemove: onRemove,
  onCancel: onCancel,
  cancelText: "Cancel",
  removeText: "Remove"
})), /*#__PURE__*/_react.default.createElement("br", null), /*#__PURE__*/_react.default.createElement("p", {
  style: {
    color: 'grey'
  }
}, /*#__PURE__*/_react.default.createElement("em", null, "Bounding box is 250px wide")));

exports.FileList = FileList;
const PlaceholderText = Template.bind({});
exports.PlaceholderText = PlaceholderText;
PlaceholderText.args = {
  placeholder: 'No file(s) selected yet'
};
const HelpText = Template.bind({});
exports.HelpText = HelpText;
HelpText.args = {
  helpText: 'Please select any file type'
};

const DesignSystemStackingOrder = args => /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, args, /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "TestFile.txt",
  onRemove: onRemove,
  removeText: "remove"
}), /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "BusyFile.txt",
  onRemove: onRemove,
  onCancel: onCancel,
  cancelText: "cancel",
  removeText: "remove",
  loading: true
}));

exports.DesignSystemStackingOrder = DesignSystemStackingOrder;
DesignSystemStackingOrder.args = {
  error: true,
  validationText: 'Oops!',
  placeholder: 'Select a file',
  helpText: 'Please upload something'
};
const DesignSystemStackingOrderEmptyFileList = Template.bind({});
exports.DesignSystemStackingOrderEmptyFileList = DesignSystemStackingOrderEmptyFileList;
DesignSystemStackingOrderEmptyFileList.args = { ...DesignSystemStackingOrder.args
};
DesignSystemStackingOrderEmptyFileList.storyName = 'Design system stacking order - empty file list';
const DefaultButtonLabelAndPlaceholder = Template.bind({});
exports.DefaultButtonLabelAndPlaceholder = DefaultButtonLabelAndPlaceholder;
DefaultButtonLabelAndPlaceholder.args = {
  label: null
};
DefaultButtonLabelAndPlaceholder.storyName = 'Default: buttonLabel and placeholder';