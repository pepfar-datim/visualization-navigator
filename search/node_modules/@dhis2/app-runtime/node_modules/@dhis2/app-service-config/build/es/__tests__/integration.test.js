import { render } from '@testing-library/react';
import React from 'react';
import { ConfigContext } from '../ConfigContext';
import { ConfigProvider } from '../ConfigProvider';
const mockConfig = {
  baseUrl: 'http://test.com',
  apiVersion: 42,
  serverVersion: {
    major: 2,
    minor: 35,
    patch: undefined,
    tag: 'SNAPSHOT'
  },
  systemInfo: {
    contextPath: 'http://localhost:3000',
    version: '2.35-SNAPSHOT'
  }
};
describe('Testing custom config provider', () => {
  it('Should render without failing', async () => {
    const consumerFunction = jest.fn(config => "".concat(config.baseUrl, ":").concat(config.apiVersion));
    const {
      getByText
    } = render( /*#__PURE__*/React.createElement(ConfigProvider, {
      config: mockConfig
    }, /*#__PURE__*/React.createElement(ConfigContext.Consumer, null, consumerFunction)));
    expect(getByText(/http:\/\/test.com:42/i)).not.toBeUndefined();
    expect(consumerFunction).toHaveBeenCalledTimes(1);
    expect(consumerFunction).toHaveBeenLastCalledWith(mockConfig);
  });
});