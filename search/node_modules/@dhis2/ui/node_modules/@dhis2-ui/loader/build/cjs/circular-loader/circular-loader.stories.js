"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Small = exports.Large = exports.ExtraSmall = exports.Default = void 0;

var _uiConstants = require("@dhis2/ui-constants");

var _react = _interopRequireDefault(require("react"));

var _index = require("./index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const subtitle = "Used to inform the user that an element or page is in a loading state";
const description = "\nUse loading indicators whenever a component or application takes longer than 700ms to load. After this time a loader should be displayed so that the user can understand what is happening: loading is in progress. Consider that without a loading indicator a user would be unsure of their current status, so they are important UI elements.\n\nA circular loader is used when the loading time is uncertain and cannot be displayed as a percentage. A circular loader can spin many times, and each spin does not represent any amount of completion.\n\n```js\nimport { CircularLoader } from '@dhis2/ui'\n```\n";
var _default = {
  title: 'Circular Loader',
  component: _index.CircularLoader,
  parameters: {
    componentSubtitle: subtitle,
    docs: {
      description: {
        component: description
      }
    }
  },
  argTypes: {
    small: { ..._uiConstants.sharedPropTypes.sizeArgType
    },
    large: { ..._uiConstants.sharedPropTypes.sizeArgType
    },
    extrasmall: { ..._uiConstants.sharedPropTypes.sizeArgType
    }
  }
};
exports.default = _default;

const Template = args => /*#__PURE__*/_react.default.createElement(_index.CircularLoader, args);

const Default = Template.bind({});
exports.Default = Default;
const Small = Template.bind({});
exports.Small = Small;
Small.args = {
  small: true
};
const Large = Template.bind({});
exports.Large = Large;
Large.args = {
  large: true
};
const ExtraSmall = Template.bind({});
exports.ExtraSmall = ExtraSmall;
ExtraSmall.args = {
  extrasmall: true
};