{"ast":null,"code":"var _jsxFileName = \"/home/jake/SRC/visualization-navigator-ts/src/modules/searchFilters/components/searchFilters.component.tsx\";\nimport React from \"react\";\nimport { allFilters, getFilterOperators } from \"../types/searchFilters.type\";\nimport { SearchFilterComponent } from \"./searchFilter.component\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst changeFilter = (i, searchFilter, searchFilters, updateFilters) => {\n  let {\n    filterProperty,\n    operator,\n    value\n  } = searchFilter;\n  if (!filterProperty || !allFilters.includes(filterProperty)) throw new Error(`Cannot change filter type`);\n  if (!operator) operator = getFilterOperators(filterProperty)[0];\n  searchFilters[i] = {\n    filterProperty: filterProperty,\n    value,\n    operator\n  };\n  updateFilters(searchFilters);\n};\n\nconst addFilter = (searchFilters, updateFilters) => {\n  searchFilters.push({\n    filterProperty: null,\n    operator: null,\n    value: null\n  });\n  updateFilters(searchFilters);\n};\n\nconst deleteFilter = (index, searchFilters, updateFilters) => {\n  updateFilters(searchFilters.filter((f, i) => i !== index));\n};\n\nexport function SearchFilters(_ref) {\n  let {\n    searchFilters,\n    updateFilters,\n    triggerSearch\n  } = _ref;\n  const hasFilters = searchFilters.length > 0;\n  const width = hasFilters ? 560 : 'inherit';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width\n    },\n    children: [searchFilters.map((f, i) => /*#__PURE__*/_jsxDEV(SearchFilterComponent, {\n      searchFilter: f,\n      changeFilter: searchFilter => {\n        changeFilter(i, searchFilter, searchFilters, updateFilters);\n      },\n      deleteFilter: () => deleteFilter(i, searchFilters, updateFilters)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 56\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: hasFilters ? {\n        float: 'right',\n        marginRight: 22\n      } : {},\n      className: `searchButtonsWrapper`,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addFilter(searchFilters, updateFilters),\n        color: \"inherit\",\n        \"data-testid\": \"addFilter\",\n        children: \"Add filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: triggerSearch,\n        variant: \"outlined\",\n        \"data-testid\": \"searchButton\",\n        children: searchFilters.length === 0 ? 'Show all' : 'Search'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n_c = SearchFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchFilters\");","map":{"version":3,"names":["React","allFilters","getFilterOperators","SearchFilterComponent","Button","changeFilter","i","searchFilter","searchFilters","updateFilters","filterProperty","operator","value","includes","Error","addFilter","push","deleteFilter","index","filter","f","SearchFilters","triggerSearch","hasFilters","length","width","map","float","marginRight"],"sources":["/home/jake/SRC/visualization-navigator-ts/src/modules/searchFilters/components/searchFilters.component.tsx"],"sourcesContent":["import React from \"react\";\nimport {allFilters, FilterProperty, getFilterOperators, SearchFilter} from \"../types/searchFilters.type\";\nimport {UpdateFilters} from \"../../searchPage/types/methods.type\";\nimport {SearchFilterComponent} from \"./searchFilter.component\";\nimport {Button} from \"@mui/material\";\nimport {Trigger} from \"../types/methods.type\";\n\nconst changeFilter = (i:number, searchFilter:SearchFilter, searchFilters:SearchFilter[], updateFilters:UpdateFilters)=>{\n    let {filterProperty,operator,value}:SearchFilter = searchFilter;\n    if (!filterProperty||!allFilters.includes(filterProperty)) throw new Error(`Cannot change filter type`);\n    if (!operator) operator = getFilterOperators(filterProperty)[0];\n    searchFilters[i] = {filterProperty:filterProperty as FilterProperty,value, operator}\n    updateFilters(searchFilters);\n}\n\nconst addFilter = (searchFilters:SearchFilter[], updateFilters:UpdateFilters)=>{\n    searchFilters.push({filterProperty:null, operator: null, value:null});\n    updateFilters(searchFilters);\n}\n\nconst deleteFilter = (index:number, searchFilters:SearchFilter[], updateFilters:UpdateFilters)=>{\n    updateFilters(searchFilters.filter((f,i)=>i!==index))\n}\n\nexport function SearchFilters({searchFilters, updateFilters, triggerSearch}:{\n    searchFilters:SearchFilter[],\n    updateFilters:UpdateFilters,\n    triggerSearch:Trigger\n}) {\n    const hasFilters:boolean = searchFilters.length>0;\n    const width = hasFilters?560:'inherit';\n    return <div style={{width}}>\n        {searchFilters.map((f:SearchFilter, i:number)=><SearchFilterComponent\n            key={i}\n            searchFilter={f}\n            changeFilter={(searchFilter:SearchFilter)=>{\n                changeFilter(i,searchFilter,searchFilters,updateFilters)\n            }}\n            deleteFilter={()=>deleteFilter(i, searchFilters, updateFilters)}\n        />)}\n        <div style={hasFilters?{float:'right',marginRight:22}:{}} className={`searchButtonsWrapper`}>\n            <Button onClick={()=>addFilter(searchFilters,updateFilters)} color='inherit' data-testid='addFilter'>Add filter</Button>\n            <Button onClick={triggerSearch} variant='outlined' data-testid='searchButton'>{searchFilters.length===0?'Show all':'Search'}</Button>\n        </div>\n    </div>;\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoCC,kBAApC,QAA2E,6BAA3E;AAEA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,SAAQC,MAAR,QAAqB,eAArB;;;AAGA,MAAMC,YAAY,GAAG,CAACC,CAAD,EAAWC,YAAX,EAAsCC,aAAtC,EAAoEC,aAApE,KAAkG;EACnH,IAAI;IAACC,cAAD;IAAgBC,QAAhB;IAAyBC;EAAzB,IAA+CL,YAAnD;EACA,IAAI,CAACG,cAAD,IAAiB,CAACT,UAAU,CAACY,QAAX,CAAoBH,cAApB,CAAtB,EAA2D,MAAM,IAAII,KAAJ,CAAW,2BAAX,CAAN;EAC3D,IAAI,CAACH,QAAL,EAAeA,QAAQ,GAAGT,kBAAkB,CAACQ,cAAD,CAAlB,CAAmC,CAAnC,CAAX;EACfF,aAAa,CAACF,CAAD,CAAb,GAAmB;IAACI,cAAc,EAACA,cAAhB;IAAiDE,KAAjD;IAAwDD;EAAxD,CAAnB;EACAF,aAAa,CAACD,aAAD,CAAb;AACH,CAND;;AAQA,MAAMO,SAAS,GAAG,CAACP,aAAD,EAA+BC,aAA/B,KAA6D;EAC3ED,aAAa,CAACQ,IAAd,CAAmB;IAACN,cAAc,EAAC,IAAhB;IAAsBC,QAAQ,EAAE,IAAhC;IAAsCC,KAAK,EAAC;EAA5C,CAAnB;EACAH,aAAa,CAACD,aAAD,CAAb;AACH,CAHD;;AAKA,MAAMS,YAAY,GAAG,CAACC,KAAD,EAAeV,aAAf,EAA6CC,aAA7C,KAA2E;EAC5FA,aAAa,CAACD,aAAa,CAACW,MAAd,CAAqB,CAACC,CAAD,EAAGd,CAAH,KAAOA,CAAC,KAAGY,KAAhC,CAAD,CAAb;AACH,CAFD;;AAIA,OAAO,SAASG,aAAT,OAIJ;EAAA,IAJ2B;IAACb,aAAD;IAAgBC,aAAhB;IAA+Ba;EAA/B,CAI3B;EACC,MAAMC,UAAkB,GAAGf,aAAa,CAACgB,MAAd,GAAqB,CAAhD;EACA,MAAMC,KAAK,GAAGF,UAAU,GAAC,GAAD,GAAK,SAA7B;EACA,oBAAO;IAAK,KAAK,EAAE;MAACE;IAAD,CAAZ;IAAA,WACFjB,aAAa,CAACkB,GAAd,CAAkB,CAACN,CAAD,EAAiBd,CAAjB,kBAA4B,QAAC,qBAAD;MAE3C,YAAY,EAAEc,CAF6B;MAG3C,YAAY,EAAGb,YAAD,IAA6B;QACvCF,YAAY,CAACC,CAAD,EAAGC,YAAH,EAAgBC,aAAhB,EAA8BC,aAA9B,CAAZ;MACH,CAL0C;MAM3C,YAAY,EAAE,MAAIQ,YAAY,CAACX,CAAD,EAAIE,aAAJ,EAAmBC,aAAnB;IANa,GACtCH,CADsC;MAAA;MAAA;MAAA;IAAA,QAA9C,CADE,eASH;MAAK,KAAK,EAAEiB,UAAU,GAAC;QAACI,KAAK,EAAC,OAAP;QAAeC,WAAW,EAAC;MAA3B,CAAD,GAAgC,EAAtD;MAA0D,SAAS,EAAG,sBAAtE;MAAA,wBACI,QAAC,MAAD;QAAQ,OAAO,EAAE,MAAIb,SAAS,CAACP,aAAD,EAAeC,aAAf,CAA9B;QAA6D,KAAK,EAAC,SAAnE;QAA6E,eAAY,WAAzF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAQ,OAAO,EAAEa,aAAjB;QAAgC,OAAO,EAAC,UAAxC;QAAmD,eAAY,cAA/D;QAAA,UAA+Ed,aAAa,CAACgB,MAAd,KAAuB,CAAvB,GAAyB,UAAzB,GAAoC;MAAnH;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QATG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAcH;KArBeH,a"},"metadata":{},"sourceType":"module"}