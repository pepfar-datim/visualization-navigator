"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithClickHandler = exports.WithCenteredContentCircularLoader = exports.Translucent = exports.Default = void 0;

var _center = require("@dhis2-ui/center");

var _loader = require("@dhis2-ui/loader");

var _react = _interopRequireDefault(require("react"));

var _layer = require("./layer.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const description = "\nLayers are used for creating different levels of stacking of interface elements.\nSee more about stacking guidelines at the [design system](https://github.com/dhis2/design-system/blob/master/principles/layout.md#stacking).\n\nLayers are used in Modals, Popovers, and Alerts.\n\n```js\nimport { Layer } from '@dhis2/ui'\n```\n\n_**Note:** These demos may take some time to load._\n";
var _default = {
  title: 'Layer',
  component: _layer.Layer,

  /**
   * `inlineStories: false` renders these layers in iframes instead of inline.
   * This fixes an issue where all the layers on the docs page render on top
   * of eachother, each covering the whole screen.
   * There is a performance tradeof, and they are slow to load.
   */
  parameters: {
    docs: {
      inlineStories: false,
      iframeHeight: '180px',
      description: {
        component: description
      }
    }
  },
  // Handle weird treatment of non-literal defaultProps (see Transfer.stories)
  args: { ..._layer.Layer.defaultProps
  }
};
exports.default = _default;

const Template = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_layer.Layer, args), /*#__PURE__*/_react.default.createElement("h1", null, "Text behind the layer"), /*#__PURE__*/_react.default.createElement("p", null, "Lorem ipsum"));

const Default = Template.bind({});
exports.Default = Default;
const Translucent = Template.bind({});
exports.Translucent = Translucent;
Translucent.args = {
  translucent: true
};
const WithClickHandler = Template.bind({});
exports.WithClickHandler = WithClickHandler;
WithClickHandler.args = {
  onClick: () => alert('layer was clicked')
};
const WithCenteredContentCircularLoader = Template.bind({});
exports.WithCenteredContentCircularLoader = WithCenteredContentCircularLoader;
WithCenteredContentCircularLoader.args = {
  children: /*#__PURE__*/_react.default.createElement(_center.Center, null, /*#__PURE__*/_react.default.createElement(_loader.CircularLoader, null))
};