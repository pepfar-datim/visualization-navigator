"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WarningDense = exports.Warning = exports.ValidDense = exports.Valid = exports.RequiredDense = exports.Required = exports.ImageLabelDense = exports.ImageLabel = exports.HelpText = exports.FocusedUncheckedDense = exports.FocusedUnchecked = exports.FocusedCheckedDense = exports.FocusedChecked = exports.ErrorDense = exports.Error = exports.DisabledDense = exports.Disabled = exports.DefaultDense = exports.Default = exports.CheckedDense = exports.Checked = void 0;

var _uiConstants = require("@dhis2/ui-constants");

var _react = _interopRequireDefault(require("react"));

var _index = require("./index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const description = "\nA `SwitchField` is a Switch component wrapped with extra form utilities, including the ability to add a label, help text, and validation text.  Validation styles like 'error' apply to all of these subcomponents.\n\nSee the basic Switch for usage and design system guidelines.\n\n```js\nimport { SwitchField } from '@dhis2/ui'\n```\n";

const logger = _ref => {
  let {
    name,
    value,
    checked
  } = _ref;
  return console.log("name: ".concat(name, ", value: ").concat(value, ", checked: ").concat(checked));
};

var _default = {
  title: 'Switch Field',
  component: _index.SwitchField,
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  // Default args for stories
  args: {
    name: 'switchName',
    label: 'Switch Field',
    value: 'defaultValue',
    onChange: logger
  },
  argTypes: {
    valid: { ..._uiConstants.sharedPropTypes.statusArgType
    },
    warning: { ..._uiConstants.sharedPropTypes.statusArgType
    },
    error: { ..._uiConstants.sharedPropTypes.statusArgType
    }
  }
};
exports.default = _default;

const Template = args => /*#__PURE__*/_react.default.createElement(_index.SwitchField, args);

const CheckedUncheckedTemplate = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.SwitchField, args), /*#__PURE__*/_react.default.createElement(_index.SwitchField, _extends({}, args, {
  checked: true
})));

const Default = Template.bind({});
exports.Default = Default;
const FocusedUnchecked = Template.bind({});
exports.FocusedUnchecked = FocusedUnchecked;
FocusedUnchecked.args = {
  initialFocus: true
}; // Disable stories on docs page that grab focus

FocusedUnchecked.parameters = {
  docs: {
    disable: true
  }
};
const FocusedChecked = Template.bind({});
exports.FocusedChecked = FocusedChecked;
FocusedChecked.args = { ...FocusedUnchecked.args,
  checked: true
};
FocusedChecked.parameters = {
  docs: {
    disable: true
  }
};
const Checked = Template.bind({});
exports.Checked = Checked;
Checked.args = {
  checked: true,
  value: 'checkedValue'
};
const Required = Template.bind({});
exports.Required = Required;
Required.args = {
  required: true
};
const Disabled = CheckedUncheckedTemplate.bind({});
exports.Disabled = Disabled;
Disabled.args = {
  disabled: true
};

const HelpText = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.SwitchField, args), /*#__PURE__*/_react.default.createElement(_index.SwitchField, _extends({}, args, {
  error: true,
  validationText: "Validation text (error state)"
})));

exports.HelpText = HelpText;
HelpText.args = {
  helpText: 'Help text'
};
const Valid = CheckedUncheckedTemplate.bind({});
exports.Valid = Valid;
Valid.args = {
  valid: true,
  validationText: 'I am validation text',
  value: 'validValue'
};
const Warning = CheckedUncheckedTemplate.bind({});
exports.Warning = Warning;
Warning.args = {
  warning: true,
  value: 'warningValue',
  validationText: 'I am validation text'
};
const Error = CheckedUncheckedTemplate.bind({});
exports.Error = Error;
Error.args = {
  error: true,
  value: 'errorValue',
  validationText: 'I am validation text'
};
const ImageLabel = Template.bind({});
exports.ImageLabel = ImageLabel;
ImageLabel.args = {
  label: /*#__PURE__*/_react.default.createElement("img", {
    src: "https://picsum.photos/id/82/200/100"
  })
};
const DefaultDense = Template.bind({});
exports.DefaultDense = DefaultDense;
DefaultDense.storyName = 'Default - Dense';
DefaultDense.args = {
  dense: true
};
const FocusedUncheckedDense = Template.bind({});
exports.FocusedUncheckedDense = FocusedUncheckedDense;
FocusedUncheckedDense.args = { ...DefaultDense.args,
  ...FocusedUnchecked.args
};
FocusedUncheckedDense.parameters = {
  docs: {
    disable: true
  }
};
FocusedUncheckedDense.storyName = 'Focused unchecked - Dense';
const FocusedCheckedDense = Template.bind({});
exports.FocusedCheckedDense = FocusedCheckedDense;
FocusedCheckedDense.args = { ...DefaultDense.args,
  ...FocusedChecked.args
};
FocusedCheckedDense.parameters = {
  docs: {
    disable: true
  }
};
FocusedCheckedDense.storyName = 'Focused checked - Dense';
const CheckedDense = Template.bind({});
exports.CheckedDense = CheckedDense;
CheckedDense.args = { ...DefaultDense.args,
  ...Checked.args
};
CheckedDense.storyName = 'Checked - Dense';
const RequiredDense = Template.bind({});
exports.RequiredDense = RequiredDense;
RequiredDense.args = { ...DefaultDense.args,
  ...Required.args
};
RequiredDense.storyName = 'Required - Dense';
const DisabledDense = CheckedUncheckedTemplate.bind({});
exports.DisabledDense = DisabledDense;
DisabledDense.args = { ...DefaultDense.args,
  ...Disabled.args
};
DisabledDense.storyName = 'Disabled - Dense';
const ValidDense = CheckedUncheckedTemplate.bind({});
exports.ValidDense = ValidDense;
ValidDense.args = { ...DefaultDense.args,
  ...Valid.args
};
ValidDense.storyName = 'Valid - Dense';
const WarningDense = CheckedUncheckedTemplate.bind({});
exports.WarningDense = WarningDense;
WarningDense.args = { ...DefaultDense.args,
  ...Warning.args
};
WarningDense.storyName = 'Warning - Dense';
const ErrorDense = CheckedUncheckedTemplate.bind({});
exports.ErrorDense = ErrorDense;
ErrorDense.args = { ...DefaultDense.args,
  ...Error.args
};
ErrorDense.storyName = 'Error - Dense';
const ImageLabelDense = Template.bind({});
exports.ImageLabelDense = ImageLabelDense;
ImageLabelDense.args = { ...DefaultDense.args,
  ...ImageLabel.args
};
ImageLabelDense.storyName = 'Image label - Dense';