import _JSXStyle from "styled-jsx/style";
import { colors, elevations, spacers } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React, { Children, cloneElement, isValidElement, useState } from 'react';
import { Menu } from '../index.js';

const FlyoutMenu = _ref => {
  let {
    children,
    className,
    dataTest,
    dense,
    maxHeight,
    maxWidth
  } = _ref;
  const [openedSubMenu, setOpenedSubMenu] = useState(null);

  const toggleSubMenu = index => {
    const toggleValue = index === openedSubMenu ? null : index;
    setOpenedSubMenu(toggleValue);
  };

  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["52281811", [colors.white, colors.grey200, elevations.e300, dense ? '128' : '180', maxWidth, maxHeight, spacers.dp4]]]) + " " + (className || "")
  }, /*#__PURE__*/React.createElement(Menu, {
    dense: dense
  }, Children.map(children, (child, index) => /*#__PURE__*/isValidElement(child) ? /*#__PURE__*/cloneElement(child, {
    showSubMenu: openedSubMenu === index,
    toggleSubMenu: toggleSubMenu.bind(this, index)
  }) : child)), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "52281811",
    dynamic: [colors.white, colors.grey200, elevations.e300, dense ? '128' : '180', maxWidth, maxHeight, spacers.dp4]
  }, ["div.__jsx-style-dynamic-selector{background:".concat(colors.white, ";border:1px solid ").concat(colors.grey200, ";border-radius:3px;box-shadow:").concat(elevations.e300, ";display:inline-block;min-width:").concat(dense ? '128' : '180', "px;max-width:").concat(maxWidth, ";max-height:").concat(maxHeight, ";padding:").concat(spacers.dp4, " 0;}")]));
};

FlyoutMenu.defaultProps = {
  dataTest: 'dhis2-uicore-menu',
  maxWidth: '380px',
  maxHeight: 'auto'
};
FlyoutMenu.propTypes = {
  /** Typically, but not limited to, `MenuItem` components */
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,

  /** Menu uses smaller dimensions */
  dense: PropTypes.bool,
  maxHeight: PropTypes.string,
  maxWidth: PropTypes.string
};
export { FlyoutMenu };