"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableRow = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const TableRow = /*#__PURE__*/(0, _react.forwardRef)((_ref, ref) => {
  let {
    children,
    className,
    dataTest,
    draggable,
    role,
    selected,
    ...props
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("tr", _extends({}, props, {
    ref: ref,
    "data-test": dataTest,
    role: role,
    className: "jsx-1820444258" + " " + ((0, _classnames.default)(className, {
      selected,
      draggable
    }) || "")
  }), children, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "1820444258"
  }, ["tbody>tr.draggable.jsx-1820444258,tfoot>tr.draggable.jsx-1820444258{cursor:move;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}"]));
});
exports.TableRow = TableRow;
TableRow.displayName = 'TableRow';
TableRow.defaultProps = {
  dataTest: 'dhis2-uicore-tablerow'
};
TableRow.propTypes = {
  /** Should be `<TableDataCell>` or `<TableDataCellHead>` components */
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,

  /** Applies draggable cursor styles */
  draggable: _propTypes.default.bool,
  role: _propTypes.default.string,

  /** Sets a selected (teal) background color */
  selected: _propTypes.default.bool
};