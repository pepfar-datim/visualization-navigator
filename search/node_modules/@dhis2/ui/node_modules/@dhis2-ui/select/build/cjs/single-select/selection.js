"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selection = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _uiConstants = require("@dhis2/ui-constants");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _index = require("../select/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Selection = _ref => {
  let {
    options,
    selected,
    className
  } = _ref;
  const selectedOption = (0, _index.findOptionChild)(selected, options);

  if (!selectedOption) {
    const message = "There is no option with the value: \"".concat(selected, "\". ") + 'Make sure that the value passed to the selected ' + 'prop matches the value of an existing option.';
    throw new Error(message);
  }

  const icon = selectedOption.props.icon;
  const label = selectedOption.props.label;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["2249594316", [_uiConstants.spacers.dp8, _uiConstants.spacers.dp16, _uiConstants.spacers.dp16]]]) + " " + ((0, _classnames.default)(className, 'root') || "")
  }, icon && /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["2249594316", [_uiConstants.spacers.dp8, _uiConstants.spacers.dp16, _uiConstants.spacers.dp16]]]) + " " + "root-icon"
  }, icon), label, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "2249594316",
    dynamic: [_uiConstants.spacers.dp8, _uiConstants.spacers.dp16, _uiConstants.spacers.dp16]
  }, [".root.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}", ".root-icon.__jsx-style-dynamic-selector{margin-right:".concat(_uiConstants.spacers.dp8, ";width:").concat(_uiConstants.spacers.dp16, ";height:").concat(_uiConstants.spacers.dp16, ";overflow:hidden;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}")]));
};

exports.Selection = Selection;
Selection.propTypes = {
  className: _propTypes.default.string,
  options: _propTypes.default.node,
  selected: _propTypes.default.string
};