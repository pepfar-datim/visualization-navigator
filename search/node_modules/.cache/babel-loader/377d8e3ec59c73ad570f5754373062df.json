{"ast":null,"code":"/*\n * Requests that expect a \"text/plain\" Content-Type have been collected by scanning\n * the developer documentation:\n * https://docs.dhis2.org/master/en/developer/html/dhis2_developer_manual_full.html\n *\n * Note that currently it is not allowed to include an id property on a \"create\"\n * mutation object. This means that currently the `id` will always be included in\n * the resource property (string). If we decide to allow the `id` property for\n * \"create\" mutation-objects, we will have to include additional checks below.\n */\n// POST to `messageConversations/${id}` (reply to a messagConversation)\nexport var isReplyToMessageConversation = function isReplyToMessageConversation(type, _ref) {\n  var resource = _ref.resource;\n  var pattern = /^messageConversations\\/[a-zA-Z0-9]{11}$/;\n  return type === 'create' && pattern.test(resource);\n}; // POST to 'messageConversations/feedback' (create a feedback message)\n\nexport var isCreateFeedbackMessage = function isCreateFeedbackMessage(type, _ref2) {\n  var resource = _ref2.resource;\n  return type === 'create' && resource === 'messageConversations/feedback';\n}; // POST `interpretations/${objectType}/${id}` (add an interpretation to a visualization)\n\nexport var isCreateInterpretation = function isCreateInterpretation(type, _ref3) {\n  var resource = _ref3.resource;\n  var pattern = /^interpretations\\/(?:reportTable|chart|visualization|map|eventVisualization|eventReport|eventChart|dataSetReport)\\/[a-zA-Z0-9]{11}$/;\n  return type === 'create' && pattern.test(resource);\n}; // PUT to `interpretations/${id}` (update an interpretation)\n\nexport var isUpdateInterpretation = function isUpdateInterpretation(type, _ref4) {\n  var resource = _ref4.resource,\n      id = _ref4.id;\n\n  if (type !== 'replace') {\n    return false;\n  }\n\n  var resourcePattern;\n\n  if (id) {\n    resourcePattern = /^interpretations$/;\n    var idPattern = /^[a-zA-Z0-9]{11}$/;\n    return resourcePattern.test(resource) && idPattern.test(id);\n  }\n\n  resourcePattern = /^interpretations\\/[a-zA-Z0-9]{11}$/;\n  return resourcePattern.test(resource);\n}; // POST to `interpretations/${id}/comments` (comment on an interpretation)\n\nexport var isCommentOnInterpretation = function isCommentOnInterpretation(type, _ref5) {\n  var resource = _ref5.resource;\n  var pattern = /^interpretations\\/[a-zA-Z0-9]{11}\\/comments$/;\n  return type === 'create' && pattern.test(resource);\n}; // PUT to `interpretations/${interpretationId}/comments/${commentId}`\n// (update an interpretation comment)\n\nexport var isInterpretationCommentUpdate = function isInterpretationCommentUpdate(type, _ref6) {\n  var resource = _ref6.resource,\n      id = _ref6.id;\n\n  if (type !== 'replace') {\n    return false;\n  }\n\n  if (id) {\n    var idPatternLong = /^[a-zA-Z0-9]{11}\\/comments\\/[a-zA-Z0-9]{11}$/;\n    var idPatternShort = /^[a-zA-Z0-9]{11}$/;\n    var resourcePattern = /^interpretations\\/[a-zA-Z0-9]{11}\\/comments$/;\n    return resource === 'interpretations' && idPatternLong.test(id) || resourcePattern.test(resource) && idPatternShort.test(id);\n  }\n\n  var pattern = /^interpretations\\/[a-zA-Z0-9]{11}\\/comments\\/[a-zA-Z0-9]{11}$/;\n  return pattern.test(resource);\n}; // POST to `systemSettings/${settingKey}` or `userSettings/${settingKey}`\n// (add or update a single system or user setting)\n\nexport var isAddOrUpdateSystemOrUserSetting = function isAddOrUpdateSystemOrUserSetting(type, _ref7) {\n  var resource = _ref7.resource;\n  // At least 4 chars because the all start with 'key' (i.e. keyStyle)\n  var pattern = /^(?:systemSettings|userSettings)\\/[a-zA-Z]{4,}$/;\n  return type === 'create' && pattern.test(resource);\n}; // POST to `configuration/${configurationProperty}`\n// (add or update a single configuration property)\n\nexport var addOrUpdateConfigurationProperty = function addOrUpdateConfigurationProperty(type, _ref8) {\n  var resource = _ref8.resource;\n  // NOTE: The corsWhitelist property does expect \"application/json\"\n  var pattern = /^(configuration)\\/([a-zA-Z]{1,50})$/;\n  var match = resource.match(pattern);\n  return type === 'create' && !!match && match[2] !== 'corsWhitelist';\n}; // POST to 'synchronization/metadataPull' (install a metadata package)\n\nexport var isMetadataPackageInstallation = function isMetadataPackageInstallation(type, _ref9) {\n  var resource = _ref9.resource;\n  return type === 'create' && resource === 'synchronization/metadataPull';\n};","map":{"version":3,"names":["isReplyToMessageConversation","type","resource","pattern","test","isCreateFeedbackMessage","isCreateInterpretation","isUpdateInterpretation","id","resourcePattern","idPattern","isCommentOnInterpretation","isInterpretationCommentUpdate","idPatternLong","idPatternShort","isAddOrUpdateSystemOrUserSetting","addOrUpdateConfigurationProperty","match","isMetadataPackageInstallation"],"sources":["/home/jake/SRC/landing-page/node_modules/@dhis2/app-runtime/node_modules/@dhis2/app-service-data/build/es/links/RestAPILink/queryToRequestOptions/textPlainMatchers.js"],"sourcesContent":["/*\n * Requests that expect a \"text/plain\" Content-Type have been collected by scanning\n * the developer documentation:\n * https://docs.dhis2.org/master/en/developer/html/dhis2_developer_manual_full.html\n *\n * Note that currently it is not allowed to include an id property on a \"create\"\n * mutation object. This means that currently the `id` will always be included in\n * the resource property (string). If we decide to allow the `id` property for\n * \"create\" mutation-objects, we will have to include additional checks below.\n */\n// POST to `messageConversations/${id}` (reply to a messagConversation)\nexport const isReplyToMessageConversation = (type, {\n  resource\n}) => {\n  const pattern = /^messageConversations\\/[a-zA-Z0-9]{11}$/;\n  return type === 'create' && pattern.test(resource);\n}; // POST to 'messageConversations/feedback' (create a feedback message)\n\nexport const isCreateFeedbackMessage = (type, {\n  resource\n}) => type === 'create' && resource === 'messageConversations/feedback'; // POST `interpretations/${objectType}/${id}` (add an interpretation to a visualization)\n\nexport const isCreateInterpretation = (type, {\n  resource\n}) => {\n  const pattern = /^interpretations\\/(?:reportTable|chart|visualization|map|eventVisualization|eventReport|eventChart|dataSetReport)\\/[a-zA-Z0-9]{11}$/;\n  return type === 'create' && pattern.test(resource);\n}; // PUT to `interpretations/${id}` (update an interpretation)\n\nexport const isUpdateInterpretation = (type, {\n  resource,\n  id\n}) => {\n  if (type !== 'replace') {\n    return false;\n  }\n\n  let resourcePattern;\n\n  if (id) {\n    resourcePattern = /^interpretations$/;\n    const idPattern = /^[a-zA-Z0-9]{11}$/;\n    return resourcePattern.test(resource) && idPattern.test(id);\n  }\n\n  resourcePattern = /^interpretations\\/[a-zA-Z0-9]{11}$/;\n  return resourcePattern.test(resource);\n}; // POST to `interpretations/${id}/comments` (comment on an interpretation)\n\nexport const isCommentOnInterpretation = (type, {\n  resource\n}) => {\n  const pattern = /^interpretations\\/[a-zA-Z0-9]{11}\\/comments$/;\n  return type === 'create' && pattern.test(resource);\n}; // PUT to `interpretations/${interpretationId}/comments/${commentId}`\n// (update an interpretation comment)\n\nexport const isInterpretationCommentUpdate = (type, {\n  resource,\n  id\n}) => {\n  if (type !== 'replace') {\n    return false;\n  }\n\n  if (id) {\n    const idPatternLong = /^[a-zA-Z0-9]{11}\\/comments\\/[a-zA-Z0-9]{11}$/;\n    const idPatternShort = /^[a-zA-Z0-9]{11}$/;\n    const resourcePattern = /^interpretations\\/[a-zA-Z0-9]{11}\\/comments$/;\n    return resource === 'interpretations' && idPatternLong.test(id) || resourcePattern.test(resource) && idPatternShort.test(id);\n  }\n\n  const pattern = /^interpretations\\/[a-zA-Z0-9]{11}\\/comments\\/[a-zA-Z0-9]{11}$/;\n  return pattern.test(resource);\n}; // POST to `systemSettings/${settingKey}` or `userSettings/${settingKey}`\n// (add or update a single system or user setting)\n\nexport const isAddOrUpdateSystemOrUserSetting = (type, {\n  resource\n}) => {\n  // At least 4 chars because the all start with 'key' (i.e. keyStyle)\n  const pattern = /^(?:systemSettings|userSettings)\\/[a-zA-Z]{4,}$/;\n  return type === 'create' && pattern.test(resource);\n}; // POST to `configuration/${configurationProperty}`\n// (add or update a single configuration property)\n\nexport const addOrUpdateConfigurationProperty = (type, {\n  resource\n}) => {\n  // NOTE: The corsWhitelist property does expect \"application/json\"\n  const pattern = /^(configuration)\\/([a-zA-Z]{1,50})$/;\n  const match = resource.match(pattern);\n  return type === 'create' && !!match && match[2] !== 'corsWhitelist';\n}; // POST to 'synchronization/metadataPull' (install a metadata package)\n\nexport const isMetadataPackageInstallation = (type, {\n  resource\n}) => type === 'create' && resource === 'synchronization/metadataPull';"],"mappings":"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"},"metadata":{},"sourceType":"module"}