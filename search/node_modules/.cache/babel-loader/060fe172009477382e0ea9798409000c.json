{"ast":null,"code":"import _defineProperty from \"/home/jake/SRC/visualization-navigator-ts/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport propTypes from 'prop-types';\n\nvar isEmpty = function isEmpty(value) {\n  return typeof value === 'undefined' || value === null || value === '';\n};\n\nvar requiredIfFactory = function requiredIfFactory(condition, propType, isRequired) {\n  return function (props, propName, componentName) {\n    var propValue = props[propName]; // Usage errors\n\n    if (isRequired) {\n      return new Error(\"Property `\".concat(propName, \"` on component `\").concat(componentName, \"` is using the `requiredIf` prop-validator combined with `.isRequired`. This is an invalid combination.\"));\n    }\n\n    if (typeof condition !== 'function') {\n      return new Error(\"The `condition` argument passed to the `requiredIf` prop-validator was not a function.\");\n    }\n\n    if (typeof propType !== 'function') {\n      return new Error(\"The `propType` argument passed to the `requiredIf` prop-validator was not a function.\");\n    } // Validation errors\n\n\n    if (condition(props) && isEmpty(propValue)) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` supplied to `\").concat(componentName, \"`, this prop is conditionally required but has value `\").concat(propValue, \"`. The condition that made this prop required is: `\").concat(condition.toString(), \"`.\"));\n    } // This is how to programatically invoke a propTypes check\n    // https://github.com/facebook/prop-types#proptypescheckproptypes\n\n\n    propTypes.checkPropTypes(_defineProperty({}, propName, propType), props, 'prop', componentName);\n    return null;\n  };\n};\n/**\n * Ensure the prop has a value (i.e. treat it as required) when a given sibling prop\n * also has a value, and ensure the prop is of the correct prop-type\n * @param {function} siblingPropName - The name of the sibling prop\n * @return {Error|null} Returns null if all conditions are met, or an error\n * @example\n * import React from 'react'\n * import { requiredIf } from '@dhis2/prop-types'\n *\n * const Test = ({ someBool, someString }) => (\n *     <div>\n *         <h1>someBool: {someBool ? 'true' : 'false'}</h1>\n *         <h1>someString: {someString}</h1>\n *     </div>\n * )\n * Test.propTypes = {\n *     someBool: propTypes.bool,\n *     someString: requiredIf(props => props.someBool, propTypes.string),\n * }\n */\n\n\nexport function requiredIf(condition, propType) {\n  var fn = requiredIfFactory(condition, propType, false);\n  fn.isRequired = requiredIfFactory(condition, propType, true);\n  return fn;\n}","map":{"version":3,"names":["propTypes","isEmpty","value","requiredIfFactory","condition","propType","isRequired","props","propName","componentName","propValue","Error","toString","checkPropTypes","requiredIf","fn"],"sources":["/home/jake/SRC/visualization-navigator-ts/node_modules/@dhis2/prop-types/build/es/requiredIf.js"],"sourcesContent":["import propTypes from 'prop-types';\n\nconst isEmpty = value => typeof value === 'undefined' || value === null || value === '';\n\nconst requiredIfFactory = (condition, propType, isRequired) => (props, propName, componentName) => {\n  const propValue = props[propName]; // Usage errors\n\n  if (isRequired) {\n    return new Error(`Property \\`${propName}\\` on component \\`${componentName}\\` is using the \\`requiredIf\\` prop-validator combined with \\`.isRequired\\`. This is an invalid combination.`);\n  }\n\n  if (typeof condition !== 'function') {\n    return new Error(`The \\`condition\\` argument passed to the \\`requiredIf\\` prop-validator was not a function.`);\n  }\n\n  if (typeof propType !== 'function') {\n    return new Error(`The \\`propType\\` argument passed to the \\`requiredIf\\` prop-validator was not a function.`);\n  } // Validation errors\n\n\n  if (condition(props) && isEmpty(propValue)) {\n    return new Error(`Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`, this prop is conditionally required but has value \\`${propValue}\\`. The condition that made this prop required is: \\`${condition.toString()}\\`.`);\n  } // This is how to programatically invoke a propTypes check\n  // https://github.com/facebook/prop-types#proptypescheckproptypes\n\n\n  propTypes.checkPropTypes({\n    [propName]: propType\n  }, props, 'prop', componentName);\n  return null;\n};\n/**\n * Ensure the prop has a value (i.e. treat it as required) when a given sibling prop\n * also has a value, and ensure the prop is of the correct prop-type\n * @param {function} siblingPropName - The name of the sibling prop\n * @return {Error|null} Returns null if all conditions are met, or an error\n * @example\n * import React from 'react'\n * import { requiredIf } from '@dhis2/prop-types'\n *\n * const Test = ({ someBool, someString }) => (\n *     <div>\n *         <h1>someBool: {someBool ? 'true' : 'false'}</h1>\n *         <h1>someString: {someString}</h1>\n *     </div>\n * )\n * Test.propTypes = {\n *     someBool: propTypes.bool,\n *     someString: requiredIf(props => props.someBool, propTypes.string),\n * }\n */\n\n\nexport function requiredIf(condition, propType) {\n  const fn = requiredIfFactory(condition, propType, false);\n  fn.isRequired = requiredIfFactory(condition, propType, true);\n  return fn;\n}"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;EAAA,OAAI,OAAOA,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAA1C,IAAkDA,KAAK,KAAK,EAAhE;AAAA,CAArB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,UAAtB;EAAA,OAAqC,UAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAoC;IACjG,IAAMC,SAAS,GAAGH,KAAK,CAACC,QAAD,CAAvB,CADiG,CAC9D;;IAEnC,IAAIF,UAAJ,EAAgB;MACd,OAAO,IAAIK,KAAJ,qBAAwBH,QAAxB,6BAAqDC,aAArD,6GAAP;IACD;;IAED,IAAI,OAAOL,SAAP,KAAqB,UAAzB,EAAqC;MACnC,OAAO,IAAIO,KAAJ,0FAAP;IACD;;IAED,IAAI,OAAON,QAAP,KAAoB,UAAxB,EAAoC;MAClC,OAAO,IAAIM,KAAJ,yFAAP;IACD,CAbgG,CAa/F;;;IAGF,IAAIP,SAAS,CAACG,KAAD,CAAT,IAAoBN,OAAO,CAACS,SAAD,CAA/B,EAA4C;MAC1C,OAAO,IAAIC,KAAJ,yBAA4BH,QAA5B,4BAAwDC,aAAxD,mEAAgIC,SAAhI,gEAAiMN,SAAS,CAACQ,QAAV,EAAjM,QAAP;IACD,CAlBgG,CAkB/F;IACF;;;IAGAZ,SAAS,CAACa,cAAV,qBACGL,QADH,EACcH,QADd,GAEGE,KAFH,EAEU,MAFV,EAEkBE,aAFlB;IAGA,OAAO,IAAP;EACD,CA1ByB;AAAA,CAA1B;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASK,UAAT,CAAoBV,SAApB,EAA+BC,QAA/B,EAAyC;EAC9C,IAAMU,EAAE,GAAGZ,iBAAiB,CAACC,SAAD,EAAYC,QAAZ,EAAsB,KAAtB,CAA5B;EACAU,EAAE,CAACT,UAAH,GAAgBH,iBAAiB,CAACC,SAAD,EAAYC,QAAZ,EAAsB,IAAtB,CAAjC;EACA,OAAOU,EAAP;AACD"},"metadata":{},"sourceType":"module"}