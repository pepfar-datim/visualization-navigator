import { FieldGroup } from '@dhis2-ui/field';
import React from 'react';
import { Field } from 'react-final-form';
import { formDecorator } from '../formDecorator.js';
import { inputArgType, metaArgType } from '../shared/propTypes.js';
import { RadioFieldFF } from './RadioFieldFF.js';
const description = "\nThe `RadioFieldFF` is a wrapper around a `Radio` that enables it to work with Final Form, the preferred library for form validation and utilities in DHIS 2 apps.\n\n#### Final Form\n\nSee how to use Final Form at [Final Form - Getting Started](https://final-form.org/docs/react-final-form/getting-started).\n\nInside a Final Form `<Form>` component, these 'FF' UI components are intended to be used in the `component` prop of the [Final Form `<Field>` components](https://final-form.org/docs/react-final-form/api/Field) where they will receive some props from the Field, e.g. `<Field component={RadioFieldFF} />`.  See the code samples below for examples.\n\n#### Props\n\nThe props shown in the table below are generally provided to the `RadioFieldFF` wrapper by the Final Form `Field`.\n\nNote that any props beyond the API of the `Field` component will be spread to the `RadioFieldFF`, which passes any extra props to the underlying `Radio` using `{...rest}`.\n\nTherefore, to add any props to the `RadioFieldFF` or `Radio`, add those props to the parent Final Form `Field` component.\n\nAlso see `Radio` for notes about props and implementation.\n\n```js\nimport { RadioFieldFF } from '@dhis2/ui'\n```\n\nPress **Submit** to see the form values logged to the console.\n";
export default {
  title: 'Radio Field (Final Form)',
  component: RadioFieldFF,
  decorators: [formDecorator],
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  argTypes: {
    input: { ...inputArgType
    },
    meta: { ...metaArgType
    }
  }
};
export const Default = () => /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, {
  type: "radio",
  component: RadioFieldFF,
  name: "choice",
  label: "One",
  value: "one"
}), /*#__PURE__*/React.createElement(Field, {
  type: "radio",
  component: RadioFieldFF,
  name: "choice",
  label: "Two",
  value: "two"
}), /*#__PURE__*/React.createElement(Field, {
  type: "radio",
  component: RadioFieldFF,
  name: "choice",
  label: "Three",
  value: "three"
}));
export const Statuses = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FieldGroup, {
  label: "Valid"
}, /*#__PURE__*/React.createElement(Field, {
  type: "radio",
  name: "valid",
  component: RadioFieldFF,
  label: "Valid",
  value: "valid",
  valid: true
})), /*#__PURE__*/React.createElement(FieldGroup, {
  label: "Warning"
}, /*#__PURE__*/React.createElement(Field, {
  type: "radio",
  name: "warning",
  component: RadioFieldFF,
  label: "Warning",
  value: "warning",
  warning: true
})), /*#__PURE__*/React.createElement(FieldGroup, {
  label: "Error"
}, /*#__PURE__*/React.createElement(Field, {
  type: "radio",
  name: "error",
  component: RadioFieldFF,
  label: "Error",
  value: "error",
  error: true
})));